{"version":3,"file":"6.6.js?c7e962eb5e713fa3736f","mappings":"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","sources":["webpack://splunk-assist-main/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/internal/semver.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/diag/types.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/api/diag.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/baggage/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/context/context.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/api/context.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/status.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/api/trace.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/api/propagation.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api/build/esm/index.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/common/attributes.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/utils/merge.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/core/build/esm/utils/url.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/AttributeNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/EventNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/build/esm/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-document-load/build/esm/instrumentation.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/build/esm/enums/AttributeNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ConsoleSpanExporter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/InMemorySpanExporter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SimpleSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-fetch/build/esm/fetch.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-user-interaction/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/enums/AttributeNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/instrumentation.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/EventNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ConsoleSpanExporter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/InMemorySpanExporter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SimpleSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/AttributeNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/xhr.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api-metrics/build/esm/NoopMeter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api-metrics/build/esm/types/Metric.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api-metrics/build/esm/NoopMeterProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api-metrics/build/esm/platform/browser/globalThis.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api-metrics/build/esm/api/global-utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api-metrics/build/esm/index.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/api-metrics/build/esm/api/metrics.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/instrumentation.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/instrumentation/build/esm/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/resources/build/esm/Resource.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/utils/merge.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/resources/build/esm/Resource.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/Sampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ConsoleSpanExporter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/export/InMemorySpanExporter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/index.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/internal/exporter.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SimpleSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/RandomIdGenerator.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOffSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOnSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/ParentBasedSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/TraceIdRatioBasedSampler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/common/attributes.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/utils/promise.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/utils/callback.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/core/build/esm/utils/url.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","webpack://splunk-assist-main/./node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/build/index.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/common/anchored-clock.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/common/attributes.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/ExportResult.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/common/time.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/version.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/environment.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/internal/validators.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/merge.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/url.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/wrap.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/promise.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/utils/callback.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/index.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/core/build/esm/internal/exporter.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/exporter-zipkin/build/src/transform.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@opentelemetry/exporter-zipkin/build/src/types.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@splunk/splunk-utils/config.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-opentelemetry-plugin/node_modules/@splunk/ui-utils/cookie.js","webpack://splunk-assist-main/./node_modules/@splunk/skinny-web-telemetry/build/index.js","webpack://splunk-assist-main/./node_modules/crypto-js/core.js","webpack://splunk-assist-main/./node_modules/crypto-js/sha256.js","webpack://splunk-assist-main/./node_modules/detect-browser/es/index.js","webpack://splunk-assist-main/./node_modules/lodash/_arrayReduce.js","webpack://splunk-assist-main/./node_modules/lodash/_baseReduce.js","webpack://splunk-assist-main/./node_modules/lodash/reduce.js","webpack://splunk-assist-main/./node_modules/shimmer/index.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api-metrics and\n// @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.0.4';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../version';\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport var isCompatible = _makeCompatibilityCheck(VERSION);\n//# sourceMappingURL=semver.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\nvar major = VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _globalThis;\nexport function registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: VERSION,\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error('@opentelemetry/api: All API registration versions must match');\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + VERSION + \".\");\n    return true;\n}\nexport function getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexport function unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + VERSION + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal } from '../internal/global-utils';\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\nexport { DiagComponentLogger };\nfunction logProxy(funcName, namespace, args) {\n    var logger = getGlobal('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, args);\n}\n//# sourceMappingURL=ComponentLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport var DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport { DiagLogLevel, } from '../diag/types';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var logger = getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, args);\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        self.setLogger = function (logger, logLevel) {\n            var _a, _b;\n            if (logLevel === void 0) { logLevel = DiagLogLevel.INFO; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            var oldLogger = getGlobal('diag');\n            var newLogger = createLogLevelDiagLogger(logLevel, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger) {\n                var stack = (_b = new Error().stack) !== null && _b !== void 0 ? _b : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return registerGlobal('diag', newLogger, self, true);\n        };\n        self.disable = function () {\n            unregisterGlobal(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new DiagComponentLogger(options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexport { DiagAPI };\n//# sourceMappingURL=diag.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '../types';\nexport function createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < DiagLogLevel.NONE) {\n        maxLevel = DiagLogLevel.NONE;\n    }\n    else if (maxLevel > DiagLogLevel.ALL) {\n        maxLevel = DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', DiagLogLevel.WARN),\n        info: _filterFunc('info', DiagLogLevel.INFO),\n        debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexport { BaggageImpl };\n//# sourceMappingURL=baggage-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nvar diag = DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    // eslint-disable-next-line no-console\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        // eslint-disable-next-line no-console\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, args);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\nexport { DiagConsoleLogger };\n//# sourceMappingURL=consoleLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexport var defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexport var ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { ROOT_CONTEXT } from './context';\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], args));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexport { NoopContextManager };\n//# sourceMappingURL=NoopContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], args));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return ContextAPI;\n}());\nexport { ContextAPI };\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from './trace_flags';\nexport var INVALID_SPANID = '0000000000000000';\nexport var INVALID_TRACEID = '00000000000000000000000000000000';\nexport var INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: TraceFlags.NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\nexport { NonRecordingSpan };\n//# sourceMappingURL=NonRecordingSpan.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n    return setSpan(context, new NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexport function isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\nexport function isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext) {\n    return new NonRecordingSpan(spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { isSpanContextValid } from './spancontext-utils';\nvar context = ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NonRecordingSpan();\n        }\n        var parentFromContext = context && getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            isSpanContextValid(parentFromContext)) {\n            return new NonRecordingSpan(parentFromContext);\n        }\n        else {\n            return new NonRecordingSpan();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = setSpan(parentContext, span);\n        return context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\nexport { NoopTracer };\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","/**\n * An enumeration of status codes.\n */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\nvar NOOP_TRACER = new NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexport { ProxyTracer };\n//# sourceMappingURL=ProxyTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nvar NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version)) !== null && _a !== void 0 ? _a : new ProxyTracer(this, name, version));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version);\n    };\n    return ProxyTracerProvider;\n}());\nexport { ProxyTracerProvider };\n//# sourceMappingURL=ProxyTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version) {\n        return new NoopTracer();\n    };\n    return NoopTracerProvider;\n}());\nexport { NoopTracerProvider };\n//# sourceMappingURL=NoopTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport { isSpanContextValid, wrapSpanContext, } from '../trace/spancontext-utils';\nimport { deleteSpan, getSpan, getSpanContext, setSpan, setSpanContext, } from '../trace/context-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider();\n        this.wrapSpanContext = wrapSpanContext;\n        this.isSpanContextValid = isSpanContextValid;\n        this.deleteSpan = deleteSpan;\n        this.getSpan = getSpan;\n        this.getSpanContext = getSpanContext;\n        this.setSpan = setSpan;\n        this.setSpanContext = setSpanContext;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = registerGlobal(API_NAME, this._proxyTracerProvider, DiagAPI.instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n        this._proxyTracerProvider = new ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexport { TraceAPI };\n//# sourceMappingURL=trace.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexport { NoopTextMapPropagator };\n//# sourceMappingURL=NoopTextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport { defaultTextMapGetter, defaultTextMapSetter, } from '../propagation/TextMapPropagator';\nimport { getBaggage, setBaggage, deleteBaggage, } from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = createBaggage;\n        this.getBaggage = getBaggage;\n        this.setBaggage = setBaggage;\n        this.deleteBaggage = deleteBaggage;\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexport { PropagationAPI };\n//# sourceMappingURL=propagation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport * from './common/Exception';\nexport * from './common/Time';\nexport * from './diag';\nexport * from './propagation/TextMapPropagator';\nexport * from './trace/attributes';\nexport * from './trace/link';\nexport * from './trace/ProxyTracer';\nexport * from './trace/ProxyTracerProvider';\nexport * from './trace/Sampler';\nexport * from './trace/SamplingResult';\nexport * from './trace/span_context';\nexport * from './trace/span_kind';\nexport * from './trace/span';\nexport * from './trace/SpanOptions';\nexport * from './trace/status';\nexport * from './trace/trace_flags';\nexport * from './trace/trace_state';\nexport * from './trace/tracer_provider';\nexport * from './trace/tracer';\nexport { isSpanContextValid, isValidTraceId, isValidSpanId, } from './trace/spancontext-utils';\nexport { INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT, } from './trace/invalid-span-constants';\nexport * from './context/context';\nexport * from './context/types';\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\nexport default {\n    trace: trace,\n    context: context,\n    propagation: propagation,\n    diag: diag,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        if (!headerValue)\n            return context;\n        var baggage = {};\n        if (headerValue.length === 0) {\n            return context;\n        }\n        var pairs = headerValue.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage\n        .getAllEntries()\n        .map(function (_a) {\n        var key = _a[0], value = _a[1];\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","export function sanitizeAttributes(attributes) {\n    var out = {};\n    if (attributes == null || typeof attributes !== 'object') {\n        return out;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    for (var _i = 0, _a = Object.entries(attributes); _i < _a.length; _i++) {\n        var _b = _a[_i], k = _b[0], v = _b[1];\n        if (isAttributeValue(v)) {\n            if (Array.isArray(v)) {\n                out[k] = v.slice();\n            }\n            else {\n                out[k] = v;\n            }\n        }\n    }\n    return out;\n}\nexport function isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n    var type;\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var element = arr_1[_i];\n        // null/undefined elements are allowed\n        if (element == null)\n            continue;\n        if (!type) {\n            if (isValidPrimitiveAttributeValue(element)) {\n                type = typeof element;\n                continue;\n            }\n            // encountered an invalid primitive\n            return false;\n        }\n        if (typeof element === type) {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n            return true;\n        case 'boolean':\n            return true;\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: 'none',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var globalEnv = parseEnvironment(_globalThis);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n//# sourceMappingURL=environment.js.map","var SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.0.1';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer) { }\n//# sourceMappingURL=timer-util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = numberToHrtime(getTimeOrigin());\n    var now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    var seconds = timeOrigin[0] + now[0];\n    var nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        for (var _i = 0, _a = this._propagators; _i < _a.length; _i++) {\n            var propagator = _a[_i];\n            try {\n                propagator.inject(context, carrier, setter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar RPC_METADATA_KEY = createContextKey('OpenTelemetry SDK Context Key RPC_METADATA');\nexport var RPCType;\n(function (RPCType) {\n    RPCType[\"HTTP\"] = \"http\";\n})(RPCType || (RPCType = {}));\nexport function setRPCMetadata(context, meta) {\n    return context.setValue(RPC_METADATA_KEY, meta);\n}\nexport function deleteRPCMetadata(context) {\n    return context.deleteValue(RPC_METADATA_KEY);\n}\nexport function getRPCMetadata(context) {\n    return context.getValue(RPC_METADATA_KEY);\n}\n//# sourceMappingURL=rpc-metadata.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/** Sampler that samples no traces. */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString;\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/** Sampler that samples all traces. */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision, isValidTraceId, } from '@opentelemetry/api';\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isPlainObject } from './lodash.merge';\nvar MAX_LEVEL = 20;\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var result = args.shift();\n    var objects = new WeakMap();\n    while (args.length > 0) {\n        result = mergeTwoObjects(result, args.shift(), 0, objects);\n    }\n    return result;\n}\nfunction takeValue(value) {\n    if (isArray(value)) {\n        return value.slice();\n    }\n    return value;\n}\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(one, two, level, objects) {\n    if (level === void 0) { level = 0; }\n    var result;\n    if (level > MAX_LEVEL) {\n        return undefined;\n    }\n    level++;\n    if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n        result = takeValue(two);\n    }\n    else if (isArray(one)) {\n        result = one.slice();\n        if (isArray(two)) {\n            for (var i = 0, j = two.length; i < j; i++) {\n                result.push(takeValue(two[i]));\n            }\n        }\n        else if (isObject(two)) {\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                result[key] = takeValue(two[key]);\n            }\n        }\n    }\n    else if (isObject(one)) {\n        if (isObject(two)) {\n            if (!shouldMerge(one, two)) {\n                return two;\n            }\n            result = Object.assign({}, one);\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                var twoValue = two[key];\n                if (isPrimitive(twoValue)) {\n                    if (typeof twoValue === 'undefined') {\n                        delete result[key];\n                    }\n                    else {\n                        // result[key] = takeValue(twoValue);\n                        result[key] = twoValue;\n                    }\n                }\n                else {\n                    var obj1 = result[key];\n                    var obj2 = twoValue;\n                    if (wasObjectReferenced(one, key, objects) ||\n                        wasObjectReferenced(two, key, objects)) {\n                        delete result[key];\n                    }\n                    else {\n                        if (isObject(obj1) && isObject(obj2)) {\n                            var arr1 = objects.get(obj1) || [];\n                            var arr2 = objects.get(obj2) || [];\n                            arr1.push({ obj: one, key: key });\n                            arr2.push({ obj: two, key: key });\n                            objects.set(obj1, arr1);\n                            objects.set(obj2, arr2);\n                        }\n                        result[key] = mergeTwoObjects(result[key], twoValue, level, objects);\n                    }\n                }\n            }\n        }\n        else {\n            result = two;\n        }\n    }\n    return result;\n}\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(obj, key, objects) {\n    var arr = objects.get(obj[key]) || [];\n    for (var i = 0, j = arr.length; i < j; i++) {\n        var info = arr[i];\n        if (info.key === key && info.obj === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isObject(value) {\n    return !isPrimitive(value) && !isArray(value) && !isFunction(value) && typeof value === 'object';\n}\nfunction isPrimitive(value) {\n    return typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        typeof value === 'undefined' ||\n        value instanceof Date ||\n        value instanceof RegExp ||\n        value === null;\n}\nfunction shouldMerge(one, two) {\n    if (!isPlainObject(one) || !isPlainObject(two)) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(url, ignoredUrls) {\n    if (!ignoredUrls) {\n        return false;\n    }\n    for (var _i = 0, ignoredUrls_1 = ignoredUrls; _i < ignoredUrls_1.length; _i++) {\n        var ignoreUrl = ignoredUrls_1[_i];\n        if (urlMatches(url, ignoreUrl)) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=url.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"COMPONENT\"] = \"component\";\n    AttributeNames[\"DOCUMENT_LOAD\"] = \"documentLoad\";\n    AttributeNames[\"DOCUMENT_FETCH\"] = \"documentFetch\";\n    AttributeNames[\"RESOURCE_FETCH\"] = \"resourceFetch\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '0.27.1';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var EventNames;\n(function (EventNames) {\n    EventNames[\"FIRST_PAINT\"] = \"firstPaint\";\n    EventNames[\"FIRST_CONTENTFUL_PAINT\"] = \"firstContentfulPaint\";\n})(EventNames || (EventNames = {}));\n//# sourceMappingURL=EventNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticAttributes = {\n    /**\n     * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n     *\n     * Note: This may be different from `faas.id` if an alias is involved.\n     */\n    AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n    /**\n     * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n     */\n    DB_SYSTEM: 'db.system',\n    /**\n     * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n     */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n     * Username for accessing the database.\n     */\n    DB_USER: 'db.user',\n    /**\n     * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n     */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    /**\n     * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n     *\n     * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n     */\n    DB_NAME: 'db.name',\n    /**\n     * The database statement being executed.\n     *\n     * Note: The value may be sanitized to exclude sensitive information.\n     */\n    DB_STATEMENT: 'db.statement',\n    /**\n     * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n     *\n     * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n     */\n    DB_OPERATION: 'db.operation',\n    /**\n     * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n     *\n     * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n     */\n    DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n     * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n     * The fetch size used for paging, i.e. how many rows will be returned at once.\n     */\n    DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n    /**\n     * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n     */\n    DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_CASSANDRA_TABLE: 'db.cassandra.table',\n    /**\n     * Whether or not the query is idempotent.\n     */\n    DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n    /**\n     * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n     */\n    DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n    /**\n     * The ID of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n    /**\n     * The data center of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n    /**\n     * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n     * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n     */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n     * The collection being accessed within the database stated in `db.name`.\n     */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_SQL_TABLE: 'db.sql.table',\n    /**\n     * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n     */\n    EXCEPTION_TYPE: 'exception.type',\n    /**\n     * The exception message.\n     */\n    EXCEPTION_MESSAGE: 'exception.message',\n    /**\n     * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n     */\n    EXCEPTION_STACKTRACE: 'exception.stacktrace',\n    /**\n    * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n    *\n    * Note: An exception is considered to have escaped (or left) the scope of a span,\n  if that span is ended while the exception is still logically &#34;in flight&#34;.\n  This may be actually &#34;in flight&#34; in some languages (e.g. if the exception\n  is passed to a Context manager&#39;s `__exit__` method in Python) but will\n  usually be caught at the point of recording the exception in most languages.\n  \n  It is usually not possible to determine at the point where an exception is thrown\n  whether it will escape the scope of a span.\n  However, it is trivial to know that an exception\n  will escape, if one checks for an active exception just before ending the span,\n  as done in the [example above](#exception-end-example).\n  \n  It follows that an exception may still escape the scope of the span\n  even if the `exception.escaped` attribute was not set or set to false,\n  since the event might have been recorded at a time where it was not\n  clear whether the exception will escape.\n    */\n    EXCEPTION_ESCAPED: 'exception.escaped',\n    /**\n     * Type of the trigger on which the function is executed.\n     */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n     * The execution ID of the current function execution.\n     */\n    FAAS_EXECUTION: 'faas.execution',\n    /**\n     * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n     */\n    FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n    /**\n     * Describes the type of the operation that was performed on the data.\n     */\n    FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n    /**\n     * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_DOCUMENT_TIME: 'faas.document.time',\n    /**\n     * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n     */\n    FAAS_DOCUMENT_NAME: 'faas.document.name',\n    /**\n     * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_TIME: 'faas.time',\n    /**\n     * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n     */\n    FAAS_CRON: 'faas.cron',\n    /**\n     * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n     */\n    FAAS_COLDSTART: 'faas.coldstart',\n    /**\n     * The name of the invoked function.\n     *\n     * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n     * The cloud provider of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n     * The cloud region of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    /**\n     * Transport protocol used. See note below.\n     */\n    NET_TRANSPORT: 'net.transport',\n    /**\n     * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n     */\n    NET_PEER_IP: 'net.peer.ip',\n    /**\n     * Remote port number.\n     */\n    NET_PEER_PORT: 'net.peer.port',\n    /**\n     * Remote hostname or similar, see note below.\n     */\n    NET_PEER_NAME: 'net.peer.name',\n    /**\n     * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n     */\n    NET_HOST_IP: 'net.host.ip',\n    /**\n     * Like `net.peer.port` but for the host port.\n     */\n    NET_HOST_PORT: 'net.host.port',\n    /**\n     * Local hostname or similar, see note below.\n     */\n    NET_HOST_NAME: 'net.host.name',\n    /**\n     * The internet connection type currently being used by the host.\n     */\n    NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n    /**\n     * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n     */\n    NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n    /**\n     * The name of the mobile carrier.\n     */\n    NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n    /**\n     * The mobile carrier country code.\n     */\n    NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n    /**\n     * The mobile carrier network code.\n     */\n    NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n    /**\n     * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n     */\n    NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n    /**\n     * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n     */\n    PEER_SERVICE: 'peer.service',\n    /**\n     * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n     */\n    ENDUSER_ID: 'enduser.id',\n    /**\n     * Actual/assumed role the client is making the request under extracted from token or application security context.\n     */\n    ENDUSER_ROLE: 'enduser.role',\n    /**\n     * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n     */\n    ENDUSER_SCOPE: 'enduser.scope',\n    /**\n     * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n     */\n    THREAD_ID: 'thread.id',\n    /**\n     * Current thread name.\n     */\n    THREAD_NAME: 'thread.name',\n    /**\n     * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n     */\n    CODE_FUNCTION: 'code.function',\n    /**\n     * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n     */\n    CODE_NAMESPACE: 'code.namespace',\n    /**\n     * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n     */\n    CODE_FILEPATH: 'code.filepath',\n    /**\n     * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n     */\n    CODE_LINENO: 'code.lineno',\n    /**\n     * HTTP request method.\n     */\n    HTTP_METHOD: 'http.method',\n    /**\n     * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n     *\n     * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n     */\n    HTTP_URL: 'http.url',\n    /**\n     * The full request target as passed in a HTTP request line or equivalent.\n     */\n    HTTP_TARGET: 'http.target',\n    /**\n     * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n     *\n     * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n     */\n    HTTP_HOST: 'http.host',\n    /**\n     * The URI scheme identifying the used protocol.\n     */\n    HTTP_SCHEME: 'http.scheme',\n    /**\n     * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n     */\n    HTTP_STATUS_CODE: 'http.status_code',\n    /**\n     * Kind of HTTP protocol used.\n     *\n     * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n     */\n    HTTP_FLAVOR: 'http.flavor',\n    /**\n     * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n     */\n    HTTP_USER_AGENT: 'http.user_agent',\n    /**\n     * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    /**\n     * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    /**\n     * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    /**\n     * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    /**\n     * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n     *\n     * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n     */\n    HTTP_SERVER_NAME: 'http.server_name',\n    /**\n     * The matched route (path template).\n     */\n    HTTP_ROUTE: 'http.route',\n    /**\n    * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n    *\n    * Note: This is not necessarily the same as `net.peer.ip`, which would\n  identify the network-level peer, which may be a proxy.\n  \n  This attribute should be set when a source of information different\n  from the one used for `net.peer.ip`, is available even if that other\n  source just confirms the same value as `net.peer.ip`.\n  Rationale: For `net.peer.ip`, one typically does not know if it\n  comes from a proxy, reverse proxy, or the actual client. Setting\n  `http.client_ip` when it&#39;s the same as `net.peer.ip` means that\n  one is at least somewhat confident that the address is not that of\n  the closest proxy.\n    */\n    HTTP_CLIENT_IP: 'http.client_ip',\n    /**\n     * The keys in the `RequestItems` object field.\n     */\n    AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n    /**\n     * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n     */\n    AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n    /**\n     * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n     */\n    AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n    /**\n     * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n    /**\n     * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n    /**\n     * The value of the `ConsistentRead` request parameter.\n     */\n    AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n    /**\n     * The value of the `ProjectionExpression` request parameter.\n     */\n    AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n    /**\n     * The value of the `Limit` request parameter.\n     */\n    AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n    /**\n     * The value of the `AttributesToGet` request parameter.\n     */\n    AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n    /**\n     * The value of the `IndexName` request parameter.\n     */\n    AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n    /**\n     * The value of the `Select` request parameter.\n     */\n    AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n    /**\n     * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n    /**\n     * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n    /**\n     * The value of the `ExclusiveStartTableName` request parameter.\n     */\n    AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n    /**\n     * The the number of items in the `TableNames` response parameter.\n     */\n    AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n    /**\n     * The value of the `ScanIndexForward` request parameter.\n     */\n    AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n    /**\n     * The value of the `Segment` request parameter.\n     */\n    AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n    /**\n     * The value of the `TotalSegments` request parameter.\n     */\n    AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n    /**\n     * The value of the `Count` response parameter.\n     */\n    AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n    /**\n     * The value of the `ScannedCount` response parameter.\n     */\n    AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n    /**\n     * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n     */\n    AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n    /**\n     * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n    /**\n     * A string identifying the messaging system.\n     */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n     * The message destination name. This might be equal to the span name but is required nevertheless.\n     */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n     * The kind of message destination.\n     */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n     * A boolean that is true if the message destination is temporary.\n     */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n     * The name of the transport protocol.\n     */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n     * The version of the transport protocol.\n     */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n     * Connection string.\n     */\n    MESSAGING_URL: 'messaging.url',\n    /**\n     * A value used by the messaging system as an identifier for the message, represented as a string.\n     */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n     * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n     */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n     * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n     * The compressed size of the message payload in bytes.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n     * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n     */\n    MESSAGING_OPERATION: 'messaging.operation',\n    /**\n     * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n     */\n    MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n    /**\n     * RabbitMQ message routing key.\n     */\n    MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n    /**\n     * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n     *\n     * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n     */\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    /**\n     * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n     */\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    /**\n     * Client Id for the Consumer or Producer that is handling the message.\n     */\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    /**\n     * Partition the message is sent to.\n     */\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    /**\n     * A boolean that is true if the message is a tombstone.\n     */\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n    /**\n     * A string identifying the remoting system.\n     */\n    RPC_SYSTEM: 'rpc.system',\n    /**\n     * The full (logical) name of the service being called, including its package name, if applicable.\n     *\n     * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n     */\n    RPC_SERVICE: 'rpc.service',\n    /**\n     * The name of the (logical) method being called, must be equal to the $method part in the span name.\n     *\n     * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n     */\n    RPC_METHOD: 'rpc.method',\n    /**\n     * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n     */\n    RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n    /**\n     * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n     */\n    RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n    /**\n     * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n     */\n    RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n    /**\n     * `error.code` property of response if it is an error response.\n     */\n    RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n    /**\n     * `error.message` property of response if it is an error response.\n     */\n    RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n    /**\n     * Whether this is a received or sent message.\n     */\n    MESSAGE_TYPE: 'message.type',\n    /**\n     * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n     *\n     * Note: This way we guarantee that the values will be consistent between different implementations.\n     */\n    MESSAGE_ID: 'message.id',\n    /**\n     * Compressed size of the message in bytes.\n     */\n    MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n    /**\n     * Uncompressed size of the message in bytes.\n     */\n    MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\nexport var DbSystemValues = {\n    /** Some other SQL database. Fallback only. See notes. */\n    OTHER_SQL: 'other_sql',\n    /** Microsoft SQL Server. */\n    MSSQL: 'mssql',\n    /** MySQL. */\n    MYSQL: 'mysql',\n    /** Oracle Database. */\n    ORACLE: 'oracle',\n    /** IBM Db2. */\n    DB2: 'db2',\n    /** PostgreSQL. */\n    POSTGRESQL: 'postgresql',\n    /** Amazon Redshift. */\n    REDSHIFT: 'redshift',\n    /** Apache Hive. */\n    HIVE: 'hive',\n    /** Cloudscape. */\n    CLOUDSCAPE: 'cloudscape',\n    /** HyperSQL DataBase. */\n    HSQLDB: 'hsqldb',\n    /** Progress Database. */\n    PROGRESS: 'progress',\n    /** SAP MaxDB. */\n    MAXDB: 'maxdb',\n    /** SAP HANA. */\n    HANADB: 'hanadb',\n    /** Ingres. */\n    INGRES: 'ingres',\n    /** FirstSQL. */\n    FIRSTSQL: 'firstsql',\n    /** EnterpriseDB. */\n    EDB: 'edb',\n    /** InterSystems Caché. */\n    CACHE: 'cache',\n    /** Adabas (Adaptable Database System). */\n    ADABAS: 'adabas',\n    /** Firebird. */\n    FIREBIRD: 'firebird',\n    /** Apache Derby. */\n    DERBY: 'derby',\n    /** FileMaker. */\n    FILEMAKER: 'filemaker',\n    /** Informix. */\n    INFORMIX: 'informix',\n    /** InstantDB. */\n    INSTANTDB: 'instantdb',\n    /** InterBase. */\n    INTERBASE: 'interbase',\n    /** MariaDB. */\n    MARIADB: 'mariadb',\n    /** Netezza. */\n    NETEZZA: 'netezza',\n    /** Pervasive PSQL. */\n    PERVASIVE: 'pervasive',\n    /** PointBase. */\n    POINTBASE: 'pointbase',\n    /** SQLite. */\n    SQLITE: 'sqlite',\n    /** Sybase. */\n    SYBASE: 'sybase',\n    /** Teradata. */\n    TERADATA: 'teradata',\n    /** Vertica. */\n    VERTICA: 'vertica',\n    /** H2. */\n    H2: 'h2',\n    /** ColdFusion IMQ. */\n    COLDFUSION: 'coldfusion',\n    /** Apache Cassandra. */\n    CASSANDRA: 'cassandra',\n    /** Apache HBase. */\n    HBASE: 'hbase',\n    /** MongoDB. */\n    MONGODB: 'mongodb',\n    /** Redis. */\n    REDIS: 'redis',\n    /** Couchbase. */\n    COUCHBASE: 'couchbase',\n    /** CouchDB. */\n    COUCHDB: 'couchdb',\n    /** Microsoft Azure Cosmos DB. */\n    COSMOSDB: 'cosmosdb',\n    /** Amazon DynamoDB. */\n    DYNAMODB: 'dynamodb',\n    /** Neo4j. */\n    NEO4J: 'neo4j',\n    /** Apache Geode. */\n    GEODE: 'geode',\n    /** Elasticsearch. */\n    ELASTICSEARCH: 'elasticsearch',\n    /** Memcached. */\n    MEMCACHED: 'memcached',\n    /** CockroachDB. */\n    COCKROACHDB: 'cockroachdb',\n};\nexport var DbCassandraConsistencyLevelValues = {\n    /** all. */\n    ALL: 'all',\n    /** each_quorum. */\n    EACH_QUORUM: 'each_quorum',\n    /** quorum. */\n    QUORUM: 'quorum',\n    /** local_quorum. */\n    LOCAL_QUORUM: 'local_quorum',\n    /** one. */\n    ONE: 'one',\n    /** two. */\n    TWO: 'two',\n    /** three. */\n    THREE: 'three',\n    /** local_one. */\n    LOCAL_ONE: 'local_one',\n    /** any. */\n    ANY: 'any',\n    /** serial. */\n    SERIAL: 'serial',\n    /** local_serial. */\n    LOCAL_SERIAL: 'local_serial',\n};\nexport var FaasTriggerValues = {\n    /** A response to some data source operation such as a database or filesystem read/write. */\n    DATASOURCE: 'datasource',\n    /** To provide an answer to an inbound HTTP request. */\n    HTTP: 'http',\n    /** A function is set to be executed when messages are sent to a messaging system. */\n    PUBSUB: 'pubsub',\n    /** A function is scheduled to be executed regularly. */\n    TIMER: 'timer',\n    /** If none of the others apply. */\n    OTHER: 'other',\n};\nexport var FaasDocumentOperationValues = {\n    /** When a new object is created. */\n    INSERT: 'insert',\n    /** When an object is modified. */\n    EDIT: 'edit',\n    /** When an object is deleted. */\n    DELETE: 'delete',\n};\nexport var FaasInvokedProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var NetTransportValues = {\n    /** ip_tcp. */\n    IP_TCP: 'ip_tcp',\n    /** ip_udp. */\n    IP_UDP: 'ip_udp',\n    /** Another IP-based protocol. */\n    IP: 'ip',\n    /** Unix Domain socket. See below. */\n    UNIX: 'unix',\n    /** Named or anonymous pipe. See note below. */\n    PIPE: 'pipe',\n    /** In-process communication. */\n    INPROC: 'inproc',\n    /** Something else (non IP-based). */\n    OTHER: 'other',\n};\nexport var NetHostConnectionTypeValues = {\n    /** wifi. */\n    WIFI: 'wifi',\n    /** wired. */\n    WIRED: 'wired',\n    /** cell. */\n    CELL: 'cell',\n    /** unavailable. */\n    UNAVAILABLE: 'unavailable',\n    /** unknown. */\n    UNKNOWN: 'unknown',\n};\nexport var NetHostConnectionSubtypeValues = {\n    /** GPRS. */\n    GPRS: 'gprs',\n    /** EDGE. */\n    EDGE: 'edge',\n    /** UMTS. */\n    UMTS: 'umts',\n    /** CDMA. */\n    CDMA: 'cdma',\n    /** EVDO Rel. 0. */\n    EVDO_0: 'evdo_0',\n    /** EVDO Rev. A. */\n    EVDO_A: 'evdo_a',\n    /** CDMA2000 1XRTT. */\n    CDMA2000_1XRTT: 'cdma2000_1xrtt',\n    /** HSDPA. */\n    HSDPA: 'hsdpa',\n    /** HSUPA. */\n    HSUPA: 'hsupa',\n    /** HSPA. */\n    HSPA: 'hspa',\n    /** IDEN. */\n    IDEN: 'iden',\n    /** EVDO Rev. B. */\n    EVDO_B: 'evdo_b',\n    /** LTE. */\n    LTE: 'lte',\n    /** EHRPD. */\n    EHRPD: 'ehrpd',\n    /** HSPAP. */\n    HSPAP: 'hspap',\n    /** GSM. */\n    GSM: 'gsm',\n    /** TD-SCDMA. */\n    TD_SCDMA: 'td_scdma',\n    /** IWLAN. */\n    IWLAN: 'iwlan',\n    /** 5G NR (New Radio). */\n    NR: 'nr',\n    /** 5G NRNSA (New Radio Non-Standalone). */\n    NRNSA: 'nrnsa',\n    /** LTE CA. */\n    LTE_CA: 'lte_ca',\n};\nexport var HttpFlavorValues = {\n    /** HTTP 1.0. */\n    HTTP_1_0: '1.0',\n    /** HTTP 1.1. */\n    HTTP_1_1: '1.1',\n    /** HTTP 2. */\n    HTTP_2_0: '2.0',\n    /** SPDY protocol. */\n    SPDY: 'SPDY',\n    /** QUIC protocol. */\n    QUIC: 'QUIC',\n};\nexport var MessagingDestinationKindValues = {\n    /** A message sent to a queue. */\n    QUEUE: 'queue',\n    /** A message sent to a topic. */\n    TOPIC: 'topic',\n};\nexport var MessagingOperationValues = {\n    /** receive. */\n    RECEIVE: 'receive',\n    /** process. */\n    PROCESS: 'process',\n};\nexport var RpcGrpcStatusCodeValues = {\n    /** OK. */\n    OK: 0,\n    /** CANCELLED. */\n    CANCELLED: 1,\n    /** UNKNOWN. */\n    UNKNOWN: 2,\n    /** INVALID_ARGUMENT. */\n    INVALID_ARGUMENT: 3,\n    /** DEADLINE_EXCEEDED. */\n    DEADLINE_EXCEEDED: 4,\n    /** NOT_FOUND. */\n    NOT_FOUND: 5,\n    /** ALREADY_EXISTS. */\n    ALREADY_EXISTS: 6,\n    /** PERMISSION_DENIED. */\n    PERMISSION_DENIED: 7,\n    /** RESOURCE_EXHAUSTED. */\n    RESOURCE_EXHAUSTED: 8,\n    /** FAILED_PRECONDITION. */\n    FAILED_PRECONDITION: 9,\n    /** ABORTED. */\n    ABORTED: 10,\n    /** OUT_OF_RANGE. */\n    OUT_OF_RANGE: 11,\n    /** UNIMPLEMENTED. */\n    UNIMPLEMENTED: 12,\n    /** INTERNAL. */\n    INTERNAL: 13,\n    /** UNAVAILABLE. */\n    UNAVAILABLE: 14,\n    /** DATA_LOSS. */\n    DATA_LOSS: 15,\n    /** UNAUTHENTICATED. */\n    UNAUTHENTICATED: 16,\n};\nexport var MessageTypeValues = {\n    /** sent. */\n    SENT: 'SENT',\n    /** received. */\n    RECEIVED: 'RECEIVED',\n};\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance } from '@opentelemetry/core';\nimport { hasKey, PerformanceTimingNames as PTN, } from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nexport var getPerformanceNavigationEntries = function () {\n    var _a, _b;\n    var entries = {};\n    var performanceNavigationTiming = (_b = (_a = otperformance).getEntriesByType) === null || _b === void 0 ? void 0 : _b.call(_a, 'navigation')[0];\n    if (performanceNavigationTiming) {\n        var keys = Object.values(PTN);\n        keys.forEach(function (key) {\n            if (hasKey(performanceNavigationTiming, key)) {\n                var value = performanceNavigationTiming[key];\n                if (typeof value === 'number') {\n                    entries[key] = value;\n                }\n            }\n        });\n    }\n    else {\n        // // fallback to previous version\n        var perf = otperformance;\n        var performanceTiming_1 = perf.timing;\n        if (performanceTiming_1) {\n            var keys = Object.values(PTN);\n            keys.forEach(function (key) {\n                if (hasKey(performanceTiming_1, key)) {\n                    var value = performanceTiming_1[key];\n                    if (typeof value === 'number') {\n                        entries[key] = value;\n                    }\n                }\n            });\n        }\n    }\n    return entries;\n};\nvar performancePaintNames = {\n    'first-paint': EventNames.FIRST_PAINT,\n    'first-contentful-paint': EventNames.FIRST_CONTENTFUL_PAINT,\n};\nexport var addSpanPerformancePaintEvents = function (span) {\n    var _a, _b;\n    var performancePaintTiming = (_b = (_a = otperformance).getEntriesByType) === null || _b === void 0 ? void 0 : _b.call(_a, 'paint');\n    if (performancePaintTiming) {\n        performancePaintTiming.forEach(function (_a) {\n            var name = _a.name, startTime = _a.startTime;\n            if (hasKey(performancePaintNames, name)) {\n                span.addEvent(performancePaintNames[name], startTime);\n            }\n        });\n    }\n};\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { context, propagation, trace, ROOT_CONTEXT, } from '@opentelemetry/api';\nimport { otperformance, TRACE_PARENT_HEADER } from '@opentelemetry/core';\nimport { addSpanNetworkEvent, addSpanNetworkEvents, hasKey, PerformanceTimingNames as PTN, } from '@opentelemetry/sdk-trace-web';\nimport { InstrumentationBase, } from '@opentelemetry/instrumentation';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { VERSION } from './version';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { addSpanPerformancePaintEvents, getPerformanceNavigationEntries, } from './utils';\n/**\n * This class represents a document load plugin\n */\nvar DocumentLoadInstrumentation = /** @class */ (function (_super) {\n    __extends(DocumentLoadInstrumentation, _super);\n    /**\n     *\n     * @param config\n     */\n    function DocumentLoadInstrumentation(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, '@opentelemetry/instrumentation-document-load', VERSION, config) || this;\n        _this.component = 'document-load';\n        _this.version = '1';\n        _this.moduleName = _this.component;\n        return _this;\n    }\n    DocumentLoadInstrumentation.prototype.init = function () { };\n    /**\n     * callback to be executed when page is loaded\n     */\n    DocumentLoadInstrumentation.prototype._onDocumentLoaded = function () {\n        var _this = this;\n        // Timeout is needed as load event doesn't have yet the performance metrics for loadEnd.\n        // Support for event \"loadend\" is very limited and cannot be used\n        window.setTimeout(function () {\n            _this._collectPerformance();\n        });\n    };\n    /**\n     * Adds spans for all resources\n     * @param rootSpan\n     */\n    DocumentLoadInstrumentation.prototype._addResourcesSpans = function (rootSpan) {\n        var _this = this;\n        var _a, _b;\n        var resources = (_b = (_a = otperformance).getEntriesByType) === null || _b === void 0 ? void 0 : _b.call(_a, 'resource');\n        if (resources) {\n            resources.forEach(function (resource) {\n                _this._initResourceSpan(resource, rootSpan);\n            });\n        }\n    };\n    /**\n     * Collects information about performance and creates appropriate spans\n     */\n    DocumentLoadInstrumentation.prototype._collectPerformance = function () {\n        var _this = this;\n        var metaElement = Array.from(document.getElementsByTagName('meta')).find(function (e) { return e.getAttribute('name') === TRACE_PARENT_HEADER; });\n        var entries = getPerformanceNavigationEntries();\n        var traceparent = (metaElement && metaElement.content) || '';\n        context.with(propagation.extract(ROOT_CONTEXT, { traceparent: traceparent }), function () {\n            var rootSpan = _this._startSpan(AttributeNames.DOCUMENT_LOAD, PTN.FETCH_START, entries);\n            if (!rootSpan) {\n                return;\n            }\n            context.with(trace.setSpan(context.active(), rootSpan), function () {\n                var fetchSpan = _this._startSpan(AttributeNames.DOCUMENT_FETCH, PTN.FETCH_START, entries);\n                if (fetchSpan) {\n                    context.with(trace.setSpan(context.active(), fetchSpan), function () {\n                        addSpanNetworkEvents(fetchSpan, entries);\n                        _this._endSpan(fetchSpan, PTN.RESPONSE_END, entries);\n                    });\n                }\n            });\n            rootSpan.setAttribute(SemanticAttributes.HTTP_URL, location.href);\n            rootSpan.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n            _this._addResourcesSpans(rootSpan);\n            addSpanNetworkEvent(rootSpan, PTN.FETCH_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_END, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_INTERACTIVE, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_END, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_COMPLETE, entries);\n            addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_END, entries);\n            addSpanPerformancePaintEvents(rootSpan);\n            _this._endSpan(rootSpan, PTN.LOAD_EVENT_END, entries);\n        });\n    };\n    /**\n     * Helper function for ending span\n     * @param span\n     * @param performanceName name of performance entry for time end\n     * @param entries\n     */\n    DocumentLoadInstrumentation.prototype._endSpan = function (span, performanceName, entries) {\n        // span can be undefined when entries are missing the certain performance - the span will not be created\n        if (span) {\n            if (hasKey(entries, performanceName)) {\n                span.end(entries[performanceName]);\n            }\n            else {\n                // just end span\n                span.end();\n            }\n        }\n    };\n    /**\n     * Creates and ends a span with network information about resource added as timed events\n     * @param resource\n     * @param parentSpan\n     */\n    DocumentLoadInstrumentation.prototype._initResourceSpan = function (resource, parentSpan) {\n        var span = this._startSpan(AttributeNames.RESOURCE_FETCH, PTN.FETCH_START, resource, parentSpan);\n        if (span) {\n            span.setAttribute(SemanticAttributes.HTTP_URL, resource.name);\n            addSpanNetworkEvents(span, resource);\n            this._endSpan(span, PTN.RESPONSE_END, resource);\n        }\n    };\n    /**\n     * Helper function for starting a span\n     * @param spanName name of span\n     * @param performanceName name of performance entry for time start\n     * @param entries\n     * @param parentSpan\n     */\n    DocumentLoadInstrumentation.prototype._startSpan = function (spanName, performanceName, entries, parentSpan) {\n        if (hasKey(entries, performanceName) &&\n            typeof entries[performanceName] === 'number') {\n            var span = this.tracer.startSpan(spanName, {\n                startTime: entries[performanceName],\n            }, parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined);\n            span.setAttribute(AttributeNames.COMPONENT, this.component);\n            return span;\n        }\n        return undefined;\n    };\n    /**\n     * executes callback {_onDocumentLoaded} when the page is loaded\n     */\n    DocumentLoadInstrumentation.prototype._waitForPageLoad = function () {\n        if (window.document.readyState === 'complete') {\n            this._onDocumentLoaded();\n        }\n        else {\n            this._onDocumentLoaded = this._onDocumentLoaded.bind(this);\n            window.addEventListener('load', this._onDocumentLoaded);\n        }\n    };\n    /**\n     * implements enable function\n     */\n    DocumentLoadInstrumentation.prototype.enable = function () {\n        // remove previously attached load to avoid adding the same event twice\n        // in case of multiple enable calling.\n        window.removeEventListener('load', this._onDocumentLoaded);\n        this._waitForPageLoad();\n    };\n    /**\n     * implements disable function\n     */\n    DocumentLoadInstrumentation.prototype.disable = function () {\n        window.removeEventListener('load', this._onDocumentLoaded);\n    };\n    return DocumentLoadInstrumentation;\n}(InstrumentationBase));\nexport { DocumentLoadInstrumentation };\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { isAttributeValue, hrTime, hrTimeDuration, isTimeInput, timeInputToHrTime, } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\n/**\n * This class represents a span.\n */\nvar Span = /** @class */ (function () {\n    /** Constructs a new Span instance. */\n    function Span(parentTracer, context, spanName, spanContext, kind, parentSpanId, links, startTime) {\n        if (links === void 0) { links = []; }\n        if (startTime === void 0) { startTime = hrTime(); }\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this.status = {\n            code: api.SpanStatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this.name = spanName;\n        this._spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        this.startTime = timeInputToHrTime(startTime);\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._spanLimits = parentTracer.getSpanLimits();\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n        this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0;\n    }\n    Span.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    Span.prototype.setAttribute = function (key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            api.diag.warn(\"Invalid attribute key: \" + key);\n            return this;\n        }\n        if (!isAttributeValue(value)) {\n            api.diag.warn(\"Invalid attribute value set for key: \" + key);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._spanLimits.attributeCountLimit &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            return this;\n        }\n        this.attributes[key] = this._truncateToSize(value);\n        return this;\n    };\n    Span.prototype.setAttributes = function (attributes) {\n        for (var _i = 0, _a = Object.entries(attributes); _i < _a.length; _i++) {\n            var _b = _a[_i], k = _b[0], v = _b[1];\n            this.setAttribute(k, v);\n        }\n        return this;\n    };\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [startTime] Specified start time for the event\n     */\n    Span.prototype.addEvent = function (name, attributesOrStartTime, startTime) {\n        if (this._isSpanEnded())\n            return this;\n        if (this.events.length >= this._spanLimits.eventCountLimit) {\n            api.diag.warn('Dropping extra events.');\n            this.events.shift();\n        }\n        if (isTimeInput(attributesOrStartTime)) {\n            if (typeof startTime === 'undefined') {\n                startTime = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        if (typeof startTime === 'undefined') {\n            startTime = hrTime();\n        }\n        this.events.push({\n            name: name,\n            attributes: attributesOrStartTime,\n            time: timeInputToHrTime(startTime),\n        });\n        return this;\n    };\n    Span.prototype.setStatus = function (status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = status;\n        return this;\n    };\n    Span.prototype.updateName = function (name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    };\n    Span.prototype.end = function (endTime) {\n        if (endTime === void 0) { endTime = hrTime(); }\n        if (this._isSpanEnded()) {\n            api.diag.error('You can only call end() on a span once.');\n            return;\n        }\n        this._ended = true;\n        this.endTime = timeInputToHrTime(endTime);\n        this._duration = hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            api.diag.warn('Inconsistent start and end time, startTime > endTime', this.startTime, this.endTime);\n        }\n        this._spanProcessor.onEnd(this);\n    };\n    Span.prototype.isRecording = function () {\n        return this._ended === false;\n    };\n    Span.prototype.recordException = function (exception, time) {\n        if (time === void 0) { time = hrTime(); }\n        var attributes = {};\n        if (typeof exception === 'string') {\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE]) {\n            this.addEvent(ExceptionEventName, attributes, time);\n        }\n        else {\n            api.diag.warn(\"Failed to record an exception \" + exception);\n        }\n    };\n    Object.defineProperty(Span.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"ended\", {\n        get: function () {\n            return this._ended;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Span.prototype._isSpanEnded = function () {\n        if (this._ended) {\n            api.diag.warn(\"Can not execute the operation on ended Span {traceId: \" + this._spanContext.traceId + \", spanId: \" + this._spanContext.spanId + \"}\");\n        }\n        return this._ended;\n    };\n    // Utility function to truncate given value within size\n    // for value type of string, will truncate to given limit\n    // for type of non-string, will return same value\n    Span.prototype._truncateToLimitUtil = function (value, limit) {\n        if (value.length <= limit) {\n            return value;\n        }\n        return value.substr(0, limit);\n    };\n    /**\n     * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n     * return string with trucated to {@code attributeValueLengthLimit} characters\n     *\n     * If the given attribute value is array of strings then\n     * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n     *\n     * Otherwise return same Attribute {@code value}\n     *\n     * @param value Attribute value\n     * @returns truncated attribute value if required, otherwise same value\n     */\n    Span.prototype._truncateToSize = function (value) {\n        var _this = this;\n        var limit = this._attributeValueLengthLimit;\n        // Check limit\n        if (limit <= 0) {\n            // Negative values are invalid, so do not truncate\n            api.diag.warn(\"Attribute value limit must be positive, got \" + limit);\n            return value;\n        }\n        // String\n        if (typeof value === 'string') {\n            return this._truncateToLimitUtil(value, limit);\n        }\n        // Array of strings\n        if (Array.isArray(value)) {\n            return value.map(function (val) { return typeof val === 'string' ? _this._truncateToLimitUtil(val, limit) : val; });\n        }\n        // Other types, no need to apply value length limit\n        return value;\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=Span.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Event name definitions\nexport var ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { AlwaysOffSampler, AlwaysOnSampler, getEnv, TracesSamplerValues, ParentBasedSampler, TraceIdRatioBasedSampler, } from '@opentelemetry/core';\nvar env = getEnv();\nvar FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nvar DEFAULT_RATIO = 1;\n/**\n * Default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\nexport var DEFAULT_CONFIG = {\n    sampler: buildSamplerFromEnv(env),\n    forceFlushTimeoutMillis: 30000,\n    generalLimits: {\n        attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n        attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n    },\n    spanLimits: {\n        attributeValueLengthLimit: getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n        attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n        linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n        eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n    },\n};\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(environment) {\n    if (environment === void 0) { environment = getEnv(); }\n    switch (environment.OTEL_TRACES_SAMPLER) {\n        case TracesSamplerValues.AlwaysOn:\n            return new AlwaysOnSampler();\n        case TracesSamplerValues.AlwaysOff:\n            return new AlwaysOffSampler();\n        case TracesSamplerValues.ParentBasedAlwaysOn:\n            return new ParentBasedSampler({\n                root: new AlwaysOnSampler(),\n            });\n        case TracesSamplerValues.ParentBasedAlwaysOff:\n            return new ParentBasedSampler({\n                root: new AlwaysOffSampler(),\n            });\n        case TracesSamplerValues.TraceIdRatio:\n            return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n        case TracesSamplerValues.ParentBasedTraceIdRatio:\n            return new ParentBasedSampler({\n                root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n            });\n        default:\n            diag.error(\"OTEL_TRACES_SAMPLER value \\\"\" + environment.OTEL_TRACES_SAMPLER + \" invalid, defaulting to \" + FALLBACK_OTEL_TRACES_SAMPLER + \"\\\".\");\n            return new AlwaysOnSampler();\n    }\n}\nfunction getSamplerProbabilityFromEnv(environment) {\n    if (environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n        environment.OTEL_TRACES_SAMPLER_ARG === '') {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG is blank, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    var probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n    if (isNaN(probability)) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is invalid, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is out of range ([0..1]), defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { RandomIdGenerator, sanitizeAttributes, isTracingSuppressed, } from '@opentelemetry/core';\nimport { Span } from './Span';\nimport { mergeConfig } from './utility';\n/**\n * This class represents a basic tracer.\n */\nvar Tracer = /** @class */ (function () {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    function Tracer(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        var localConfig = mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._generalLimits = localConfig.generalLimits;\n        this._spanLimits = localConfig.spanLimits;\n        this._idGenerator = config.idGenerator || new RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    Tracer.prototype.startSpan = function (name, options, context) {\n        var _a, _b;\n        if (options === void 0) { options = {}; }\n        if (context === void 0) { context = api.context.active(); }\n        if (isTracingSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            return api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n        }\n        var parentContext = getParent(options, context);\n        var spanId = this._idGenerator.generateSpanId();\n        var traceId;\n        var traceState;\n        var parentSpanId;\n        if (!parentContext || !api.trace.isSpanContextValid(parentContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentContext.traceId;\n            traceState = parentContext.traceState;\n            parentSpanId = parentContext.spanId;\n        }\n        var spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        var links = (_b = options.links) !== null && _b !== void 0 ? _b : [];\n        var attributes = sanitizeAttributes(options.attributes);\n        // make sampling decision\n        var samplingResult = this._sampler.shouldSample(options.root\n            ? api.trace.setSpanContext(context, api.INVALID_SPAN_CONTEXT)\n            : context, traceId, name, spanKind, attributes, links);\n        var traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        var spanContext = { traceId: traceId, spanId: spanId, traceFlags: traceFlags, traceState: traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, propagating context in a non-recording span');\n            return api.trace.wrapSpanContext(spanContext);\n        }\n        var span = new Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime);\n        // Set default attributes\n        span.setAttributes(Object.assign(attributes, samplingResult.attributes));\n        return span;\n    };\n    Tracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : api.context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = api.trace.setSpan(parentContext, span);\n        return api.context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    /** Returns the active {@link GeneralLimits}. */\n    Tracer.prototype.getGeneralLimits = function () {\n        return this._generalLimits;\n    };\n    /** Returns the active {@link SpanLimits}. */\n    Tracer.prototype.getSpanLimits = function () {\n        return this._spanLimits;\n    };\n    Tracer.prototype.getActiveSpanProcessor = function () {\n        return this._tracerProvider.getActiveSpanProcessor();\n    };\n    return Tracer;\n}());\nexport { Tracer };\n/**\n * Get the parent to assign to a started span. If options.parent is null,\n * do not assign a parent.\n *\n * @param options span options\n * @param context context to check for parent\n */\nfunction getParent(options, context) {\n    if (options.root)\n        return undefined;\n    return api.trace.getSpanContext(context);\n}\n//# sourceMappingURL=Tracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nvar BatchSpanProcessor = /** @class */ (function (_super) {\n    __extends(BatchSpanProcessor, _super);\n    function BatchSpanProcessor(_exporter, config) {\n        var _this = _super.call(this, _exporter, config) || this;\n        _this.onInit(config);\n        return _this;\n    }\n    BatchSpanProcessor.prototype.onInit = function (config) {\n        var _this = this;\n        if ((config === null || config === void 0 ? void 0 : config.disableAutoFlushOnDocumentHide) !== true && document != null) {\n            this._visibilityChangeListener = function () {\n                if (document.visibilityState === 'hidden') {\n                    void _this.forceFlush();\n                }\n            };\n            this._pageHideListener = function () {\n                void _this.forceFlush();\n            };\n            document.addEventListener('visibilitychange', this._visibilityChangeListener);\n            // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n            document.addEventListener('pagehide', this._pageHideListener);\n        }\n    };\n    BatchSpanProcessor.prototype.onShutdown = function () {\n        if (this._visibilityChangeListener) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n        }\n        if (this._pageHideListener) {\n            document.removeEventListener('pagehide', this._pageHideListener);\n        }\n    };\n    return BatchSpanProcessor;\n}(BatchSpanProcessorBase));\nexport { BatchSpanProcessor };\n//# sourceMappingURL=BatchSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { trace, context, propagation, diag, } from '@opentelemetry/api';\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator, getEnv, merge, } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { Tracer } from '.';\nimport { DEFAULT_CONFIG } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { BatchSpanProcessor } from './platform';\nexport var ForceFlushState;\n(function (ForceFlushState) {\n    ForceFlushState[ForceFlushState[\"resolved\"] = 0] = \"resolved\";\n    ForceFlushState[ForceFlushState[\"timeout\"] = 1] = \"timeout\";\n    ForceFlushState[ForceFlushState[\"error\"] = 2] = \"error\";\n    ForceFlushState[ForceFlushState[\"unresolved\"] = 3] = \"unresolved\";\n})(ForceFlushState || (ForceFlushState = {}));\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nvar BasicTracerProvider = /** @class */ (function () {\n    function BasicTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        var mergedConfig = merge({}, DEFAULT_CONFIG, config);\n        this.resource = (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : Resource.empty();\n        this.resource = Resource.default().merge(this.resource);\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n        var defaultExporter = this._buildExporterFromEnv();\n        if (defaultExporter !== undefined) {\n            var batchProcessor = new BatchSpanProcessor(defaultExporter);\n            this.activeSpanProcessor = batchProcessor;\n        }\n        else {\n            this.activeSpanProcessor = new NoopSpanProcessor();\n        }\n    }\n    BasicTracerProvider.prototype.getTracer = function (name, version) {\n        var key = name + \"@\" + (version || '');\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new Tracer({ name: name, version: version }, this._config, this));\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tracers.get(key);\n    };\n    /**\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    BasicTracerProvider.prototype.addSpanProcessor = function (spanProcessor) {\n        if (this._registeredSpanProcessors.length === 0) {\n            // since we might have enabled by default a batchProcessor, we disable it\n            // before adding the new one\n            this.activeSpanProcessor\n                .shutdown()\n                .catch(function (err) {\n                return diag.error('Error while trying to shutdown current span processor', err);\n            });\n        }\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor(this._registeredSpanProcessors);\n    };\n    BasicTracerProvider.prototype.getActiveSpanProcessor = function () {\n        return this.activeSpanProcessor;\n    };\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    BasicTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = this._buildPropagatorFromEnv();\n        }\n        if (config.contextManager) {\n            context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            propagation.setGlobalPropagator(config.propagator);\n        }\n    };\n    BasicTracerProvider.prototype.forceFlush = function () {\n        var timeout = this._config.forceFlushTimeoutMillis;\n        var promises = this._registeredSpanProcessors.map(function (spanProcessor) {\n            return new Promise(function (resolve) {\n                var state;\n                var timeoutInterval = setTimeout(function () {\n                    resolve(new Error(\"Span processor did not completed within timeout period of \" + timeout + \" ms\"));\n                    state = ForceFlushState.timeout;\n                }, timeout);\n                spanProcessor\n                    .forceFlush()\n                    .then(function () {\n                    clearTimeout(timeoutInterval);\n                    if (state !== ForceFlushState.timeout) {\n                        state = ForceFlushState.resolved;\n                        resolve(state);\n                    }\n                })\n                    .catch(function (error) {\n                    clearTimeout(timeoutInterval);\n                    state = ForceFlushState.error;\n                    resolve(error);\n                });\n            });\n        });\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises)\n                .then(function (results) {\n                var errors = results.filter(function (result) { return result !== ForceFlushState.resolved; });\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch(function (error) { return reject([error]); });\n        });\n    };\n    BasicTracerProvider.prototype.shutdown = function () {\n        return this.activeSpanProcessor.shutdown();\n    };\n    BasicTracerProvider.prototype._getPropagator = function (name) {\n        var _a;\n        return (_a = BasicTracerProvider._registeredPropagators.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._getSpanExporter = function (name) {\n        var _a;\n        return (_a = BasicTracerProvider._registeredExporters.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._buildPropagatorFromEnv = function () {\n        var _this = this;\n        // per spec, propagators from env must be deduplicated\n        var uniquePropagatorNames = Array.from(new Set(getEnv().OTEL_PROPAGATORS));\n        var propagators = uniquePropagatorNames.map(function (name) {\n            var propagator = _this._getPropagator(name);\n            if (!propagator) {\n                diag.warn(\"Propagator \\\"\" + name + \"\\\" requested through environment variable is unavailable.\");\n            }\n            return propagator;\n        });\n        var validPropagators = propagators.reduce(function (list, item) {\n            if (item) {\n                list.push(item);\n            }\n            return list;\n        }, []);\n        if (validPropagators.length === 0) {\n            return;\n        }\n        else if (uniquePropagatorNames.length === 1) {\n            return validPropagators[0];\n        }\n        else {\n            return new CompositePropagator({\n                propagators: validPropagators,\n            });\n        }\n    };\n    BasicTracerProvider.prototype._buildExporterFromEnv = function () {\n        var exporterName = getEnv().OTEL_TRACES_EXPORTER;\n        if (exporterName === 'none')\n            return;\n        var exporter = this._getSpanExporter(exporterName);\n        if (!exporter) {\n            diag.error(\"Exporter \\\"\" + exporterName + \"\\\" requested through environment variable is unavailable.\");\n        }\n        return exporter;\n    };\n    BasicTracerProvider._registeredPropagators = new Map([\n        ['tracecontext', function () { return new W3CTraceContextPropagator(); }],\n        ['baggage', function () { return new W3CBaggagePropagator(); }],\n    ]);\n    BasicTracerProvider._registeredExporters = new Map();\n    return BasicTracerProvider;\n}());\nexport { BasicTracerProvider };\n//# sourceMappingURL=BasicTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT, DEFAULT_ATTRIBUTE_COUNT_LIMIT } from '@opentelemetry/core';\nimport { buildSamplerFromEnv, DEFAULT_CONFIG } from './config';\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig) {\n    var perInstanceDefaults = {\n        sampler: buildSamplerFromEnv(),\n    };\n    var target = Object.assign({}, DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.generalLimits = Object.assign({}, DEFAULT_CONFIG.generalLimits, userConfig.generalLimits || {});\n    target.spanLimits = Object.assign({}, DEFAULT_CONFIG.spanLimits, userConfig.spanLimits || {});\n    /**\n     * When span attribute count limit is not defined, but general attribute count limit is defined\n     * Then, span attribute count limit will be same as general one\n     */\n    if (target.spanLimits.attributeCountLimit === DEFAULT_ATTRIBUTE_COUNT_LIMIT && target.generalLimits.attributeCountLimit !== DEFAULT_ATTRIBUTE_COUNT_LIMIT) {\n        target.spanLimits.attributeCountLimit = target.generalLimits.attributeCountLimit;\n    }\n    /**\n     * When span attribute value length limit is not defined, but general attribute value length limit is defined\n     * Then, span attribute value length limit will be same as general one\n     */\n    if (target.spanLimits.attributeValueLengthLimit === DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT && target.generalLimits.attributeValueLengthLimit !== DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT) {\n        target.spanLimits.attributeValueLengthLimit = target.generalLimits.attributeValueLengthLimit;\n    }\n    return target;\n}\n//# sourceMappingURL=utility.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { globalErrorHandler } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nvar MultiSpanProcessor = /** @class */ (function () {\n    function MultiSpanProcessor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    MultiSpanProcessor.prototype.forceFlush = function () {\n        var promises = [];\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            promises.push(spanProcessor.forceFlush());\n        }\n        return new Promise(function (resolve) {\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(function (error) {\n                globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    };\n    MultiSpanProcessor.prototype.onStart = function (span, context) {\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            spanProcessor.onStart(span, context);\n        }\n    };\n    MultiSpanProcessor.prototype.onEnd = function (span) {\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            spanProcessor.onEnd(span);\n        }\n    };\n    MultiSpanProcessor.prototype.shutdown = function () {\n        var promises = [];\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            promises.push(spanProcessor.shutdown());\n        }\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises).then(function () {\n                resolve();\n            }, reject);\n        });\n    };\n    return MultiSpanProcessor;\n}());\nexport { MultiSpanProcessor };\n//# sourceMappingURL=MultiSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */ (function () {\n    function NoopSpanProcessor() {\n    }\n    NoopSpanProcessor.prototype.onStart = function (_span, _context) { };\n    NoopSpanProcessor.prototype.onEnd = function (_span) { };\n    NoopSpanProcessor.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    NoopSpanProcessor.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    return NoopSpanProcessor;\n}());\nexport { NoopSpanProcessor };\n//# sourceMappingURL=NoopSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, TraceFlags } from '@opentelemetry/api';\nimport { ExportResultCode, getEnv, globalErrorHandler, suppressTracing, unrefTimer, } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nvar BatchSpanProcessorBase = /** @class */ (function () {\n    function BatchSpanProcessorBase(_exporter, config) {\n        this._exporter = _exporter;\n        this._finishedSpans = [];\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        var env = getEnv();\n        this._maxExportBatchSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxExportBatchSize) === 'number'\n                ? config.maxExportBatchSize\n                : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n        this._maxQueueSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxQueueSize) === 'number'\n                ? config.maxQueueSize\n                : env.OTEL_BSP_MAX_QUEUE_SIZE;\n        this._scheduledDelayMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.scheduledDelayMillis) === 'number'\n                ? config.scheduledDelayMillis\n                : env.OTEL_BSP_SCHEDULE_DELAY;\n        this._exportTimeoutMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.exportTimeoutMillis) === 'number'\n                ? config.exportTimeoutMillis\n                : env.OTEL_BSP_EXPORT_TIMEOUT;\n    }\n    BatchSpanProcessorBase.prototype.forceFlush = function () {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        return this._flushAll();\n    };\n    // does nothing.\n    BatchSpanProcessorBase.prototype.onStart = function (_span) { };\n    BatchSpanProcessorBase.prototype.onEnd = function (span) {\n        if (this._isShutdown) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        this._addToBuffer(span);\n    };\n    BatchSpanProcessorBase.prototype.shutdown = function () {\n        var _this = this;\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise(function (resolve, reject) {\n            Promise.resolve()\n                .then(function () {\n                return _this.onShutdown();\n            })\n                .then(function () {\n                return _this._flushAll();\n            })\n                .then(function () {\n                return _this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(function (e) {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    };\n    /** Add a span in the buffer. */\n    BatchSpanProcessorBase.prototype._addToBuffer = function (span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            return;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    };\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    BatchSpanProcessorBase.prototype._flushAll = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var promises = [];\n            // calculate number of batches\n            var count = Math.ceil(_this._finishedSpans.length / _this._maxExportBatchSize);\n            for (var i = 0, j = count; i < j; i++) {\n                promises.push(_this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(reject);\n        });\n    };\n    BatchSpanProcessorBase.prototype._flushOneBatch = function () {\n        var _this = this;\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var timer = setTimeout(function () {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, _this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            context.with(suppressTracing(context.active()), function () {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside of the execution of this callback.\n                _this._exporter.export(_this._finishedSpans.splice(0, _this._maxExportBatchSize), function (result) {\n                    var _a;\n                    clearTimeout(timer);\n                    if (result.code === ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n            });\n        });\n    };\n    BatchSpanProcessorBase.prototype._maybeStartTimer = function () {\n        var _this = this;\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(function () {\n            _this._flushOneBatch()\n                .then(function () {\n                if (_this._finishedSpans.length > 0) {\n                    _this._clearTimer();\n                    _this._maybeStartTimer();\n                }\n            })\n                .catch(function (e) {\n                globalErrorHandler(e);\n            });\n        }, this._scheduledDelayMillis);\n        unrefTimer(this._timer);\n    };\n    BatchSpanProcessorBase.prototype._clearTimer = function () {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    };\n    return BatchSpanProcessorBase;\n}());\nexport { BatchSpanProcessorBase };\n//# sourceMappingURL=BatchSpanProcessorBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var PerformanceTimingNames;\n(function (PerformanceTimingNames) {\n    PerformanceTimingNames[\"CONNECT_END\"] = \"connectEnd\";\n    PerformanceTimingNames[\"CONNECT_START\"] = \"connectStart\";\n    PerformanceTimingNames[\"DECODED_BODY_SIZE\"] = \"decodedBodySize\";\n    PerformanceTimingNames[\"DOM_COMPLETE\"] = \"domComplete\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_END\"] = \"domContentLoadedEventEnd\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_START\"] = \"domContentLoadedEventStart\";\n    PerformanceTimingNames[\"DOM_INTERACTIVE\"] = \"domInteractive\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_END\"] = \"domainLookupEnd\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_START\"] = \"domainLookupStart\";\n    PerformanceTimingNames[\"ENCODED_BODY_SIZE\"] = \"encodedBodySize\";\n    PerformanceTimingNames[\"FETCH_START\"] = \"fetchStart\";\n    PerformanceTimingNames[\"LOAD_EVENT_END\"] = \"loadEventEnd\";\n    PerformanceTimingNames[\"LOAD_EVENT_START\"] = \"loadEventStart\";\n    PerformanceTimingNames[\"NAVIGATION_START\"] = \"navigationStart\";\n    PerformanceTimingNames[\"REDIRECT_END\"] = \"redirectEnd\";\n    PerformanceTimingNames[\"REDIRECT_START\"] = \"redirectStart\";\n    PerformanceTimingNames[\"REQUEST_START\"] = \"requestStart\";\n    PerformanceTimingNames[\"RESPONSE_END\"] = \"responseEnd\";\n    PerformanceTimingNames[\"RESPONSE_START\"] = \"responseStart\";\n    PerformanceTimingNames[\"SECURE_CONNECTION_START\"] = \"secureConnectionStart\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_END\"] = \"unloadEventEnd\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_START\"] = \"unloadEventStart\";\n})(PerformanceTimingNames || (PerformanceTimingNames = {}));\n//# sourceMappingURL=PerformanceTimingNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport { hrTimeToNanoseconds, timeInputToHrTime, urlMatches, } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n// Used to normalize relative URLs\nvar a;\nexport function getUrlNormalizingAnchor() {\n    if (!a) {\n        a = document.createElement('a');\n    }\n    return a;\n}\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey(obj, key) {\n    return key in obj;\n}\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(span, performanceName, entries) {\n    if (hasKey(entries, performanceName) &&\n        typeof entries[performanceName] === 'number') {\n        span.addEvent(performanceName, entries[performanceName]);\n        return span;\n    }\n    return undefined;\n}\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(span, resource) {\n    addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n    addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n    addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n    var encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n    if (encodedLength !== undefined) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n    }\n    var decodedLength = resource[PTN.DECODED_BODY_SIZE];\n    // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n    if (decodedLength !== undefined && encodedLength !== decodedLength) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, decodedLength);\n    }\n}\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources) {\n    return filteredResources.slice().sort(function (a, b) {\n        var valueA = a[PTN.FETCH_START];\n        var valueB = b[PTN.FETCH_START];\n        if (valueA > valueB) {\n            return 1;\n        }\n        else if (valueA < valueB) {\n            return -1;\n        }\n        return 0;\n    });\n}\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    if (ignoredResources === void 0) { ignoredResources = new WeakSet(); }\n    // de-relativize the URL before usage (does no harm to absolute URLs)\n    var urlNormalizingAnchor = getUrlNormalizingAnchor();\n    urlNormalizingAnchor.href = spanUrl;\n    spanUrl = urlNormalizingAnchor.href;\n    var filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n    if (filteredResources.length === 0) {\n        return {\n            mainRequest: undefined,\n        };\n    }\n    if (filteredResources.length === 1) {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n    var sorted = sortResources(filteredResources);\n    var parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin !== window.location.origin && sorted.length > 1) {\n        var corsPreFlightRequest = sorted[0];\n        var mainRequest = findMainRequest(sorted, corsPreFlightRequest[PTN.RESPONSE_END], endTimeHR);\n        var responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n        var fetchStart = mainRequest[PTN.FETCH_START];\n        // no corsPreFlightRequest\n        if (fetchStart < responseEnd) {\n            mainRequest = corsPreFlightRequest;\n            corsPreFlightRequest = undefined;\n        }\n        return {\n            corsPreFlightRequest: corsPreFlightRequest,\n            mainRequest: mainRequest,\n        };\n    }\n    else {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n}\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n    var spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n    var minTime = hrTimeToNanoseconds(timeInputToHrTime(corsPreFlightRequestEndTime));\n    var mainRequest = resources[1];\n    var bestGap;\n    var length = resources.length;\n    for (var i = 1; i < length; i++) {\n        var resource = resources[i];\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        var currentGap = spanEndTime - resourceEndTime;\n        if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n            bestGap = currentGap;\n            mainRequest = resource;\n        }\n    }\n    return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    var startTime = hrTimeToNanoseconds(startTimeHR);\n    var endTime = hrTimeToNanoseconds(endTimeHR);\n    var filteredResources = resources.filter(function (resource) {\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        return (resource.initiatorType.toLowerCase() ===\n            (initiatorType || 'xmlhttprequest') &&\n            resource.name === spanUrl &&\n            resourceStartTime >= startTime &&\n            resourceEndTime <= endTime);\n    });\n    if (filteredResources.length > 0) {\n        filteredResources = filteredResources.filter(function (resource) {\n            return !ignoredResources.has(resource);\n        });\n    }\n    return filteredResources;\n}\n/**\n * Parses url using anchor element\n * @param url\n */\nexport function parseUrl(url) {\n    var a = document.createElement('a');\n    a.href = url;\n    return a;\n}\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getElementXPath(target, optimised) {\n    if (target.nodeType === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    var targetValue = getNodeValue(target, optimised);\n    if (optimised && targetValue.indexOf('@id') > 0) {\n        return targetValue;\n    }\n    var xpath = '';\n    if (target.parentNode) {\n        xpath += getElementXPath(target.parentNode, false);\n    }\n    xpath += targetValue;\n    return xpath;\n}\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n    if (!target.parentNode) {\n        return 0;\n    }\n    var allowedTypes = [target.nodeType];\n    if (target.nodeType === Node.CDATA_SECTION_NODE) {\n        allowedTypes.push(Node.TEXT_NODE);\n    }\n    var elements = Array.from(target.parentNode.childNodes);\n    elements = elements.filter(function (element) {\n        var localName = element.localName;\n        return (allowedTypes.indexOf(element.nodeType) >= 0 &&\n            localName === target.localName);\n    });\n    if (elements.length >= 1) {\n        return elements.indexOf(target) + 1; // xpath starts from 1\n    }\n    // if there are no other similar child xpath doesn't need index\n    return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n    var nodeType = target.nodeType;\n    var index = getNodeIndex(target);\n    var nodeValue = '';\n    if (nodeType === Node.ELEMENT_NODE) {\n        var id = target.getAttribute('id');\n        if (optimised && id) {\n            return \"//*[@id=\\\"\" + id + \"\\\"]\";\n        }\n        nodeValue = target.localName;\n    }\n    else if (nodeType === Node.TEXT_NODE ||\n        nodeType === Node.CDATA_SECTION_NODE) {\n        nodeValue = 'text()';\n    }\n    else if (nodeType === Node.COMMENT_NODE) {\n        nodeValue = 'comment()';\n    }\n    else {\n        return '';\n    }\n    // if index is 1 it can be omitted in xpath\n    if (nodeValue && index > 1) {\n        return \"/\" + nodeValue + \"[\" + index + \"]\";\n    }\n    return \"/\" + nodeValue;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n    var propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n    if (typeof propagateTraceHeaderUrls === 'string' ||\n        propagateTraceHeaderUrls instanceof RegExp) {\n        propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n    }\n    var parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin === window.location.origin) {\n        return true;\n    }\n    else {\n        return propagateTraceHeaderUrls.some(function (propagateTraceHeaderUrl) {\n            return urlMatches(spanUrl, propagateTraceHeaderUrl);\n        });\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"COMPONENT\"] = \"component\";\n    AttributeNames[\"HTTP_ERROR_NAME\"] = \"http.error_name\";\n    AttributeNames[\"HTTP_STATUS_TEXT\"] = \"http.status_text\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { ROOT_CONTEXT } from '@opentelemetry/api';\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nvar StackContextManager = /** @class */ (function () {\n    function StackContextManager() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Keeps the reference to current context\n         */\n        this._currentContext = ROOT_CONTEXT;\n    }\n    /**\n     *\n     * @param context\n     * @param target Function to be executed within the context\n     */\n    StackContextManager.prototype._bindFunction = function (context, target) {\n        if (context === void 0) { context = ROOT_CONTEXT; }\n        var manager = this;\n        var contextWrapper = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.with(context, function () { return target.apply(_this, args); });\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    };\n    /**\n     * Returns the active context\n     */\n    StackContextManager.prototype.active = function () {\n        return this._currentContext;\n    };\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    StackContextManager.prototype.bind = function (context, target) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        return target;\n    };\n    /**\n     * Disable the context manager (clears the current context)\n     */\n    StackContextManager.prototype.disable = function () {\n        this._currentContext = ROOT_CONTEXT;\n        this._enabled = false;\n        return this;\n    };\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    StackContextManager.prototype.enable = function () {\n        if (this._enabled) {\n            return this;\n        }\n        this._enabled = true;\n        this._currentContext = ROOT_CONTEXT;\n        return this;\n    };\n    /**\n     * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n     * The context will be set as active\n     * @param context\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    StackContextManager.prototype.with = function (context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        var previousContext = this._currentContext;\n        this._currentContext = context || ROOT_CONTEXT;\n        try {\n            return fn.call.apply(fn, __spreadArray([thisArg], args));\n        }\n        finally {\n            this._currentContext = previousContext;\n        }\n    };\n    return StackContextManager;\n}());\nexport { StackContextManager };\n//# sourceMappingURL=StackContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode, hrTimeToMicroseconds, } from '@opentelemetry/core';\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n/* eslint-disable no-console */\nvar ConsoleSpanExporter = /** @class */ (function () {\n    function ConsoleSpanExporter() {\n    }\n    /**\n     * Export spans.\n     * @param spans\n     * @param resultCallback\n     */\n    ConsoleSpanExporter.prototype.export = function (spans, resultCallback) {\n        return this._sendSpans(spans, resultCallback);\n    };\n    /**\n     * Shutdown the exporter.\n     */\n    ConsoleSpanExporter.prototype.shutdown = function () {\n        this._sendSpans([]);\n        return Promise.resolve();\n    };\n    /**\n     * converts span info into more readable format\n     * @param span\n     */\n    ConsoleSpanExporter.prototype._exportInfo = function (span) {\n        return {\n            traceId: span.spanContext().traceId,\n            parentId: span.parentSpanId,\n            name: span.name,\n            id: span.spanContext().spanId,\n            kind: span.kind,\n            timestamp: hrTimeToMicroseconds(span.startTime),\n            duration: hrTimeToMicroseconds(span.duration),\n            attributes: span.attributes,\n            status: span.status,\n            events: span.events,\n        };\n    };\n    /**\n     * Showing spans in console\n     * @param spans\n     * @param done\n     */\n    ConsoleSpanExporter.prototype._sendSpans = function (spans, done) {\n        for (var _i = 0, spans_1 = spans; _i < spans_1.length; _i++) {\n            var span = spans_1[_i];\n            console.log(this._exportInfo(span));\n        }\n        if (done) {\n            return done({ code: ExportResultCode.SUCCESS });\n        }\n    };\n    return ConsoleSpanExporter;\n}());\nexport { ConsoleSpanExporter };\n//# sourceMappingURL=ConsoleSpanExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nvar InMemorySpanExporter = /** @class */ (function () {\n    function InMemorySpanExporter() {\n        this._finishedSpans = [];\n        /**\n         * Indicates if the exporter has been \"shutdown.\"\n         * When false, exported spans will not be stored in-memory.\n         */\n        this._stopped = false;\n    }\n    InMemorySpanExporter.prototype.export = function (spans, resultCallback) {\n        var _a;\n        if (this._stopped)\n            return resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Exporter has been stopped'),\n            });\n        (_a = this._finishedSpans).push.apply(_a, spans);\n        setTimeout(function () { return resultCallback({ code: ExportResultCode.SUCCESS }); }, 0);\n    };\n    InMemorySpanExporter.prototype.shutdown = function () {\n        this._stopped = true;\n        this._finishedSpans = [];\n        return Promise.resolve();\n    };\n    InMemorySpanExporter.prototype.reset = function () {\n        this._finishedSpans = [];\n    };\n    InMemorySpanExporter.prototype.getFinishedSpans = function () {\n        return this._finishedSpans;\n    };\n    return InMemorySpanExporter;\n}());\nexport { InMemorySpanExporter };\n//# sourceMappingURL=InMemorySpanExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, TraceFlags } from '@opentelemetry/api';\nimport { ExportResultCode, globalErrorHandler, suppressTracing, } from '@opentelemetry/core';\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nvar SimpleSpanProcessor = /** @class */ (function () {\n    function SimpleSpanProcessor(_exporter) {\n        this._exporter = _exporter;\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n    }\n    SimpleSpanProcessor.prototype.forceFlush = function () {\n        // do nothing as all spans are being exported without waiting\n        return Promise.resolve();\n    };\n    // does nothing.\n    SimpleSpanProcessor.prototype.onStart = function (_span) { };\n    SimpleSpanProcessor.prototype.onEnd = function (span) {\n        var _this = this;\n        if (this._isShutdown) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        // prevent downstream exporter calls from generating spans\n        context.with(suppressTracing(context.active()), function () {\n            _this._exporter.export([span], function (result) {\n                var _a;\n                if (result.code !== ExportResultCode.SUCCESS) {\n                    globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error(\"SimpleSpanProcessor: span export failed (status \" + result + \")\"));\n                }\n            });\n        });\n    };\n    SimpleSpanProcessor.prototype.shutdown = function () {\n        var _this = this;\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise(function (resolve, reject) {\n            Promise.resolve()\n                .then(function () {\n                return _this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(function (e) {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    };\n    return SimpleSpanProcessor;\n}());\nexport { SimpleSpanProcessor };\n//# sourceMappingURL=SimpleSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BasicTracerProvider, } from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nvar WebTracerProvider = /** @class */ (function (_super) {\n    __extends(WebTracerProvider, _super);\n    /**\n     * Constructs a new Tracer instance.\n     * @param config Web Tracer config\n     */\n    function WebTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        if (config.contextManager) {\n            throw ('contextManager should be defined in register method not in' +\n                ' constructor');\n        }\n        if (config.propagator) {\n            throw 'propagator should be defined in register method not in constructor';\n        }\n        return _this;\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    WebTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        if (config.contextManager === undefined) {\n            config.contextManager = new StackContextManager();\n        }\n        if (config.contextManager) {\n            config.contextManager.enable();\n        }\n        _super.prototype.register.call(this, config);\n    };\n    return WebTracerProvider;\n}(BasicTracerProvider));\nexport { WebTracerProvider };\n//# sourceMappingURL=WebTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '0.27.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle, } from '@opentelemetry/instrumentation';\nimport * as core from '@opentelemetry/core';\nimport * as web from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { VERSION } from './version';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nvar OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nvar FetchInstrumentation = /** @class */ (function (_super) {\n    __extends(FetchInstrumentation, _super);\n    function FetchInstrumentation(config) {\n        var _this = _super.call(this, '@opentelemetry/instrumentation-fetch', VERSION, config) || this;\n        _this.component = 'fetch';\n        _this.version = VERSION;\n        _this.moduleName = _this.component;\n        _this._usedResources = new WeakSet();\n        _this._tasksCount = 0;\n        return _this;\n    }\n    FetchInstrumentation.prototype.init = function () { };\n    FetchInstrumentation.prototype._getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     */\n    FetchInstrumentation.prototype._addChildSpan = function (span, corsPreFlightRequest) {\n        var childSpan = this.tracer.startSpan('CORS Preflight', {\n            startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START],\n        }, api.trace.setSpan(api.context.active(), span));\n        web.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n        childSpan.end(corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]);\n    };\n    /**\n     * Adds more attributes to span just before ending it\n     * @param span\n     * @param response\n     */\n    FetchInstrumentation.prototype._addFinalSpanAttributes = function (span, response) {\n        var parsedUrl = web.parseUrl(response.url);\n        span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, response.status);\n        if (response.statusText != null) {\n            span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, response.statusText);\n        }\n        span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n        span.setAttribute(SemanticAttributes.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n        span.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n    };\n    /**\n     * Add headers\n     * @param options\n     * @param spanUrl\n     */\n    FetchInstrumentation.prototype._addHeaders = function (options, spanUrl) {\n        if (!web.shouldPropagateTraceHeaders(spanUrl, this._getConfig().propagateTraceHeaderCorsUrls)) {\n            var headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            if (Object.keys(headers).length > 0) {\n                this._diag.debug('headers inject skipped due to CORS policy');\n            }\n            return;\n        }\n        if (options instanceof Request) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: function (h, k, v) { return h.set(k, typeof v === 'string' ? v : String(v)); },\n            });\n        }\n        else if (options.headers instanceof Headers) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: function (h, k, v) { return h.set(k, typeof v === 'string' ? v : String(v)); },\n            });\n        }\n        else {\n            var headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            options.headers = Object.assign({}, headers, options.headers || {});\n        }\n    };\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link FetchPluginConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    FetchInstrumentation.prototype._clearResources = function () {\n        if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n            performance.clearResourceTimings();\n            this._usedResources = new WeakSet();\n        }\n    };\n    /**\n     * Creates a new span\n     * @param url\n     * @param options\n     */\n    FetchInstrumentation.prototype._createSpan = function (url, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        if (core.isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n            this._diag.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        var method = (options.method || 'GET').toUpperCase();\n        var spanName = \"HTTP \" + method;\n        return this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: (_a = {},\n                _a[AttributeNames.COMPONENT] = this.moduleName,\n                _a[SemanticAttributes.HTTP_METHOD] = method,\n                _a[SemanticAttributes.HTTP_URL] = url,\n                _a),\n        });\n    };\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     * @param resourcesObserver\n     * @param endTime\n     */\n    FetchInstrumentation.prototype._findResourceAndAddNetworkEvents = function (span, resourcesObserver, endTime) {\n        var resources = resourcesObserver.entries;\n        if (!resources.length) {\n            if (!performance.getEntriesByType) {\n                return;\n            }\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            resources = performance.getEntriesByType('resource');\n        }\n        var resource = web.getResource(resourcesObserver.spanUrl, resourcesObserver.startTime, endTime, resources, this._usedResources, 'fetch');\n        if (resource.mainRequest) {\n            var mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            var corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            web.addSpanNetworkEvents(span, mainRequest);\n        }\n    };\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     */\n    FetchInstrumentation.prototype._markResourceAsUsed = function (resource) {\n        this._usedResources.add(resource);\n    };\n    /**\n     * Finish span, add attributes, network events etc.\n     * @param span\n     * @param spanData\n     * @param response\n     */\n    FetchInstrumentation.prototype._endSpan = function (span, spanData, response) {\n        var _this = this;\n        var endTime = core.hrTime();\n        this._addFinalSpanAttributes(span, response);\n        setTimeout(function () {\n            var _a;\n            (_a = spanData.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n            _this._findResourceAndAddNetworkEvents(span, spanData, endTime);\n            _this._tasksCount--;\n            _this._clearResources();\n            span.end(endTime);\n        }, OBSERVER_WAIT_TIME_MS);\n    };\n    /**\n     * Patches the constructor of fetch\n     */\n    FetchInstrumentation.prototype._patchConstructor = function () {\n        var _this = this;\n        return function (original) {\n            var plugin = _this;\n            return function patchConstructor() {\n                var _this = this;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args[0] instanceof Request ? args[0].url : args[0];\n                var options = args[0] instanceof Request ? args[0] : args[1] || {};\n                var createdSpan = plugin._createSpan(url, options);\n                if (!createdSpan) {\n                    return original.apply(this, args);\n                }\n                var spanData = plugin._prepareSpanData(url);\n                function endSpanOnError(span, error) {\n                    plugin._applyAttributesAfterFetch(span, options, error);\n                    plugin._endSpan(span, spanData, {\n                        status: error.status || 0,\n                        statusText: error.message,\n                        url: url,\n                    });\n                }\n                function endSpanOnSuccess(span, response) {\n                    plugin._applyAttributesAfterFetch(span, options, response);\n                    if (response.status >= 200 && response.status < 400) {\n                        plugin._endSpan(span, spanData, response);\n                    }\n                    else {\n                        plugin._endSpan(span, spanData, {\n                            status: response.status,\n                            statusText: response.statusText,\n                            url: url,\n                        });\n                    }\n                }\n                function onSuccess(span, resolve, response) {\n                    try {\n                        var resClone = response.clone();\n                        var resClone4Hook_1 = response.clone();\n                        var body = resClone.body;\n                        if (body) {\n                            var reader_1 = body.getReader();\n                            var read_1 = function () {\n                                reader_1.read().then(function (_a) {\n                                    var done = _a.done;\n                                    if (done) {\n                                        endSpanOnSuccess(span, resClone4Hook_1);\n                                    }\n                                    else {\n                                        read_1();\n                                    }\n                                }, function (error) {\n                                    endSpanOnError(span, error);\n                                });\n                            };\n                            read_1();\n                        }\n                        else {\n                            // some older browsers don't have .body implemented\n                            endSpanOnSuccess(span, response);\n                        }\n                    }\n                    finally {\n                        resolve(response);\n                    }\n                }\n                function onError(span, reject, error) {\n                    try {\n                        endSpanOnError(span, error);\n                    }\n                    finally {\n                        reject(error);\n                    }\n                }\n                return new Promise(function (resolve, reject) {\n                    return api.context.with(api.trace.setSpan(api.context.active(), createdSpan), function () {\n                        plugin._addHeaders(options, url);\n                        plugin._tasksCount++;\n                        return original\n                            .apply(_this, options instanceof Request ? [options] : [url, options])\n                            .then(onSuccess.bind(_this, createdSpan, resolve), onError.bind(_this, createdSpan, reject));\n                    });\n                });\n            };\n        };\n    };\n    FetchInstrumentation.prototype._applyAttributesAfterFetch = function (span, request, result) {\n        var _this = this;\n        var applyCustomAttributesOnSpan = this._getConfig()\n            .applyCustomAttributesOnSpan;\n        if (applyCustomAttributesOnSpan) {\n            safeExecuteInTheMiddle(function () { return applyCustomAttributesOnSpan(span, request, result); }, function (error) {\n                if (!error) {\n                    return;\n                }\n                _this._diag.error('applyCustomAttributesOnSpan', error);\n            }, true);\n        }\n    };\n    /**\n     * Prepares a span data - needed later for matching appropriate network\n     *     resources\n     * @param spanUrl\n     */\n    FetchInstrumentation.prototype._prepareSpanData = function (spanUrl) {\n        var startTime = core.hrTime();\n        var entries = [];\n        if (typeof window.PerformanceObserver === 'undefined') {\n            return { entries: entries, startTime: startTime, spanUrl: spanUrl };\n        }\n        var observer = new PerformanceObserver(function (list) {\n            var perfObsEntries = list.getEntries();\n            var urlNormalizingAnchor = web.getUrlNormalizingAnchor();\n            urlNormalizingAnchor.href = spanUrl;\n            perfObsEntries.forEach(function (entry) {\n                if (entry.initiatorType === 'fetch' &&\n                    entry.name === urlNormalizingAnchor.href) {\n                    entries.push(entry);\n                }\n            });\n        });\n        observer.observe({\n            entryTypes: ['resource'],\n        });\n        return { entries: entries, observer: observer, startTime: startTime, spanUrl: spanUrl };\n    };\n    /**\n     * implements enable function\n     */\n    FetchInstrumentation.prototype.enable = function () {\n        if (isWrapped(window.fetch)) {\n            this._unwrap(window, 'fetch');\n            this._diag.debug('removing previous patch for constructor');\n        }\n        this._wrap(window, 'fetch', this._patchConstructor());\n    };\n    /**\n     * implements unpatch function\n     */\n    FetchInstrumentation.prototype.disable = function () {\n        this._unwrap(window, 'fetch');\n        this._usedResources = new WeakSet();\n    };\n    return FetchInstrumentation;\n}(InstrumentationBase));\nexport { FetchInstrumentation };\n//# sourceMappingURL=fetch.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar NANOSECOND_DIGITS_IN_MILLIS = 6;\nvar MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n    return [seconds, nanos];\n}\nexport function getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = millisToHrTime(getTimeOrigin());\n    var now = millisToHrTime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    return addHrTimes(timeOrigin, now);\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return millisToHrTime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return millisToHrTime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1, time2) {\n    var out = [time1[0] + time2[0], time1[1] + time2[1]];\n    // Nanoseconds\n    if (out[1] >= SECOND_TO_NANOSECONDS) {\n        out[1] -= SECOND_TO_NANOSECONDS;\n        out[0] += 1;\n    }\n    return out;\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"COMPONENT\"] = \"component\";\n    AttributeNames[\"EVENT_TYPE\"] = \"event_type\";\n    AttributeNames[\"TARGET_ELEMENT\"] = \"target_element\";\n    AttributeNames[\"TARGET_XPATH\"] = \"target_xpath\";\n    AttributeNames[\"HTTP_URL\"] = \"http.url\";\n    // NOT ON OFFICIAL SPEC\n    AttributeNames[\"HTTP_USER_AGENT\"] = \"http.user_agent\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '0.28.1';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isWrapped, InstrumentationBase } from '@opentelemetry/instrumentation';\nimport * as api from '@opentelemetry/api';\nimport { hrTime } from '@opentelemetry/core';\nimport { getElementXPath } from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { VERSION } from './version';\nvar ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\nvar EVENT_NAVIGATION_NAME = 'Navigation:';\nvar DEFAULT_EVENT_NAMES = ['click'];\nfunction defaultShouldPreventSpanCreation() {\n    return false;\n}\n/**\n * This class represents a UserInteraction plugin for auto instrumentation.\n * If zone.js is available then it patches the zone otherwise it patches\n * addEventListener of HTMLElement\n */\nvar UserInteractionInstrumentation = /** @class */ (function (_super) {\n    __extends(UserInteractionInstrumentation, _super);\n    function UserInteractionInstrumentation(config) {\n        var _a;\n        var _this = _super.call(this, '@opentelemetry/instrumentation-user-interaction', VERSION, config) || this;\n        _this.component = 'user-interaction';\n        _this.version = VERSION;\n        _this.moduleName = _this.component;\n        _this._spansData = new WeakMap();\n        // for addEventListener/removeEventListener state\n        _this._wrappedListeners = new WeakMap();\n        // for event bubbling\n        _this._eventsSpanMap = new WeakMap();\n        _this._eventNames = new Set((_a = config === null || config === void 0 ? void 0 : config.eventNames) !== null && _a !== void 0 ? _a : DEFAULT_EVENT_NAMES);\n        _this._shouldPreventSpanCreation =\n            typeof (config === null || config === void 0 ? void 0 : config.shouldPreventSpanCreation) === 'function'\n                ? config.shouldPreventSpanCreation\n                : defaultShouldPreventSpanCreation;\n        return _this;\n    }\n    UserInteractionInstrumentation.prototype.init = function () { };\n    /**\n     * This will check if last task was timeout and will save the time to\n     * fix the user interaction when nothing happens\n     * This timeout comes from xhr plugin which is needed to collect information\n     * about last xhr main request from observer\n     * @param task\n     * @param span\n     */\n    UserInteractionInstrumentation.prototype._checkForTimeout = function (task, span) {\n        var spanData = this._spansData.get(span);\n        if (spanData) {\n            if (task.source === 'setTimeout') {\n                spanData.hrTimeLastTimeout = hrTime();\n            }\n            else if (task.source !== 'Promise.then' &&\n                task.source !== 'setTimeout') {\n                spanData.hrTimeLastTimeout = undefined;\n            }\n        }\n    };\n    /**\n     * Controls whether or not to create a span, based on the event type.\n     */\n    UserInteractionInstrumentation.prototype._allowEventName = function (eventName) {\n        return this._eventNames.has(eventName);\n    };\n    /**\n     * Creates a new span\n     * @param element\n     * @param eventName\n     */\n    UserInteractionInstrumentation.prototype._createSpan = function (element, eventName, parentSpan) {\n        var _a;\n        if (!(element instanceof HTMLElement)) {\n            return undefined;\n        }\n        if (!element.getAttribute) {\n            return undefined;\n        }\n        if (element.hasAttribute('disabled')) {\n            return undefined;\n        }\n        if (!this._allowEventName(eventName)) {\n            return undefined;\n        }\n        var xpath = getElementXPath(element, true);\n        try {\n            var span = this.tracer.startSpan(eventName, {\n                attributes: (_a = {},\n                    _a[AttributeNames.COMPONENT] = this.component,\n                    _a[AttributeNames.EVENT_TYPE] = eventName,\n                    _a[AttributeNames.TARGET_ELEMENT] = element.tagName,\n                    _a[AttributeNames.TARGET_XPATH] = xpath,\n                    _a[AttributeNames.HTTP_URL] = window.location.href,\n                    _a[AttributeNames.HTTP_USER_AGENT] = navigator.userAgent,\n                    _a),\n            }, parentSpan\n                ? api.trace.setSpan(api.context.active(), parentSpan)\n                : undefined);\n            if (this._shouldPreventSpanCreation(eventName, element, span) === true) {\n                return undefined;\n            }\n            this._spansData.set(span, {\n                taskCount: 0,\n            });\n            return span;\n        }\n        catch (e) {\n            api.diag.error(this.component, e);\n        }\n        return undefined;\n    };\n    /**\n     * Decrement number of tasks that left in zone,\n     * This is needed to be able to end span when no more tasks left\n     * @param span\n     */\n    UserInteractionInstrumentation.prototype._decrementTask = function (span) {\n        var spanData = this._spansData.get(span);\n        if (spanData) {\n            spanData.taskCount--;\n            if (spanData.taskCount === 0) {\n                this._tryToEndSpan(span, spanData.hrTimeLastTimeout);\n            }\n        }\n    };\n    /**\n     * Return the current span\n     * @param zone\n     * @private\n     */\n    UserInteractionInstrumentation.prototype._getCurrentSpan = function (zone) {\n        var context = zone.get(ZONE_CONTEXT_KEY);\n        if (context) {\n            return api.trace.getSpan(context);\n        }\n        return context;\n    };\n    /**\n     * Increment number of tasks that are run within the same zone.\n     *     This is needed to be able to end span when no more tasks left\n     * @param span\n     */\n    UserInteractionInstrumentation.prototype._incrementTask = function (span) {\n        var spanData = this._spansData.get(span);\n        if (spanData) {\n            spanData.taskCount++;\n        }\n    };\n    /**\n     * Returns true iff we should use the patched callback; false if it's already been patched\n     */\n    UserInteractionInstrumentation.prototype.addPatchedListener = function (on, type, listener, wrappedListener) {\n        var listener2Type = this._wrappedListeners.get(listener);\n        if (!listener2Type) {\n            listener2Type = new Map();\n            this._wrappedListeners.set(listener, listener2Type);\n        }\n        var element2patched = listener2Type.get(type);\n        if (!element2patched) {\n            element2patched = new Map();\n            listener2Type.set(type, element2patched);\n        }\n        if (element2patched.has(on)) {\n            return false;\n        }\n        element2patched.set(on, wrappedListener);\n        return true;\n    };\n    /**\n     * Returns the patched version of the callback (or undefined)\n     */\n    UserInteractionInstrumentation.prototype.removePatchedListener = function (on, type, listener) {\n        var listener2Type = this._wrappedListeners.get(listener);\n        if (!listener2Type) {\n            return undefined;\n        }\n        var element2patched = listener2Type.get(type);\n        if (!element2patched) {\n            return undefined;\n        }\n        var patched = element2patched.get(on);\n        if (patched) {\n            element2patched.delete(on);\n            if (element2patched.size === 0) {\n                listener2Type.delete(type);\n                if (listener2Type.size === 0) {\n                    this._wrappedListeners.delete(listener);\n                }\n            }\n        }\n        return patched;\n    };\n    // utility method to deal with the Function|EventListener nature of addEventListener\n    UserInteractionInstrumentation.prototype._invokeListener = function (listener, target, args) {\n        if (typeof listener === 'function') {\n            return listener.apply(target, args);\n        }\n        else {\n            return listener.handleEvent(args[0]);\n        }\n    };\n    /**\n     * This patches the addEventListener of HTMLElement to be able to\n     * auto instrument the click events\n     * This is done when zone is not available\n     */\n    UserInteractionInstrumentation.prototype._patchAddEventListener = function () {\n        var plugin = this;\n        return function (original) {\n            return function addEventListenerPatched(type, listener, useCapture) {\n                // Forward calls with listener = null\n                if (!listener) {\n                    return original.call(this, type, listener, useCapture);\n                }\n                var once = typeof useCapture === 'object' && useCapture.once;\n                var patchedListener = function () {\n                    var _this = this;\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var parentSpan;\n                    var event = args[0];\n                    var target = event === null || event === void 0 ? void 0 : event.target;\n                    if (event) {\n                        parentSpan = plugin._eventsSpanMap.get(event);\n                    }\n                    if (once) {\n                        plugin.removePatchedListener(this, type, listener);\n                    }\n                    var span = plugin._createSpan(target, type, parentSpan);\n                    if (span) {\n                        if (event) {\n                            plugin._eventsSpanMap.set(event, span);\n                        }\n                        return api.context.with(api.trace.setSpan(api.context.active(), span), function () {\n                            var result = plugin._invokeListener(listener, _this, args);\n                            // no zone so end span immediately\n                            span.end();\n                            return result;\n                        });\n                    }\n                    else {\n                        return plugin._invokeListener(listener, this, args);\n                    }\n                };\n                if (plugin.addPatchedListener(this, type, listener, patchedListener)) {\n                    return original.call(this, type, patchedListener, useCapture);\n                }\n            };\n        };\n    };\n    /**\n     * This patches the removeEventListener of HTMLElement to handle the fact that\n     * we patched the original callbacks\n     * This is done when zone is not available\n     */\n    UserInteractionInstrumentation.prototype._patchRemoveEventListener = function () {\n        var plugin = this;\n        return function (original) {\n            return function removeEventListenerPatched(type, listener, useCapture) {\n                var wrappedListener = plugin.removePatchedListener(this, type, listener);\n                if (wrappedListener) {\n                    return original.call(this, type, wrappedListener, useCapture);\n                }\n                else {\n                    return original.call(this, type, listener, useCapture);\n                }\n            };\n        };\n    };\n    /**\n     * Most browser provide event listener api via EventTarget in prototype chain.\n     * Exception to this is IE 11 which has it on the prototypes closest to EventTarget:\n     *\n     * * - has addEventListener in IE\n     * ** - has addEventListener in all other browsers\n     * ! - missing in IE\n     *\n     * HTMLElement -> Element -> Node * -> EventTarget **! -> Object\n     * Document -> Node * -> EventTarget **! -> Object\n     * Window * -> WindowProperties ! -> EventTarget **! -> Object\n     */\n    UserInteractionInstrumentation.prototype._getPatchableEventTargets = function () {\n        return window.EventTarget\n            ? [EventTarget.prototype]\n            : [Node.prototype, Window.prototype];\n    };\n    /**\n     * Patches the history api\n     */\n    UserInteractionInstrumentation.prototype._patchHistoryApi = function () {\n        this._unpatchHistoryApi();\n        this._wrap(history, 'replaceState', this._patchHistoryMethod());\n        this._wrap(history, 'pushState', this._patchHistoryMethod());\n        this._wrap(history, 'back', this._patchHistoryMethod());\n        this._wrap(history, 'forward', this._patchHistoryMethod());\n        this._wrap(history, 'go', this._patchHistoryMethod());\n    };\n    /**\n     * Patches the certain history api method\n     */\n    UserInteractionInstrumentation.prototype._patchHistoryMethod = function () {\n        var plugin = this;\n        return function (original) {\n            return function patchHistoryMethod() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = \"\" + location.pathname + location.hash + location.search;\n                var result = original.apply(this, args);\n                var urlAfter = \"\" + location.pathname + location.hash + location.search;\n                if (url !== urlAfter) {\n                    plugin._updateInteractionName(urlAfter);\n                }\n                return result;\n            };\n        };\n    };\n    /**\n     * unpatch the history api methods\n     */\n    UserInteractionInstrumentation.prototype._unpatchHistoryApi = function () {\n        if (isWrapped(history.replaceState))\n            this._unwrap(history, 'replaceState');\n        if (isWrapped(history.pushState))\n            this._unwrap(history, 'pushState');\n        if (isWrapped(history.back))\n            this._unwrap(history, 'back');\n        if (isWrapped(history.forward))\n            this._unwrap(history, 'forward');\n        if (isWrapped(history.go))\n            this._unwrap(history, 'go');\n    };\n    /**\n     * Updates interaction span name\n     * @param url\n     */\n    UserInteractionInstrumentation.prototype._updateInteractionName = function (url) {\n        var span = api.trace.getSpan(api.context.active());\n        if (span && typeof span.updateName === 'function') {\n            span.updateName(EVENT_NAVIGATION_NAME + \" \" + url);\n        }\n    };\n    /**\n     * Patches zone cancel task - this is done to be able to correctly\n     * decrement the number of remaining tasks\n     */\n    UserInteractionInstrumentation.prototype._patchZoneCancelTask = function () {\n        var plugin = this;\n        return function (original) {\n            return function patchCancelTask(task) {\n                var currentZone = Zone.current;\n                var currentSpan = plugin._getCurrentSpan(currentZone);\n                if (currentSpan && plugin._shouldCountTask(task, currentZone)) {\n                    plugin._decrementTask(currentSpan);\n                }\n                return original.call(this, task);\n            };\n        };\n    };\n    /**\n     * Patches zone schedule task - this is done to be able to correctly\n     * increment the number of tasks running within current zone but also to\n     * save time in case of timeout running from xhr plugin when waiting for\n     * main request from PerformanceResourceTiming\n     */\n    UserInteractionInstrumentation.prototype._patchZoneScheduleTask = function () {\n        var plugin = this;\n        return function (original) {\n            return function patchScheduleTask(task) {\n                var currentZone = Zone.current;\n                var currentSpan = plugin._getCurrentSpan(currentZone);\n                if (currentSpan && plugin._shouldCountTask(task, currentZone)) {\n                    plugin._incrementTask(currentSpan);\n                    plugin._checkForTimeout(task, currentSpan);\n                }\n                return original.call(this, task);\n            };\n        };\n    };\n    /**\n     * Patches zone run task - this is done to be able to create a span when\n     * user interaction starts\n     * @private\n     */\n    UserInteractionInstrumentation.prototype._patchZoneRunTask = function () {\n        var plugin = this;\n        return function (original) {\n            return function patchRunTask(task, applyThis, applyArgs) {\n                var event = Array.isArray(applyArgs) && applyArgs[0] instanceof Event\n                    ? applyArgs[0]\n                    : undefined;\n                var target = event === null || event === void 0 ? void 0 : event.target;\n                var span;\n                var activeZone = this;\n                if (target) {\n                    span = plugin._createSpan(target, task.eventName);\n                    if (span) {\n                        plugin._incrementTask(span);\n                        return activeZone.run(function () {\n                            try {\n                                return api.context.with(api.trace.setSpan(api.context.active(), span), function () {\n                                    var currentZone = Zone.current;\n                                    task._zone = currentZone;\n                                    return original.call(currentZone, task, applyThis, applyArgs);\n                                });\n                            }\n                            finally {\n                                plugin._decrementTask(span);\n                            }\n                        });\n                    }\n                }\n                else {\n                    span = plugin._getCurrentSpan(activeZone);\n                }\n                try {\n                    return original.call(activeZone, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (span && plugin._shouldCountTask(task, activeZone)) {\n                        plugin._decrementTask(span);\n                    }\n                }\n            };\n        };\n    };\n    /**\n     * Decides if task should be counted.\n     * @param task\n     * @param currentZone\n     * @private\n     */\n    UserInteractionInstrumentation.prototype._shouldCountTask = function (task, currentZone) {\n        if (task._zone) {\n            currentZone = task._zone;\n        }\n        if (!currentZone || !task.data || task.data.isPeriodic) {\n            return false;\n        }\n        var currentSpan = this._getCurrentSpan(currentZone);\n        if (!currentSpan) {\n            return false;\n        }\n        if (!this._spansData.get(currentSpan)) {\n            return false;\n        }\n        return task.type === 'macroTask' || task.type === 'microTask';\n    };\n    /**\n     * Will try to end span when such span still exists.\n     * @param span\n     * @param endTime\n     * @private\n     */\n    UserInteractionInstrumentation.prototype._tryToEndSpan = function (span, endTime) {\n        if (span) {\n            var spanData = this._spansData.get(span);\n            if (spanData) {\n                span.end(endTime);\n                this._spansData.delete(span);\n            }\n        }\n    };\n    /**\n     * implements enable function\n     */\n    UserInteractionInstrumentation.prototype.enable = function () {\n        var _this = this;\n        var ZoneWithPrototype = this.getZoneWithPrototype();\n        api.diag.debug('applying patch to', this.moduleName, this.version, 'zone:', !!ZoneWithPrototype);\n        if (ZoneWithPrototype) {\n            if (isWrapped(ZoneWithPrototype.prototype.runTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'runTask');\n                api.diag.debug('removing previous patch from method runTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.scheduleTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'scheduleTask');\n                api.diag.debug('removing previous patch from method scheduleTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.cancelTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'cancelTask');\n                api.diag.debug('removing previous patch from method cancelTask');\n            }\n            this._zonePatched = true;\n            this._wrap(ZoneWithPrototype.prototype, 'runTask', this._patchZoneRunTask());\n            this._wrap(ZoneWithPrototype.prototype, 'scheduleTask', this._patchZoneScheduleTask());\n            this._wrap(ZoneWithPrototype.prototype, 'cancelTask', this._patchZoneCancelTask());\n        }\n        else {\n            this._zonePatched = false;\n            var targets = this._getPatchableEventTargets();\n            targets.forEach(function (target) {\n                if (isWrapped(target.addEventListener)) {\n                    _this._unwrap(target, 'addEventListener');\n                    api.diag.debug('removing previous patch from method addEventListener');\n                }\n                if (isWrapped(target.removeEventListener)) {\n                    _this._unwrap(target, 'removeEventListener');\n                    api.diag.debug('removing previous patch from method removeEventListener');\n                }\n                _this._wrap(target, 'addEventListener', _this._patchAddEventListener());\n                _this._wrap(target, 'removeEventListener', _this._patchRemoveEventListener());\n            });\n        }\n        this._patchHistoryApi();\n    };\n    /**\n     * implements unpatch function\n     */\n    UserInteractionInstrumentation.prototype.disable = function () {\n        var _this = this;\n        var ZoneWithPrototype = this.getZoneWithPrototype();\n        api.diag.debug('removing patch from', this.moduleName, this.version, 'zone:', !!ZoneWithPrototype);\n        if (ZoneWithPrototype && this._zonePatched) {\n            if (isWrapped(ZoneWithPrototype.prototype.runTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'runTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.scheduleTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'scheduleTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.cancelTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'cancelTask');\n            }\n        }\n        else {\n            var targets = this._getPatchableEventTargets();\n            targets.forEach(function (target) {\n                if (isWrapped(target.addEventListener)) {\n                    _this._unwrap(target, 'addEventListener');\n                }\n                if (isWrapped(target.removeEventListener)) {\n                    _this._unwrap(target, 'removeEventListener');\n                }\n            });\n        }\n        this._unpatchHistoryApi();\n    };\n    /**\n     * returns Zone\n     */\n    UserInteractionInstrumentation.prototype.getZoneWithPrototype = function () {\n        var _window = window;\n        return _window.Zone;\n    };\n    return UserInteractionInstrumentation;\n}(InstrumentationBase));\nexport { UserInteractionInstrumentation };\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { isAttributeValue, hrTime, hrTimeDuration, isTimeInput, timeInputToHrTime, } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\n/**\n * This class represents a span.\n */\nvar Span = /** @class */ (function () {\n    /** Constructs a new Span instance. */\n    function Span(parentTracer, context, spanName, spanContext, kind, parentSpanId, links, startTime) {\n        if (links === void 0) { links = []; }\n        if (startTime === void 0) { startTime = hrTime(); }\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this.status = {\n            code: api.SpanStatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this.name = spanName;\n        this._spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        this.startTime = timeInputToHrTime(startTime);\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._spanLimits = parentTracer.getSpanLimits();\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n        this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0;\n    }\n    Span.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    Span.prototype.setAttribute = function (key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            api.diag.warn(\"Invalid attribute key: \" + key);\n            return this;\n        }\n        if (!isAttributeValue(value)) {\n            api.diag.warn(\"Invalid attribute value set for key: \" + key);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._spanLimits.attributeCountLimit &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            return this;\n        }\n        this.attributes[key] = this._truncateToSize(value);\n        return this;\n    };\n    Span.prototype.setAttributes = function (attributes) {\n        for (var _i = 0, _a = Object.entries(attributes); _i < _a.length; _i++) {\n            var _b = _a[_i], k = _b[0], v = _b[1];\n            this.setAttribute(k, v);\n        }\n        return this;\n    };\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [startTime] Specified start time for the event\n     */\n    Span.prototype.addEvent = function (name, attributesOrStartTime, startTime) {\n        if (this._isSpanEnded())\n            return this;\n        if (this.events.length >= this._spanLimits.eventCountLimit) {\n            api.diag.warn('Dropping extra events.');\n            this.events.shift();\n        }\n        if (isTimeInput(attributesOrStartTime)) {\n            if (typeof startTime === 'undefined') {\n                startTime = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        if (typeof startTime === 'undefined') {\n            startTime = hrTime();\n        }\n        this.events.push({\n            name: name,\n            attributes: attributesOrStartTime,\n            time: timeInputToHrTime(startTime),\n        });\n        return this;\n    };\n    Span.prototype.setStatus = function (status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = status;\n        return this;\n    };\n    Span.prototype.updateName = function (name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    };\n    Span.prototype.end = function (endTime) {\n        if (endTime === void 0) { endTime = hrTime(); }\n        if (this._isSpanEnded()) {\n            api.diag.error('You can only call end() on a span once.');\n            return;\n        }\n        this._ended = true;\n        this.endTime = timeInputToHrTime(endTime);\n        this._duration = hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            api.diag.warn('Inconsistent start and end time, startTime > endTime', this.startTime, this.endTime);\n        }\n        this._spanProcessor.onEnd(this);\n    };\n    Span.prototype.isRecording = function () {\n        return this._ended === false;\n    };\n    Span.prototype.recordException = function (exception, time) {\n        if (time === void 0) { time = hrTime(); }\n        var attributes = {};\n        if (typeof exception === 'string') {\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE]) {\n            this.addEvent(ExceptionEventName, attributes, time);\n        }\n        else {\n            api.diag.warn(\"Failed to record an exception \" + exception);\n        }\n    };\n    Object.defineProperty(Span.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"ended\", {\n        get: function () {\n            return this._ended;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Span.prototype._isSpanEnded = function () {\n        if (this._ended) {\n            api.diag.warn(\"Can not execute the operation on ended Span {traceId: \" + this._spanContext.traceId + \", spanId: \" + this._spanContext.spanId + \"}\");\n        }\n        return this._ended;\n    };\n    // Utility function to truncate given value within size\n    // for value type of string, will truncate to given limit\n    // for type of non-string, will return same value\n    Span.prototype._truncateToLimitUtil = function (value, limit) {\n        if (value.length <= limit) {\n            return value;\n        }\n        return value.substr(0, limit);\n    };\n    /**\n     * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n     * return string with trucated to {@code attributeValueLengthLimit} characters\n     *\n     * If the given attribute value is array of strings then\n     * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n     *\n     * Otherwise return same Attribute {@code value}\n     *\n     * @param value Attribute value\n     * @returns truncated attribute value if required, otherwise same value\n     */\n    Span.prototype._truncateToSize = function (value) {\n        var _this = this;\n        var limit = this._attributeValueLengthLimit;\n        // Check limit\n        if (limit <= 0) {\n            // Negative values are invalid, so do not truncate\n            api.diag.warn(\"Attribute value limit must be positive, got \" + limit);\n            return value;\n        }\n        // String\n        if (typeof value === 'string') {\n            return this._truncateToLimitUtil(value, limit);\n        }\n        // Array of strings\n        if (Array.isArray(value)) {\n            return value.map(function (val) { return typeof val === 'string' ? _this._truncateToLimitUtil(val, limit) : val; });\n        }\n        // Other types, no need to apply value length limit\n        return value;\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=Span.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Event name definitions\nexport var ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { AlwaysOffSampler, AlwaysOnSampler, getEnv, TracesSamplerValues, ParentBasedSampler, TraceIdRatioBasedSampler, } from '@opentelemetry/core';\nvar env = getEnv();\nvar FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nvar DEFAULT_RATIO = 1;\n/**\n * Default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\nexport var DEFAULT_CONFIG = {\n    sampler: buildSamplerFromEnv(env),\n    forceFlushTimeoutMillis: 30000,\n    generalLimits: {\n        attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n        attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n    },\n    spanLimits: {\n        attributeValueLengthLimit: getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n        attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n        linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n        eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n    },\n};\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(environment) {\n    if (environment === void 0) { environment = getEnv(); }\n    switch (environment.OTEL_TRACES_SAMPLER) {\n        case TracesSamplerValues.AlwaysOn:\n            return new AlwaysOnSampler();\n        case TracesSamplerValues.AlwaysOff:\n            return new AlwaysOffSampler();\n        case TracesSamplerValues.ParentBasedAlwaysOn:\n            return new ParentBasedSampler({\n                root: new AlwaysOnSampler(),\n            });\n        case TracesSamplerValues.ParentBasedAlwaysOff:\n            return new ParentBasedSampler({\n                root: new AlwaysOffSampler(),\n            });\n        case TracesSamplerValues.TraceIdRatio:\n            return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n        case TracesSamplerValues.ParentBasedTraceIdRatio:\n            return new ParentBasedSampler({\n                root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n            });\n        default:\n            diag.error(\"OTEL_TRACES_SAMPLER value \\\"\" + environment.OTEL_TRACES_SAMPLER + \" invalid, defaulting to \" + FALLBACK_OTEL_TRACES_SAMPLER + \"\\\".\");\n            return new AlwaysOnSampler();\n    }\n}\nfunction getSamplerProbabilityFromEnv(environment) {\n    if (environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n        environment.OTEL_TRACES_SAMPLER_ARG === '') {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG is blank, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    var probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n    if (isNaN(probability)) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is invalid, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is out of range ([0..1]), defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { RandomIdGenerator, sanitizeAttributes, isTracingSuppressed, } from '@opentelemetry/core';\nimport { Span } from './Span';\nimport { mergeConfig } from './utility';\n/**\n * This class represents a basic tracer.\n */\nvar Tracer = /** @class */ (function () {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    function Tracer(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        var localConfig = mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._generalLimits = localConfig.generalLimits;\n        this._spanLimits = localConfig.spanLimits;\n        this._idGenerator = config.idGenerator || new RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    Tracer.prototype.startSpan = function (name, options, context) {\n        var _a, _b;\n        if (options === void 0) { options = {}; }\n        if (context === void 0) { context = api.context.active(); }\n        if (isTracingSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            return api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n        }\n        var parentContext = getParent(options, context);\n        var spanId = this._idGenerator.generateSpanId();\n        var traceId;\n        var traceState;\n        var parentSpanId;\n        if (!parentContext || !api.trace.isSpanContextValid(parentContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentContext.traceId;\n            traceState = parentContext.traceState;\n            parentSpanId = parentContext.spanId;\n        }\n        var spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        var links = (_b = options.links) !== null && _b !== void 0 ? _b : [];\n        var attributes = sanitizeAttributes(options.attributes);\n        // make sampling decision\n        var samplingResult = this._sampler.shouldSample(options.root\n            ? api.trace.setSpanContext(context, api.INVALID_SPAN_CONTEXT)\n            : context, traceId, name, spanKind, attributes, links);\n        var traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        var spanContext = { traceId: traceId, spanId: spanId, traceFlags: traceFlags, traceState: traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, propagating context in a non-recording span');\n            return api.trace.wrapSpanContext(spanContext);\n        }\n        var span = new Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime);\n        // Set default attributes\n        span.setAttributes(Object.assign(attributes, samplingResult.attributes));\n        return span;\n    };\n    Tracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : api.context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = api.trace.setSpan(parentContext, span);\n        return api.context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    /** Returns the active {@link GeneralLimits}. */\n    Tracer.prototype.getGeneralLimits = function () {\n        return this._generalLimits;\n    };\n    /** Returns the active {@link SpanLimits}. */\n    Tracer.prototype.getSpanLimits = function () {\n        return this._spanLimits;\n    };\n    Tracer.prototype.getActiveSpanProcessor = function () {\n        return this._tracerProvider.getActiveSpanProcessor();\n    };\n    return Tracer;\n}());\nexport { Tracer };\n/**\n * Get the parent to assign to a started span. If options.parent is null,\n * do not assign a parent.\n *\n * @param options span options\n * @param context context to check for parent\n */\nfunction getParent(options, context) {\n    if (options.root)\n        return undefined;\n    return api.trace.getSpanContext(context);\n}\n//# sourceMappingURL=Tracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nvar BatchSpanProcessor = /** @class */ (function (_super) {\n    __extends(BatchSpanProcessor, _super);\n    function BatchSpanProcessor(_exporter, config) {\n        var _this = _super.call(this, _exporter, config) || this;\n        _this.onInit(config);\n        return _this;\n    }\n    BatchSpanProcessor.prototype.onInit = function (config) {\n        var _this = this;\n        if ((config === null || config === void 0 ? void 0 : config.disableAutoFlushOnDocumentHide) !== true && document != null) {\n            this._visibilityChangeListener = function () {\n                if (document.visibilityState === 'hidden') {\n                    void _this.forceFlush();\n                }\n            };\n            this._pageHideListener = function () {\n                void _this.forceFlush();\n            };\n            document.addEventListener('visibilitychange', this._visibilityChangeListener);\n            // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n            document.addEventListener('pagehide', this._pageHideListener);\n        }\n    };\n    BatchSpanProcessor.prototype.onShutdown = function () {\n        if (this._visibilityChangeListener) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n        }\n        if (this._pageHideListener) {\n            document.removeEventListener('pagehide', this._pageHideListener);\n        }\n    };\n    return BatchSpanProcessor;\n}(BatchSpanProcessorBase));\nexport { BatchSpanProcessor };\n//# sourceMappingURL=BatchSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { trace, context, propagation, diag, } from '@opentelemetry/api';\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator, getEnv, merge, } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { Tracer } from '.';\nimport { DEFAULT_CONFIG } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { BatchSpanProcessor } from './platform';\nexport var ForceFlushState;\n(function (ForceFlushState) {\n    ForceFlushState[ForceFlushState[\"resolved\"] = 0] = \"resolved\";\n    ForceFlushState[ForceFlushState[\"timeout\"] = 1] = \"timeout\";\n    ForceFlushState[ForceFlushState[\"error\"] = 2] = \"error\";\n    ForceFlushState[ForceFlushState[\"unresolved\"] = 3] = \"unresolved\";\n})(ForceFlushState || (ForceFlushState = {}));\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nvar BasicTracerProvider = /** @class */ (function () {\n    function BasicTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        var mergedConfig = merge({}, DEFAULT_CONFIG, config);\n        this.resource = (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : Resource.empty();\n        this.resource = Resource.default().merge(this.resource);\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n        var defaultExporter = this._buildExporterFromEnv();\n        if (defaultExporter !== undefined) {\n            var batchProcessor = new BatchSpanProcessor(defaultExporter);\n            this.activeSpanProcessor = batchProcessor;\n        }\n        else {\n            this.activeSpanProcessor = new NoopSpanProcessor();\n        }\n    }\n    BasicTracerProvider.prototype.getTracer = function (name, version) {\n        var key = name + \"@\" + (version || '');\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new Tracer({ name: name, version: version }, this._config, this));\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tracers.get(key);\n    };\n    /**\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    BasicTracerProvider.prototype.addSpanProcessor = function (spanProcessor) {\n        if (this._registeredSpanProcessors.length === 0) {\n            // since we might have enabled by default a batchProcessor, we disable it\n            // before adding the new one\n            this.activeSpanProcessor\n                .shutdown()\n                .catch(function (err) {\n                return diag.error('Error while trying to shutdown current span processor', err);\n            });\n        }\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor(this._registeredSpanProcessors);\n    };\n    BasicTracerProvider.prototype.getActiveSpanProcessor = function () {\n        return this.activeSpanProcessor;\n    };\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    BasicTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = this._buildPropagatorFromEnv();\n        }\n        if (config.contextManager) {\n            context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            propagation.setGlobalPropagator(config.propagator);\n        }\n    };\n    BasicTracerProvider.prototype.forceFlush = function () {\n        var timeout = this._config.forceFlushTimeoutMillis;\n        var promises = this._registeredSpanProcessors.map(function (spanProcessor) {\n            return new Promise(function (resolve) {\n                var state;\n                var timeoutInterval = setTimeout(function () {\n                    resolve(new Error(\"Span processor did not completed within timeout period of \" + timeout + \" ms\"));\n                    state = ForceFlushState.timeout;\n                }, timeout);\n                spanProcessor\n                    .forceFlush()\n                    .then(function () {\n                    clearTimeout(timeoutInterval);\n                    if (state !== ForceFlushState.timeout) {\n                        state = ForceFlushState.resolved;\n                        resolve(state);\n                    }\n                })\n                    .catch(function (error) {\n                    clearTimeout(timeoutInterval);\n                    state = ForceFlushState.error;\n                    resolve(error);\n                });\n            });\n        });\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises)\n                .then(function (results) {\n                var errors = results.filter(function (result) { return result !== ForceFlushState.resolved; });\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch(function (error) { return reject([error]); });\n        });\n    };\n    BasicTracerProvider.prototype.shutdown = function () {\n        return this.activeSpanProcessor.shutdown();\n    };\n    BasicTracerProvider.prototype._getPropagator = function (name) {\n        var _a;\n        return (_a = BasicTracerProvider._registeredPropagators.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._getSpanExporter = function (name) {\n        var _a;\n        return (_a = BasicTracerProvider._registeredExporters.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._buildPropagatorFromEnv = function () {\n        var _this = this;\n        // per spec, propagators from env must be deduplicated\n        var uniquePropagatorNames = Array.from(new Set(getEnv().OTEL_PROPAGATORS));\n        var propagators = uniquePropagatorNames.map(function (name) {\n            var propagator = _this._getPropagator(name);\n            if (!propagator) {\n                diag.warn(\"Propagator \\\"\" + name + \"\\\" requested through environment variable is unavailable.\");\n            }\n            return propagator;\n        });\n        var validPropagators = propagators.reduce(function (list, item) {\n            if (item) {\n                list.push(item);\n            }\n            return list;\n        }, []);\n        if (validPropagators.length === 0) {\n            return;\n        }\n        else if (uniquePropagatorNames.length === 1) {\n            return validPropagators[0];\n        }\n        else {\n            return new CompositePropagator({\n                propagators: validPropagators,\n            });\n        }\n    };\n    BasicTracerProvider.prototype._buildExporterFromEnv = function () {\n        var exporterName = getEnv().OTEL_TRACES_EXPORTER;\n        if (exporterName === 'none')\n            return;\n        var exporter = this._getSpanExporter(exporterName);\n        if (!exporter) {\n            diag.error(\"Exporter \\\"\" + exporterName + \"\\\" requested through environment variable is unavailable.\");\n        }\n        return exporter;\n    };\n    BasicTracerProvider._registeredPropagators = new Map([\n        ['tracecontext', function () { return new W3CTraceContextPropagator(); }],\n        ['baggage', function () { return new W3CBaggagePropagator(); }],\n    ]);\n    BasicTracerProvider._registeredExporters = new Map();\n    return BasicTracerProvider;\n}());\nexport { BasicTracerProvider };\n//# sourceMappingURL=BasicTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT, DEFAULT_ATTRIBUTE_COUNT_LIMIT } from '@opentelemetry/core';\nimport { buildSamplerFromEnv, DEFAULT_CONFIG } from './config';\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig) {\n    var perInstanceDefaults = {\n        sampler: buildSamplerFromEnv(),\n    };\n    var target = Object.assign({}, DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.generalLimits = Object.assign({}, DEFAULT_CONFIG.generalLimits, userConfig.generalLimits || {});\n    target.spanLimits = Object.assign({}, DEFAULT_CONFIG.spanLimits, userConfig.spanLimits || {});\n    /**\n     * When span attribute count limit is not defined, but general attribute count limit is defined\n     * Then, span attribute count limit will be same as general one\n     */\n    if (target.spanLimits.attributeCountLimit === DEFAULT_ATTRIBUTE_COUNT_LIMIT && target.generalLimits.attributeCountLimit !== DEFAULT_ATTRIBUTE_COUNT_LIMIT) {\n        target.spanLimits.attributeCountLimit = target.generalLimits.attributeCountLimit;\n    }\n    /**\n     * When span attribute value length limit is not defined, but general attribute value length limit is defined\n     * Then, span attribute value length limit will be same as general one\n     */\n    if (target.spanLimits.attributeValueLengthLimit === DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT && target.generalLimits.attributeValueLengthLimit !== DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT) {\n        target.spanLimits.attributeValueLengthLimit = target.generalLimits.attributeValueLengthLimit;\n    }\n    return target;\n}\n//# sourceMappingURL=utility.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { globalErrorHandler } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nvar MultiSpanProcessor = /** @class */ (function () {\n    function MultiSpanProcessor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    MultiSpanProcessor.prototype.forceFlush = function () {\n        var promises = [];\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            promises.push(spanProcessor.forceFlush());\n        }\n        return new Promise(function (resolve) {\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(function (error) {\n                globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    };\n    MultiSpanProcessor.prototype.onStart = function (span, context) {\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            spanProcessor.onStart(span, context);\n        }\n    };\n    MultiSpanProcessor.prototype.onEnd = function (span) {\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            spanProcessor.onEnd(span);\n        }\n    };\n    MultiSpanProcessor.prototype.shutdown = function () {\n        var promises = [];\n        for (var _i = 0, _a = this._spanProcessors; _i < _a.length; _i++) {\n            var spanProcessor = _a[_i];\n            promises.push(spanProcessor.shutdown());\n        }\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises).then(function () {\n                resolve();\n            }, reject);\n        });\n    };\n    return MultiSpanProcessor;\n}());\nexport { MultiSpanProcessor };\n//# sourceMappingURL=MultiSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */ (function () {\n    function NoopSpanProcessor() {\n    }\n    NoopSpanProcessor.prototype.onStart = function (_span, _context) { };\n    NoopSpanProcessor.prototype.onEnd = function (_span) { };\n    NoopSpanProcessor.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    NoopSpanProcessor.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    return NoopSpanProcessor;\n}());\nexport { NoopSpanProcessor };\n//# sourceMappingURL=NoopSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, TraceFlags } from '@opentelemetry/api';\nimport { ExportResultCode, getEnv, globalErrorHandler, suppressTracing, unrefTimer, } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nvar BatchSpanProcessorBase = /** @class */ (function () {\n    function BatchSpanProcessorBase(_exporter, config) {\n        this._exporter = _exporter;\n        this._finishedSpans = [];\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        var env = getEnv();\n        this._maxExportBatchSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxExportBatchSize) === 'number'\n                ? config.maxExportBatchSize\n                : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n        this._maxQueueSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxQueueSize) === 'number'\n                ? config.maxQueueSize\n                : env.OTEL_BSP_MAX_QUEUE_SIZE;\n        this._scheduledDelayMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.scheduledDelayMillis) === 'number'\n                ? config.scheduledDelayMillis\n                : env.OTEL_BSP_SCHEDULE_DELAY;\n        this._exportTimeoutMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.exportTimeoutMillis) === 'number'\n                ? config.exportTimeoutMillis\n                : env.OTEL_BSP_EXPORT_TIMEOUT;\n    }\n    BatchSpanProcessorBase.prototype.forceFlush = function () {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        return this._flushAll();\n    };\n    // does nothing.\n    BatchSpanProcessorBase.prototype.onStart = function (_span) { };\n    BatchSpanProcessorBase.prototype.onEnd = function (span) {\n        if (this._isShutdown) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        this._addToBuffer(span);\n    };\n    BatchSpanProcessorBase.prototype.shutdown = function () {\n        var _this = this;\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise(function (resolve, reject) {\n            Promise.resolve()\n                .then(function () {\n                return _this.onShutdown();\n            })\n                .then(function () {\n                return _this._flushAll();\n            })\n                .then(function () {\n                return _this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(function (e) {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    };\n    /** Add a span in the buffer. */\n    BatchSpanProcessorBase.prototype._addToBuffer = function (span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            return;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    };\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    BatchSpanProcessorBase.prototype._flushAll = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var promises = [];\n            // calculate number of batches\n            var count = Math.ceil(_this._finishedSpans.length / _this._maxExportBatchSize);\n            for (var i = 0, j = count; i < j; i++) {\n                promises.push(_this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(reject);\n        });\n    };\n    BatchSpanProcessorBase.prototype._flushOneBatch = function () {\n        var _this = this;\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var timer = setTimeout(function () {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, _this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            context.with(suppressTracing(context.active()), function () {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside of the execution of this callback.\n                _this._exporter.export(_this._finishedSpans.splice(0, _this._maxExportBatchSize), function (result) {\n                    var _a;\n                    clearTimeout(timer);\n                    if (result.code === ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n            });\n        });\n    };\n    BatchSpanProcessorBase.prototype._maybeStartTimer = function () {\n        var _this = this;\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(function () {\n            _this._flushOneBatch()\n                .then(function () {\n                if (_this._finishedSpans.length > 0) {\n                    _this._clearTimer();\n                    _this._maybeStartTimer();\n                }\n            })\n                .catch(function (e) {\n                globalErrorHandler(e);\n            });\n        }, this._scheduledDelayMillis);\n        unrefTimer(this._timer);\n    };\n    BatchSpanProcessorBase.prototype._clearTimer = function () {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    };\n    return BatchSpanProcessorBase;\n}());\nexport { BatchSpanProcessorBase };\n//# sourceMappingURL=BatchSpanProcessorBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var PerformanceTimingNames;\n(function (PerformanceTimingNames) {\n    PerformanceTimingNames[\"CONNECT_END\"] = \"connectEnd\";\n    PerformanceTimingNames[\"CONNECT_START\"] = \"connectStart\";\n    PerformanceTimingNames[\"DECODED_BODY_SIZE\"] = \"decodedBodySize\";\n    PerformanceTimingNames[\"DOM_COMPLETE\"] = \"domComplete\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_END\"] = \"domContentLoadedEventEnd\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_START\"] = \"domContentLoadedEventStart\";\n    PerformanceTimingNames[\"DOM_INTERACTIVE\"] = \"domInteractive\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_END\"] = \"domainLookupEnd\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_START\"] = \"domainLookupStart\";\n    PerformanceTimingNames[\"ENCODED_BODY_SIZE\"] = \"encodedBodySize\";\n    PerformanceTimingNames[\"FETCH_START\"] = \"fetchStart\";\n    PerformanceTimingNames[\"LOAD_EVENT_END\"] = \"loadEventEnd\";\n    PerformanceTimingNames[\"LOAD_EVENT_START\"] = \"loadEventStart\";\n    PerformanceTimingNames[\"NAVIGATION_START\"] = \"navigationStart\";\n    PerformanceTimingNames[\"REDIRECT_END\"] = \"redirectEnd\";\n    PerformanceTimingNames[\"REDIRECT_START\"] = \"redirectStart\";\n    PerformanceTimingNames[\"REQUEST_START\"] = \"requestStart\";\n    PerformanceTimingNames[\"RESPONSE_END\"] = \"responseEnd\";\n    PerformanceTimingNames[\"RESPONSE_START\"] = \"responseStart\";\n    PerformanceTimingNames[\"SECURE_CONNECTION_START\"] = \"secureConnectionStart\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_END\"] = \"unloadEventEnd\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_START\"] = \"unloadEventStart\";\n})(PerformanceTimingNames || (PerformanceTimingNames = {}));\n//# sourceMappingURL=PerformanceTimingNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport { hrTimeToNanoseconds, timeInputToHrTime, urlMatches, } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n// Used to normalize relative URLs\nvar a;\nexport function getUrlNormalizingAnchor() {\n    if (!a) {\n        a = document.createElement('a');\n    }\n    return a;\n}\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey(obj, key) {\n    return key in obj;\n}\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(span, performanceName, entries) {\n    if (hasKey(entries, performanceName) &&\n        typeof entries[performanceName] === 'number') {\n        span.addEvent(performanceName, entries[performanceName]);\n        return span;\n    }\n    return undefined;\n}\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(span, resource) {\n    addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n    addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n    addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n    var encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n    if (encodedLength !== undefined) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n    }\n    var decodedLength = resource[PTN.DECODED_BODY_SIZE];\n    // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n    if (decodedLength !== undefined && encodedLength !== decodedLength) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, decodedLength);\n    }\n}\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources) {\n    return filteredResources.slice().sort(function (a, b) {\n        var valueA = a[PTN.FETCH_START];\n        var valueB = b[PTN.FETCH_START];\n        if (valueA > valueB) {\n            return 1;\n        }\n        else if (valueA < valueB) {\n            return -1;\n        }\n        return 0;\n    });\n}\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    if (ignoredResources === void 0) { ignoredResources = new WeakSet(); }\n    // de-relativize the URL before usage (does no harm to absolute URLs)\n    var urlNormalizingAnchor = getUrlNormalizingAnchor();\n    urlNormalizingAnchor.href = spanUrl;\n    spanUrl = urlNormalizingAnchor.href;\n    var filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n    if (filteredResources.length === 0) {\n        return {\n            mainRequest: undefined,\n        };\n    }\n    if (filteredResources.length === 1) {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n    var sorted = sortResources(filteredResources);\n    var parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin !== window.location.origin && sorted.length > 1) {\n        var corsPreFlightRequest = sorted[0];\n        var mainRequest = findMainRequest(sorted, corsPreFlightRequest[PTN.RESPONSE_END], endTimeHR);\n        var responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n        var fetchStart = mainRequest[PTN.FETCH_START];\n        // no corsPreFlightRequest\n        if (fetchStart < responseEnd) {\n            mainRequest = corsPreFlightRequest;\n            corsPreFlightRequest = undefined;\n        }\n        return {\n            corsPreFlightRequest: corsPreFlightRequest,\n            mainRequest: mainRequest,\n        };\n    }\n    else {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n}\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n    var spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n    var minTime = hrTimeToNanoseconds(timeInputToHrTime(corsPreFlightRequestEndTime));\n    var mainRequest = resources[1];\n    var bestGap;\n    var length = resources.length;\n    for (var i = 1; i < length; i++) {\n        var resource = resources[i];\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        var currentGap = spanEndTime - resourceEndTime;\n        if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n            bestGap = currentGap;\n            mainRequest = resource;\n        }\n    }\n    return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    var startTime = hrTimeToNanoseconds(startTimeHR);\n    var endTime = hrTimeToNanoseconds(endTimeHR);\n    var filteredResources = resources.filter(function (resource) {\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        return (resource.initiatorType.toLowerCase() ===\n            (initiatorType || 'xmlhttprequest') &&\n            resource.name === spanUrl &&\n            resourceStartTime >= startTime &&\n            resourceEndTime <= endTime);\n    });\n    if (filteredResources.length > 0) {\n        filteredResources = filteredResources.filter(function (resource) {\n            return !ignoredResources.has(resource);\n        });\n    }\n    return filteredResources;\n}\n/**\n * Parses url using anchor element\n * @param url\n */\nexport function parseUrl(url) {\n    var a = document.createElement('a');\n    a.href = url;\n    return a;\n}\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getElementXPath(target, optimised) {\n    if (target.nodeType === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    var targetValue = getNodeValue(target, optimised);\n    if (optimised && targetValue.indexOf('@id') > 0) {\n        return targetValue;\n    }\n    var xpath = '';\n    if (target.parentNode) {\n        xpath += getElementXPath(target.parentNode, false);\n    }\n    xpath += targetValue;\n    return xpath;\n}\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n    if (!target.parentNode) {\n        return 0;\n    }\n    var allowedTypes = [target.nodeType];\n    if (target.nodeType === Node.CDATA_SECTION_NODE) {\n        allowedTypes.push(Node.TEXT_NODE);\n    }\n    var elements = Array.from(target.parentNode.childNodes);\n    elements = elements.filter(function (element) {\n        var localName = element.localName;\n        return (allowedTypes.indexOf(element.nodeType) >= 0 &&\n            localName === target.localName);\n    });\n    if (elements.length >= 1) {\n        return elements.indexOf(target) + 1; // xpath starts from 1\n    }\n    // if there are no other similar child xpath doesn't need index\n    return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n    var nodeType = target.nodeType;\n    var index = getNodeIndex(target);\n    var nodeValue = '';\n    if (nodeType === Node.ELEMENT_NODE) {\n        var id = target.getAttribute('id');\n        if (optimised && id) {\n            return \"//*[@id=\\\"\" + id + \"\\\"]\";\n        }\n        nodeValue = target.localName;\n    }\n    else if (nodeType === Node.TEXT_NODE ||\n        nodeType === Node.CDATA_SECTION_NODE) {\n        nodeValue = 'text()';\n    }\n    else if (nodeType === Node.COMMENT_NODE) {\n        nodeValue = 'comment()';\n    }\n    else {\n        return '';\n    }\n    // if index is 1 it can be omitted in xpath\n    if (nodeValue && index > 1) {\n        return \"/\" + nodeValue + \"[\" + index + \"]\";\n    }\n    return \"/\" + nodeValue;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n    var propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n    if (typeof propagateTraceHeaderUrls === 'string' ||\n        propagateTraceHeaderUrls instanceof RegExp) {\n        propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n    }\n    var parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin === window.location.origin) {\n        return true;\n    }\n    else {\n        return propagateTraceHeaderUrls.some(function (propagateTraceHeaderUrl) {\n            return urlMatches(spanUrl, propagateTraceHeaderUrl);\n        });\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var EventNames;\n(function (EventNames) {\n    EventNames[\"METHOD_OPEN\"] = \"open\";\n    EventNames[\"METHOD_SEND\"] = \"send\";\n    EventNames[\"EVENT_ABORT\"] = \"abort\";\n    EventNames[\"EVENT_ERROR\"] = \"error\";\n    EventNames[\"EVENT_LOAD\"] = \"loaded\";\n    EventNames[\"EVENT_TIMEOUT\"] = \"timeout\";\n})(EventNames || (EventNames = {}));\n//# sourceMappingURL=EventNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { ROOT_CONTEXT } from '@opentelemetry/api';\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nvar StackContextManager = /** @class */ (function () {\n    function StackContextManager() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Keeps the reference to current context\n         */\n        this._currentContext = ROOT_CONTEXT;\n    }\n    /**\n     *\n     * @param context\n     * @param target Function to be executed within the context\n     */\n    StackContextManager.prototype._bindFunction = function (context, target) {\n        if (context === void 0) { context = ROOT_CONTEXT; }\n        var manager = this;\n        var contextWrapper = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.with(context, function () { return target.apply(_this, args); });\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    };\n    /**\n     * Returns the active context\n     */\n    StackContextManager.prototype.active = function () {\n        return this._currentContext;\n    };\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    StackContextManager.prototype.bind = function (context, target) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        return target;\n    };\n    /**\n     * Disable the context manager (clears the current context)\n     */\n    StackContextManager.prototype.disable = function () {\n        this._currentContext = ROOT_CONTEXT;\n        this._enabled = false;\n        return this;\n    };\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    StackContextManager.prototype.enable = function () {\n        if (this._enabled) {\n            return this;\n        }\n        this._enabled = true;\n        this._currentContext = ROOT_CONTEXT;\n        return this;\n    };\n    /**\n     * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n     * The context will be set as active\n     * @param context\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    StackContextManager.prototype.with = function (context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        var previousContext = this._currentContext;\n        this._currentContext = context || ROOT_CONTEXT;\n        try {\n            return fn.call.apply(fn, __spreadArray([thisArg], args));\n        }\n        finally {\n            this._currentContext = previousContext;\n        }\n    };\n    return StackContextManager;\n}());\nexport { StackContextManager };\n//# sourceMappingURL=StackContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode, hrTimeToMicroseconds, } from '@opentelemetry/core';\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n/* eslint-disable no-console */\nvar ConsoleSpanExporter = /** @class */ (function () {\n    function ConsoleSpanExporter() {\n    }\n    /**\n     * Export spans.\n     * @param spans\n     * @param resultCallback\n     */\n    ConsoleSpanExporter.prototype.export = function (spans, resultCallback) {\n        return this._sendSpans(spans, resultCallback);\n    };\n    /**\n     * Shutdown the exporter.\n     */\n    ConsoleSpanExporter.prototype.shutdown = function () {\n        this._sendSpans([]);\n        return Promise.resolve();\n    };\n    /**\n     * converts span info into more readable format\n     * @param span\n     */\n    ConsoleSpanExporter.prototype._exportInfo = function (span) {\n        return {\n            traceId: span.spanContext().traceId,\n            parentId: span.parentSpanId,\n            name: span.name,\n            id: span.spanContext().spanId,\n            kind: span.kind,\n            timestamp: hrTimeToMicroseconds(span.startTime),\n            duration: hrTimeToMicroseconds(span.duration),\n            attributes: span.attributes,\n            status: span.status,\n            events: span.events,\n        };\n    };\n    /**\n     * Showing spans in console\n     * @param spans\n     * @param done\n     */\n    ConsoleSpanExporter.prototype._sendSpans = function (spans, done) {\n        for (var _i = 0, spans_1 = spans; _i < spans_1.length; _i++) {\n            var span = spans_1[_i];\n            console.log(this._exportInfo(span));\n        }\n        if (done) {\n            return done({ code: ExportResultCode.SUCCESS });\n        }\n    };\n    return ConsoleSpanExporter;\n}());\nexport { ConsoleSpanExporter };\n//# sourceMappingURL=ConsoleSpanExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nvar InMemorySpanExporter = /** @class */ (function () {\n    function InMemorySpanExporter() {\n        this._finishedSpans = [];\n        /**\n         * Indicates if the exporter has been \"shutdown.\"\n         * When false, exported spans will not be stored in-memory.\n         */\n        this._stopped = false;\n    }\n    InMemorySpanExporter.prototype.export = function (spans, resultCallback) {\n        var _a;\n        if (this._stopped)\n            return resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Exporter has been stopped'),\n            });\n        (_a = this._finishedSpans).push.apply(_a, spans);\n        setTimeout(function () { return resultCallback({ code: ExportResultCode.SUCCESS }); }, 0);\n    };\n    InMemorySpanExporter.prototype.shutdown = function () {\n        this._stopped = true;\n        this._finishedSpans = [];\n        return Promise.resolve();\n    };\n    InMemorySpanExporter.prototype.reset = function () {\n        this._finishedSpans = [];\n    };\n    InMemorySpanExporter.prototype.getFinishedSpans = function () {\n        return this._finishedSpans;\n    };\n    return InMemorySpanExporter;\n}());\nexport { InMemorySpanExporter };\n//# sourceMappingURL=InMemorySpanExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, TraceFlags } from '@opentelemetry/api';\nimport { ExportResultCode, globalErrorHandler, suppressTracing, } from '@opentelemetry/core';\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nvar SimpleSpanProcessor = /** @class */ (function () {\n    function SimpleSpanProcessor(_exporter) {\n        this._exporter = _exporter;\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n    }\n    SimpleSpanProcessor.prototype.forceFlush = function () {\n        // do nothing as all spans are being exported without waiting\n        return Promise.resolve();\n    };\n    // does nothing.\n    SimpleSpanProcessor.prototype.onStart = function (_span) { };\n    SimpleSpanProcessor.prototype.onEnd = function (span) {\n        var _this = this;\n        if (this._isShutdown) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        // prevent downstream exporter calls from generating spans\n        context.with(suppressTracing(context.active()), function () {\n            _this._exporter.export([span], function (result) {\n                var _a;\n                if (result.code !== ExportResultCode.SUCCESS) {\n                    globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error(\"SimpleSpanProcessor: span export failed (status \" + result + \")\"));\n                }\n            });\n        });\n    };\n    SimpleSpanProcessor.prototype.shutdown = function () {\n        var _this = this;\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise(function (resolve, reject) {\n            Promise.resolve()\n                .then(function () {\n                return _this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(function (e) {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    };\n    return SimpleSpanProcessor;\n}());\nexport { SimpleSpanProcessor };\n//# sourceMappingURL=SimpleSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BasicTracerProvider, } from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nvar WebTracerProvider = /** @class */ (function (_super) {\n    __extends(WebTracerProvider, _super);\n    /**\n     * Constructs a new Tracer instance.\n     * @param config Web Tracer config\n     */\n    function WebTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        if (config.contextManager) {\n            throw ('contextManager should be defined in register method not in' +\n                ' constructor');\n        }\n        if (config.propagator) {\n            throw 'propagator should be defined in register method not in constructor';\n        }\n        return _this;\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    WebTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        if (config.contextManager === undefined) {\n            config.contextManager = new StackContextManager();\n        }\n        if (config.contextManager) {\n            config.contextManager.enable();\n        }\n        _super.prototype.register.call(this, config);\n    };\n    return WebTracerProvider;\n}(BasicTracerProvider));\nexport { WebTracerProvider };\n//# sourceMappingURL=WebTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '0.27.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"HTTP_STATUS_TEXT\"] = \"http.status_text\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle, } from '@opentelemetry/instrumentation';\nimport { hrTime, isUrlIgnored, otperformance } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { addSpanNetworkEvents, getResource, parseUrl, PerformanceTimingNames as PTN, shouldPropagateTraceHeaders, getUrlNormalizingAnchor } from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums/AttributeNames';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nvar OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nvar XMLHttpRequestInstrumentation = /** @class */ (function (_super) {\n    __extends(XMLHttpRequestInstrumentation, _super);\n    function XMLHttpRequestInstrumentation(config) {\n        var _this = _super.call(this, '@opentelemetry/instrumentation-xml-http-request', VERSION, config) || this;\n        _this.component = 'xml-http-request';\n        _this.version = VERSION;\n        _this.moduleName = _this.component;\n        _this._tasksCount = 0;\n        _this._xhrMem = new WeakMap();\n        _this._usedResources = new WeakSet();\n        return _this;\n    }\n    XMLHttpRequestInstrumentation.prototype.init = function () { };\n    XMLHttpRequestInstrumentation.prototype._getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Adds custom headers to XMLHttpRequest\n     * @param xhr\n     * @param span\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addHeaders = function (xhr, spanUrl) {\n        if (!shouldPropagateTraceHeaders(spanUrl, this._getConfig().propagateTraceHeaderCorsUrls)) {\n            var headers_1 = {};\n            api.propagation.inject(api.context.active(), headers_1);\n            if (Object.keys(headers_1).length > 0) {\n                this._diag.debug('headers inject skipped due to CORS policy');\n            }\n            return;\n        }\n        var headers = {};\n        api.propagation.inject(api.context.active(), headers);\n        Object.keys(headers).forEach(function (key) {\n            xhr.setRequestHeader(key, String(headers[key]));\n        });\n    };\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addChildSpan = function (span, corsPreFlightRequest) {\n        var _this = this;\n        api.context.with(api.trace.setSpan(api.context.active(), span), function () {\n            var childSpan = _this.tracer.startSpan('CORS Preflight', {\n                startTime: corsPreFlightRequest[PTN.FETCH_START],\n            });\n            addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n            childSpan.end(corsPreFlightRequest[PTN.RESPONSE_END]);\n        });\n    };\n    /**\n     * Add attributes when span is going to end\n     * @param span\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addFinalSpanAttributes = function (span, xhrMem, spanUrl) {\n        if (typeof spanUrl === 'string') {\n            var parsedUrl = parseUrl(spanUrl);\n            if (xhrMem.status !== undefined) {\n                span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, xhrMem.status);\n            }\n            if (xhrMem.statusText !== undefined) {\n                span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, xhrMem.statusText);\n            }\n            span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n            span.setAttribute(SemanticAttributes.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n            // @TODO do we want to collect this or it will be collected earlier once only or\n            //    maybe when parent span is not available ?\n            span.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n        }\n    };\n    XMLHttpRequestInstrumentation.prototype._applyAttributesAfterXHR = function (span, xhr) {\n        var _this = this;\n        var applyCustomAttributesOnSpan = this._getConfig()\n            .applyCustomAttributesOnSpan;\n        if (typeof applyCustomAttributesOnSpan === 'function') {\n            safeExecuteInTheMiddle(function () { return applyCustomAttributesOnSpan(span, xhr); }, function (error) {\n                if (!error) {\n                    return;\n                }\n                _this._diag.error('applyCustomAttributesOnSpan', error);\n            }, true);\n        }\n    };\n    /**\n     * will collect information about all resources created\n     * between \"send\" and \"end\" with additional waiting for main resource\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addResourceObserver = function (xhr, spanUrl) {\n        var xhrMem = this._xhrMem.get(xhr);\n        if (!xhrMem ||\n            typeof window.PerformanceObserver === 'undefined' ||\n            typeof window.PerformanceResourceTiming === 'undefined') {\n            return;\n        }\n        xhrMem.createdResources = {\n            observer: new PerformanceObserver(function (list) {\n                var entries = list.getEntries();\n                var urlNormalizingAnchor = getUrlNormalizingAnchor();\n                urlNormalizingAnchor.href = spanUrl;\n                entries.forEach(function (entry) {\n                    if (entry.initiatorType === 'xmlhttprequest' &&\n                        entry.name === urlNormalizingAnchor.href) {\n                        if (xhrMem.createdResources) {\n                            xhrMem.createdResources.entries.push(entry);\n                        }\n                    }\n                });\n            }),\n            entries: [],\n        };\n        xhrMem.createdResources.observer.observe({\n            entryTypes: ['resource'],\n        });\n    };\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._clearResources = function () {\n        if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n            otperformance.clearResourceTimings();\n            this._xhrMem = new WeakMap();\n            this._usedResources = new WeakSet();\n        }\n    };\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     */\n    XMLHttpRequestInstrumentation.prototype._findResourceAndAddNetworkEvents = function (xhrMem, span, spanUrl, startTime, endTime) {\n        if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n            return;\n        }\n        var resources = xhrMem.createdResources.entries;\n        if (!resources || !resources.length) {\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            // ts thinks this is the perf_hooks module, but it is the browser performance api\n            resources = otperformance.getEntriesByType('resource');\n        }\n        var resource = getResource(spanUrl, startTime, endTime, resources, this._usedResources);\n        if (resource.mainRequest) {\n            var mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            var corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            addSpanNetworkEvents(span, mainRequest);\n        }\n    };\n    /**\n     * Removes the previous information about span.\n     * This might happened when the same xhr is used again.\n     * @param xhr\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._cleanPreviousSpanInformation = function (xhr) {\n        var xhrMem = this._xhrMem.get(xhr);\n        if (xhrMem) {\n            var callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (callbackToRemoveEvents) {\n                callbackToRemoveEvents();\n            }\n            this._xhrMem.delete(xhr);\n        }\n    };\n    /**\n     * Creates a new span when method \"open\" is called\n     * @param xhr\n     * @param url\n     * @param method\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._createSpan = function (xhr, url, method) {\n        var _a;\n        if (isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n            this._diag.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        var spanName = \"HTTP \" + method.toUpperCase();\n        var currentSpan = this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: (_a = {},\n                _a[SemanticAttributes.HTTP_METHOD] = method,\n                _a[SemanticAttributes.HTTP_URL] = url,\n                _a),\n        });\n        currentSpan.addEvent(EventNames.METHOD_OPEN);\n        this._cleanPreviousSpanInformation(xhr);\n        this._xhrMem.set(xhr, {\n            span: currentSpan,\n            spanUrl: url,\n        });\n        return currentSpan;\n    };\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._markResourceAsUsed = function (resource) {\n        this._usedResources.add(resource);\n    };\n    /**\n     * Patches the method open\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._patchOpen = function () {\n        var _this = this;\n        return function (original) {\n            var plugin = _this;\n            return function patchOpen() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var method = args[0];\n                var url = args[1];\n                plugin._createSpan(this, url, method);\n                return original.apply(this, args);\n            };\n        };\n    };\n    /**\n     * Patches the method send\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._patchSend = function () {\n        var plugin = this;\n        function endSpanTimeout(eventName, xhrMem, endTime) {\n            var callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (typeof callbackToRemoveEvents === 'function') {\n                callbackToRemoveEvents();\n            }\n            var span = xhrMem.span, spanUrl = xhrMem.spanUrl, sendStartTime = xhrMem.sendStartTime;\n            if (span) {\n                plugin._findResourceAndAddNetworkEvents(xhrMem, span, spanUrl, sendStartTime, endTime);\n                span.addEvent(eventName, endTime);\n                plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n                span.end(endTime);\n                plugin._tasksCount--;\n            }\n            plugin._clearResources();\n        }\n        function endSpan(eventName, xhr) {\n            var xhrMem = plugin._xhrMem.get(xhr);\n            if (!xhrMem) {\n                return;\n            }\n            xhrMem.status = xhr.status;\n            xhrMem.statusText = xhr.statusText;\n            plugin._xhrMem.delete(xhr);\n            if (xhrMem.span) {\n                plugin._applyAttributesAfterXHR(xhrMem.span, xhr);\n            }\n            var endTime = hrTime();\n            // the timeout is needed as observer doesn't have yet information\n            // when event \"load\" is called. Also the time may differ depends on\n            // browser and speed of computer\n            setTimeout(function () {\n                endSpanTimeout(eventName, xhrMem, endTime);\n            }, OBSERVER_WAIT_TIME_MS);\n        }\n        function onError() {\n            endSpan(EventNames.EVENT_ERROR, this);\n        }\n        function onAbort() {\n            endSpan(EventNames.EVENT_ABORT, this);\n        }\n        function onTimeout() {\n            endSpan(EventNames.EVENT_TIMEOUT, this);\n        }\n        function onLoad() {\n            if (this.status < 299) {\n                endSpan(EventNames.EVENT_LOAD, this);\n            }\n            else {\n                endSpan(EventNames.EVENT_ERROR, this);\n            }\n        }\n        function unregister(xhr) {\n            xhr.removeEventListener('abort', onAbort);\n            xhr.removeEventListener('error', onError);\n            xhr.removeEventListener('load', onLoad);\n            xhr.removeEventListener('timeout', onTimeout);\n            var xhrMem = plugin._xhrMem.get(xhr);\n            if (xhrMem) {\n                xhrMem.callbackToRemoveEvents = undefined;\n            }\n        }\n        return function (original) {\n            return function patchSend() {\n                var _this = this;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhrMem = plugin._xhrMem.get(this);\n                if (!xhrMem) {\n                    return original.apply(this, args);\n                }\n                var currentSpan = xhrMem.span;\n                var spanUrl = xhrMem.spanUrl;\n                if (currentSpan && spanUrl) {\n                    api.context.with(api.trace.setSpan(api.context.active(), currentSpan), function () {\n                        plugin._tasksCount++;\n                        xhrMem.sendStartTime = hrTime();\n                        currentSpan.addEvent(EventNames.METHOD_SEND);\n                        _this.addEventListener('abort', onAbort);\n                        _this.addEventListener('error', onError);\n                        _this.addEventListener('load', onLoad);\n                        _this.addEventListener('timeout', onTimeout);\n                        xhrMem.callbackToRemoveEvents = function () {\n                            unregister(_this);\n                            if (xhrMem.createdResources) {\n                                xhrMem.createdResources.observer.disconnect();\n                            }\n                        };\n                        plugin._addHeaders(_this, spanUrl);\n                        plugin._addResourceObserver(_this, spanUrl);\n                    });\n                }\n                return original.apply(this, args);\n            };\n        };\n    };\n    /**\n     * implements enable function\n     */\n    XMLHttpRequestInstrumentation.prototype.enable = function () {\n        this._diag.debug('applying patch to', this.moduleName, this.version);\n        if (isWrapped(XMLHttpRequest.prototype.open)) {\n            this._unwrap(XMLHttpRequest.prototype, 'open');\n            this._diag.debug('removing previous patch from method open');\n        }\n        if (isWrapped(XMLHttpRequest.prototype.send)) {\n            this._unwrap(XMLHttpRequest.prototype, 'send');\n            this._diag.debug('removing previous patch from method send');\n        }\n        this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n        this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n    };\n    /**\n     * implements disable function\n     */\n    XMLHttpRequestInstrumentation.prototype.disable = function () {\n        this._diag.debug('removing patch from', this.moduleName, this.version);\n        this._unwrap(XMLHttpRequest.prototype, 'open');\n        this._unwrap(XMLHttpRequest.prototype, 'send');\n        this._tasksCount = 0;\n        this._xhrMem = new WeakMap();\n        this._usedResources = new WeakSet();\n    };\n    return XMLHttpRequestInstrumentation;\n}(InstrumentationBase));\nexport { XMLHttpRequestInstrumentation };\n//# sourceMappingURL=xhr.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * Returns a constant noop histogram.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createHistogram = function (_name, _options) {\n        return NOOP_HISTOGRAM_METRIC;\n    };\n    /**\n     * Returns a constant noop counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return NOOP_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop UpDownCounter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return NOOP_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop observable gauge.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the observable gauge callback\n     */\n    NoopMeter.prototype.createObservableGauge = function (_name, _options, _callback) {\n        return NOOP_OBSERVABLE_GAUGE_METRIC;\n    };\n    /**\n     * Returns a constant noop observable counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the observable counter callback\n     */\n    NoopMeter.prototype.createObservableCounter = function (_name, _options, _callback) {\n        return NOOP_OBSERVABLE_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop up down observable counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the up down observable counter callback\n     */\n    NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options, _callback) {\n        return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n    };\n    return NoopMeter;\n}());\nexport { NoopMeter };\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric() {\n    }\n    return NoopMetric;\n}());\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopCounterMetric;\n}(NoopMetric));\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopUpDownCounterMetric, _super);\n    function NoopUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopUpDownCounterMetric;\n}(NoopMetric));\nexport { NoopUpDownCounterMetric };\nvar NoopHistogramMetric = /** @class */ (function (_super) {\n    __extends(NoopHistogramMetric, _super);\n    function NoopHistogramMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopHistogramMetric.prototype.record = function (_value, _attributes) { };\n    return NoopHistogramMetric;\n}(NoopMetric));\nexport { NoopHistogramMetric };\nvar NoopObservableBaseMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableBaseMetric, _super);\n    function NoopObservableBaseMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopObservableBaseMetric.prototype.observation = function () {\n        return {\n            observable: this,\n            value: 0,\n        };\n    };\n    return NoopObservableBaseMetric;\n}(NoopMetric));\nexport { NoopObservableBaseMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableBaseMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableBaseMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableBaseMetric();\n//# sourceMappingURL=NoopMeter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Type of value. It describes how the data is reported. */\nexport var ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType || (ValueType = {}));\n/** The kind of aggregator. */\nexport var AggregationTemporality;\n(function (AggregationTemporality) {\n    AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_UNSPECIFIED\"] = 0] = \"AGGREGATION_TEMPORALITY_UNSPECIFIED\";\n    AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_DELTA\"] = 1] = \"AGGREGATION_TEMPORALITY_DELTA\";\n    AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_CUMULATIVE\"] = 2] = \"AGGREGATION_TEMPORALITY_CUMULATIVE\";\n})(AggregationTemporality || (AggregationTemporality = {}));\n//# sourceMappingURL=Metric.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n        return NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof global === 'object' ? global :\n                {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nexport var GLOBAL_METRICS_API_KEY = Symbol.for('io.opentelemetry.js.api.metrics');\nexport var _global = _globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter(requiredVersion, instance, fallback) {\n    return function (version) {\n        return version === requiredVersion ? instance : fallback;\n    };\n}\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport var API_BACKWARDS_COMPATIBILITY_VERSION = 4;\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './NoopMeter';\nexport * from './NoopMeterProvider';\nexport * from './types/Meter';\nexport * from './types/MeterProvider';\nexport * from './types/Metric';\nexport * from './types/Observation';\nexport * from './types/ObservableResult';\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport var metrics = MetricsAPI.getInstance();\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER_PROVIDER } from '../NoopMeterProvider';\nimport { API_BACKWARDS_COMPATIBILITY_VERSION, GLOBAL_METRICS_API_KEY, makeGetter, _global, } from './global-utils';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function MetricsAPI() {\n    }\n    /** Get the singleton instance of the Metrics API */\n    MetricsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global meter. Returns the initialized global meter provider.\n     */\n    MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n        if (_global[GLOBAL_METRICS_API_KEY]) {\n            // global meter provider has already been set\n            return this.getMeterProvider();\n        }\n        _global[GLOBAL_METRICS_API_KEY] = makeGetter(API_BACKWARDS_COMPATIBILITY_VERSION, provider, NOOP_METER_PROVIDER);\n        return provider;\n    };\n    /**\n     * Returns the global meter provider.\n     */\n    MetricsAPI.prototype.getMeterProvider = function () {\n        var _a, _b;\n        return ((_b = (_a = _global[GLOBAL_METRICS_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(_global, API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : NOOP_METER_PROVIDER);\n    };\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    MetricsAPI.prototype.getMeter = function (name, version, options) {\n        return this.getMeterProvider().getMeter(name, version, options);\n    };\n    /** Remove the global meter provider */\n    MetricsAPI.prototype.disable = function () {\n        delete _global[GLOBAL_METRICS_API_KEY];\n    };\n    return MetricsAPI;\n}());\nexport { MetricsAPI };\n//# sourceMappingURL=metrics.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Parses the options and returns instrumentations, node plugins and\n *   web plugins\n * @param options\n */\nexport function parseInstrumentationOptions(options) {\n    if (options === void 0) { options = []; }\n    var instrumentations = [];\n    for (var i = 0, j = options.length; i < j; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var option = options[i];\n        if (Array.isArray(option)) {\n            var results = parseInstrumentationOptions(option);\n            instrumentations = instrumentations.concat(results.instrumentations);\n        }\n        else if (typeof option === 'function') {\n            instrumentations.push(new option());\n        }\n        else if (option.instrumentationName) {\n            instrumentations.push(option);\n        }\n    }\n    return { instrumentations: instrumentations };\n}\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(instrumentations, tracerProvider, meterProvider) {\n    for (var i = 0, j = instrumentations.length; i < j; i++) {\n        var instrumentation = instrumentations[i];\n        if (tracerProvider) {\n            instrumentation.setTracerProvider(tracerProvider);\n        }\n        if (meterProvider) {\n            instrumentation.setMeterProvider(meterProvider);\n        }\n        // instrumentations have been already enabled during creation\n        // so enable only if user prevented that by setting enabled to false\n        // this is to prevent double enabling but when calling register all\n        // instrumentations should be now enabled\n        if (!instrumentation.getConfig().enabled) {\n            instrumentation.enable();\n        }\n    }\n}\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(instrumentations) {\n    instrumentations.forEach(function (instrumentation) { return instrumentation.disable(); });\n}\n//# sourceMappingURL=autoLoaderUtils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { trace } from '@opentelemetry/api';\nimport { metrics } from '@opentelemetry/api-metrics';\nimport { disableInstrumentations, enableInstrumentations, parseInstrumentationOptions, } from './autoLoaderUtils';\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(options) {\n    var instrumentations = parseInstrumentationOptions(options.instrumentations).instrumentations;\n    var tracerProvider = options.tracerProvider || trace.getTracerProvider();\n    var meterProvider = options.meterProvider || metrics.getMeterProvider();\n    enableInstrumentations(instrumentations, tracerProvider, meterProvider);\n    return function () {\n        disableInstrumentations(instrumentations);\n    };\n}\n//# sourceMappingURL=autoLoader.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { diag, trace, } from '@opentelemetry/api';\nimport { metrics } from '@opentelemetry/api-metrics';\nimport * as shimmer from 'shimmer';\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nvar InstrumentationAbstract = /** @class */ (function () {\n    function InstrumentationAbstract(instrumentationName, instrumentationVersion, config) {\n        if (config === void 0) { config = {}; }\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        /* Api to wrap instrumented method */\n        this._wrap = shimmer.wrap;\n        /* Api to unwrap instrumented methods */\n        this._unwrap = shimmer.unwrap;\n        /* Api to mass wrap instrumented method */\n        this._massWrap = shimmer.massWrap;\n        /* Api to mass unwrap instrumented methods */\n        this._massUnwrap = shimmer.massUnwrap;\n        this._config = __assign({ enabled: true }, config);\n        this._diag = diag.createComponentLogger({\n            namespace: instrumentationName,\n        });\n        this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n        this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n    }\n    Object.defineProperty(InstrumentationAbstract.prototype, \"meter\", {\n        /* Returns meter */\n        get: function () {\n            return this._meter;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets MeterProvider to this plugin\n     * @param meterProvider\n     */\n    InstrumentationAbstract.prototype.setMeterProvider = function (meterProvider) {\n        this._meter = meterProvider.getMeter(this.instrumentationName, this.instrumentationVersion);\n    };\n    /* Returns InstrumentationConfig */\n    InstrumentationAbstract.prototype.getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Sets InstrumentationConfig to this plugin\n     * @param InstrumentationConfig\n     */\n    InstrumentationAbstract.prototype.setConfig = function (config) {\n        if (config === void 0) { config = {}; }\n        this._config = Object.assign({}, config);\n    };\n    /**\n     * Sets TraceProvider to this plugin\n     * @param tracerProvider\n     */\n    InstrumentationAbstract.prototype.setTracerProvider = function (tracerProvider) {\n        this._tracer = tracerProvider.getTracer(this.instrumentationName, this.instrumentationVersion);\n    };\n    Object.defineProperty(InstrumentationAbstract.prototype, \"tracer\", {\n        /* Returns tracer */\n        get: function () {\n            return this._tracer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return InstrumentationAbstract;\n}());\nexport { InstrumentationAbstract };\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { InstrumentationAbstract } from '../../instrumentation';\n/**\n * Base abstract class for instrumenting web plugins\n */\nvar InstrumentationBase = /** @class */ (function (_super) {\n    __extends(InstrumentationBase, _super);\n    function InstrumentationBase(instrumentationName, instrumentationVersion, config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, instrumentationName, instrumentationVersion, config) || this;\n        if (_this._config.enabled) {\n            _this.enable();\n        }\n        return _this;\n    }\n    return InstrumentationBase;\n}(InstrumentationAbstract));\nexport { InstrumentationBase };\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle(execute, onFinish, preventThrowingError) {\n    var error;\n    var result;\n    try {\n        result = execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddleAsync(execute, onFinish, preventThrowingError) {\n    return __awaiter(this, void 0, void 0, function () {\n        var error, result, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, 3, 4]);\n                    return [4 /*yield*/, execute()];\n                case 1:\n                    result = _a.sent();\n                    return [3 /*break*/, 4];\n                case 2:\n                    e_1 = _a.sent();\n                    error = e_1;\n                    return [3 /*break*/, 4];\n                case 3:\n                    onFinish(error, result);\n                    if (error && !preventThrowingError) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw error;\n                    }\n                    // eslint-disable-next-line no-unsafe-finally\n                    return [2 /*return*/, result];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { defaultServiceName } from './platform';\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nvar Resource = /** @class */ (function () {\n    function Resource(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Returns an empty Resource\n     */\n    Resource.empty = function () {\n        return Resource.EMPTY;\n    };\n    /**\n     * Returns a Resource that indentifies the SDK in use.\n     */\n    Resource.default = function () {\n        var _a;\n        return new Resource((_a = {},\n            _a[SemanticResourceAttributes.SERVICE_NAME] = defaultServiceName(),\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n            _a));\n    };\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, other Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    Resource.prototype.merge = function (other) {\n        if (!other || !Object.keys(other.attributes).length)\n            return this;\n        // SpanAttributes from resource overwrite attributes from other resource.\n        var mergedAttributes = Object.assign({}, this.attributes, other.attributes);\n        return new Resource(mergedAttributes);\n    };\n    Resource.EMPTY = new Resource({});\n    return Resource;\n}());\nexport { Resource };\n//# sourceMappingURL=Resource.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function defaultServiceName() {\n    return 'unknown_service';\n}\n//# sourceMappingURL=default-service-name.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString);\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return symToStringTag && symToStringTag in Object(value)\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isPlainObject } from './lodash.merge';\nvar MAX_LEVEL = 20;\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var result = args.shift();\n    var objects = new WeakMap();\n    while (args.length > 0) {\n        result = mergeTwoObjects(result, args.shift(), 0, objects);\n    }\n    return result;\n}\nfunction takeValue(value) {\n    if (isArray(value)) {\n        return value.slice();\n    }\n    return value;\n}\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(one, two, level, objects) {\n    if (level === void 0) { level = 0; }\n    var result;\n    if (level > MAX_LEVEL) {\n        return undefined;\n    }\n    level++;\n    if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n        result = takeValue(two);\n    }\n    else if (isArray(one)) {\n        result = one.slice();\n        if (isArray(two)) {\n            for (var i = 0, j = two.length; i < j; i++) {\n                result.push(takeValue(two[i]));\n            }\n        }\n        else if (isObject(two)) {\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                result[key] = takeValue(two[key]);\n            }\n        }\n    }\n    else if (isObject(one)) {\n        if (isObject(two)) {\n            if (!shouldMerge(one, two)) {\n                return two;\n            }\n            result = Object.assign({}, one);\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                var twoValue = two[key];\n                if (isPrimitive(twoValue)) {\n                    if (typeof twoValue === 'undefined') {\n                        delete result[key];\n                    }\n                    else {\n                        // result[key] = takeValue(twoValue);\n                        result[key] = twoValue;\n                    }\n                }\n                else {\n                    var obj1 = result[key];\n                    var obj2 = twoValue;\n                    if (wasObjectReferenced(one, key, objects) ||\n                        wasObjectReferenced(two, key, objects)) {\n                        delete result[key];\n                    }\n                    else {\n                        if (isObject(obj1) && isObject(obj2)) {\n                            var arr1 = objects.get(obj1) || [];\n                            var arr2 = objects.get(obj2) || [];\n                            arr1.push({ obj: one, key: key });\n                            arr2.push({ obj: two, key: key });\n                            objects.set(obj1, arr1);\n                            objects.set(obj2, arr2);\n                        }\n                        result[key] = mergeTwoObjects(result[key], twoValue, level, objects);\n                    }\n                }\n            }\n        }\n        else {\n            result = two;\n        }\n    }\n    return result;\n}\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(obj, key, objects) {\n    var arr = objects.get(obj[key]) || [];\n    for (var i = 0, j = arr.length; i < j; i++) {\n        var info = arr[i];\n        if (info.key === key && info.obj === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isObject(value) {\n    return (!isPrimitive(value) &&\n        !isArray(value) &&\n        !isFunction(value) &&\n        typeof value === 'object');\n}\nfunction isPrimitive(value) {\n    return (typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        typeof value === 'undefined' ||\n        value instanceof Date ||\n        value instanceof RegExp ||\n        value === null);\n}\nfunction shouldMerge(one, two) {\n    if (!isPlainObject(one) || !isPlainObject(two)) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS, } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue)\n            ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n            : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, diag, propagation, trace, } from '@opentelemetry/api';\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator, getEnv, merge, } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { Tracer } from '.';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\nexport var ForceFlushState;\n(function (ForceFlushState) {\n    ForceFlushState[ForceFlushState[\"resolved\"] = 0] = \"resolved\";\n    ForceFlushState[ForceFlushState[\"timeout\"] = 1] = \"timeout\";\n    ForceFlushState[ForceFlushState[\"error\"] = 2] = \"error\";\n    ForceFlushState[ForceFlushState[\"unresolved\"] = 3] = \"unresolved\";\n})(ForceFlushState || (ForceFlushState = {}));\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nvar BasicTracerProvider = /** @class */ (function () {\n    function BasicTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        var mergedConfig = merge({}, loadDefaultConfig(), reconfigureLimits(config));\n        this.resource = (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : Resource.empty();\n        this.resource = Resource.default().merge(this.resource);\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n        var defaultExporter = this._buildExporterFromEnv();\n        if (defaultExporter !== undefined) {\n            var batchProcessor = new BatchSpanProcessor(defaultExporter);\n            this.activeSpanProcessor = batchProcessor;\n        }\n        else {\n            this.activeSpanProcessor = new NoopSpanProcessor();\n        }\n    }\n    BasicTracerProvider.prototype.getTracer = function (name, version, options) {\n        var key = name + \"@\" + (version || '') + \":\" + ((options === null || options === void 0 ? void 0 : options.schemaUrl) || '');\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new Tracer({ name: name, version: version, schemaUrl: options === null || options === void 0 ? void 0 : options.schemaUrl }, this._config, this));\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tracers.get(key);\n    };\n    /**\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    BasicTracerProvider.prototype.addSpanProcessor = function (spanProcessor) {\n        if (this._registeredSpanProcessors.length === 0) {\n            // since we might have enabled by default a batchProcessor, we disable it\n            // before adding the new one\n            this.activeSpanProcessor\n                .shutdown()\n                .catch(function (err) {\n                return diag.error('Error while trying to shutdown current span processor', err);\n            });\n        }\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor(this._registeredSpanProcessors);\n    };\n    BasicTracerProvider.prototype.getActiveSpanProcessor = function () {\n        return this.activeSpanProcessor;\n    };\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    BasicTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = this._buildPropagatorFromEnv();\n        }\n        if (config.contextManager) {\n            context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            propagation.setGlobalPropagator(config.propagator);\n        }\n    };\n    BasicTracerProvider.prototype.forceFlush = function () {\n        var timeout = this._config.forceFlushTimeoutMillis;\n        var promises = this._registeredSpanProcessors.map(function (spanProcessor) {\n            return new Promise(function (resolve) {\n                var state;\n                var timeoutInterval = setTimeout(function () {\n                    resolve(new Error(\"Span processor did not completed within timeout period of \" + timeout + \" ms\"));\n                    state = ForceFlushState.timeout;\n                }, timeout);\n                spanProcessor\n                    .forceFlush()\n                    .then(function () {\n                    clearTimeout(timeoutInterval);\n                    if (state !== ForceFlushState.timeout) {\n                        state = ForceFlushState.resolved;\n                        resolve(state);\n                    }\n                })\n                    .catch(function (error) {\n                    clearTimeout(timeoutInterval);\n                    state = ForceFlushState.error;\n                    resolve(error);\n                });\n            });\n        });\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises)\n                .then(function (results) {\n                var errors = results.filter(function (result) { return result !== ForceFlushState.resolved; });\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch(function (error) { return reject([error]); });\n        });\n    };\n    BasicTracerProvider.prototype.shutdown = function () {\n        return this.activeSpanProcessor.shutdown();\n    };\n    /**\n     * TS cannot yet infer the type of this.constructor:\n     * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n     * There is no need to override either of the getters in your child class.\n     * The type of the registered component maps should be the same across all\n     * classes in the inheritance tree.\n     */\n    BasicTracerProvider.prototype._getPropagator = function (name) {\n        var _a;\n        return (_a = this.constructor._registeredPropagators.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._getSpanExporter = function (name) {\n        var _a;\n        return (_a = this.constructor._registeredExporters.get(name)) === null || _a === void 0 ? void 0 : _a();\n    };\n    BasicTracerProvider.prototype._buildPropagatorFromEnv = function () {\n        var _this = this;\n        // per spec, propagators from env must be deduplicated\n        var uniquePropagatorNames = Array.from(new Set(getEnv().OTEL_PROPAGATORS));\n        var propagators = uniquePropagatorNames.map(function (name) {\n            var propagator = _this._getPropagator(name);\n            if (!propagator) {\n                diag.warn(\"Propagator \\\"\" + name + \"\\\" requested through environment variable is unavailable.\");\n            }\n            return propagator;\n        });\n        var validPropagators = propagators.reduce(function (list, item) {\n            if (item) {\n                list.push(item);\n            }\n            return list;\n        }, []);\n        if (validPropagators.length === 0) {\n            return;\n        }\n        else if (uniquePropagatorNames.length === 1) {\n            return validPropagators[0];\n        }\n        else {\n            return new CompositePropagator({\n                propagators: validPropagators,\n            });\n        }\n    };\n    BasicTracerProvider.prototype._buildExporterFromEnv = function () {\n        var exporterName = getEnv().OTEL_TRACES_EXPORTER;\n        if (exporterName === 'none' || exporterName === '')\n            return;\n        var exporter = this._getSpanExporter(exporterName);\n        if (!exporter) {\n            diag.error(\"Exporter \\\"\" + exporterName + \"\\\" requested through environment variable is unavailable.\");\n        }\n        return exporter;\n    };\n    BasicTracerProvider._registeredPropagators = new Map([\n        ['tracecontext', function () { return new W3CTraceContextPropagator(); }],\n        ['baggage', function () { return new W3CBaggagePropagator(); }],\n    ]);\n    BasicTracerProvider._registeredExporters = new Map();\n    return BasicTracerProvider;\n}());\nexport { BasicTracerProvider };\n//# sourceMappingURL=BasicTracerProvider.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString, } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n     * Name of the cloud provider.\n     */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n     * The cloud account ID the resource is assigned to.\n     */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n     * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n     */\n    CLOUD_REGION: 'cloud.region',\n    /**\n     * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n     *\n     * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n     */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n     * The cloud platform in use.\n     *\n     * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n     */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n     * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n     */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n     * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n     */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n     * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n     */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n     * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n     */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n     * The task definition family this task definition is a member of.\n     */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n     * The revision for this task definition.\n     */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n     * The ARN of an EKS cluster.\n     */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n     * The name(s) of the AWS log group(s) an application is writing to.\n     *\n     * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n     */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n     * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n     *\n     * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n     */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n     * The name(s) of the AWS log stream(s) an application is writing to.\n     */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n     * The ARN(s) of the AWS log stream(s).\n     *\n     * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n     */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n     * Container name.\n     */\n    CONTAINER_NAME: 'container.name',\n    /**\n     * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n     */\n    CONTAINER_ID: 'container.id',\n    /**\n     * The container runtime managing this container.\n     */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n     * Name of the image the container was built on.\n     */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n     * Container image tag.\n     */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n     * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n     */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n     * A unique identifier representing the device.\n     *\n     * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n     */\n    DEVICE_ID: 'device.id',\n    /**\n     * The model identifier for the device.\n     *\n     * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n     */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n     * The marketing name for the device model.\n     *\n     * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n     */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n     * The name of the single function that this runtime instance executes.\n     *\n     * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n     */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n     * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n     *\n     * Note: * **AWS Lambda:** Use the (full) log stream name.\n     */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n     * The amount of memory available to the serverless function in MiB.\n     *\n     * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n     */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n     * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n     */\n    HOST_ID: 'host.id',\n    /**\n     * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n     */\n    HOST_NAME: 'host.name',\n    /**\n     * Type of host. For Cloud, this must be the machine type.\n     */\n    HOST_TYPE: 'host.type',\n    /**\n     * The CPU architecture the host system is running on.\n     */\n    HOST_ARCH: 'host.arch',\n    /**\n     * Name of the VM image or OS install the host was instantiated from.\n     */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n     * VM image ID. For Cloud, this value is from the provider.\n     */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n     * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n     */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n     * The name of the cluster.\n     */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n     * The name of the Node.\n     */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n     * The UID of the Node.\n     */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n     * The name of the namespace that the pod is running in.\n     */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n     * The UID of the Pod.\n     */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n     * The name of the Pod.\n     */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n     * The name of the Container in a Pod template.\n     */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n     * The UID of the ReplicaSet.\n     */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n     * The name of the ReplicaSet.\n     */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n     * The UID of the Deployment.\n     */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n     * The name of the Deployment.\n     */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n     * The UID of the StatefulSet.\n     */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n     * The name of the StatefulSet.\n     */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n     * The UID of the DaemonSet.\n     */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n     * The name of the DaemonSet.\n     */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n     * The UID of the Job.\n     */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n     * The name of the Job.\n     */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n     * The UID of the CronJob.\n     */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n     * The name of the CronJob.\n     */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n     * The operating system type.\n     */\n    OS_TYPE: 'os.type',\n    /**\n     * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n     */\n    OS_DESCRIPTION: 'os.description',\n    /**\n     * Human readable operating system name.\n     */\n    OS_NAME: 'os.name',\n    /**\n     * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n     */\n    OS_VERSION: 'os.version',\n    /**\n     * Process identifier (PID).\n     */\n    PROCESS_PID: 'process.pid',\n    /**\n     * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n     * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n     * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n     */\n    PROCESS_COMMAND: 'process.command',\n    /**\n     * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n     */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n     * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n     */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n     * The username of the user that owns the process.\n     */\n    PROCESS_OWNER: 'process.owner',\n    /**\n     * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n     */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n     * The version of the runtime of this process, as returned by the runtime without modification.\n     */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n     * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n     */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n     * Logical name of the service.\n     *\n     * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n     */\n    SERVICE_NAME: 'service.name',\n    /**\n     * A namespace for `service.name`.\n     *\n     * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n     */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n     * The string ID of the service instance.\n     *\n     * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n     */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n     * The version string of the service API or implementation.\n     */\n    SERVICE_VERSION: 'service.version',\n    /**\n     * The name of the telemetry SDK as defined above.\n     */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n     * The language of the telemetry SDK.\n     */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n     * The version string of the telemetry SDK.\n     */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n     * The version string of the auto instrumentation agent, if used.\n     */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n     * The name of the web engine.\n     */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n     * The version of the web engine.\n     */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n     * Additional description of the web engine (e.g. detailed version and edition information).\n     */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.9.1';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { defaultServiceName } from './platform';\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nvar Resource = /** @class */ (function () {\n    function Resource(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Returns an empty Resource\n     */\n    Resource.empty = function () {\n        return Resource.EMPTY;\n    };\n    /**\n     * Returns a Resource that identifies the SDK in use.\n     */\n    Resource.default = function () {\n        var _a;\n        return new Resource((_a = {},\n            _a[SemanticResourceAttributes.SERVICE_NAME] = defaultServiceName(),\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n            _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n            _a));\n    };\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, other Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    Resource.prototype.merge = function (other) {\n        if (!other || !Object.keys(other.attributes).length)\n            return this;\n        // SpanAttributes from resource overwrite attributes from other resource.\n        var mergedAttributes = Object.assign({}, this.attributes, other.attributes);\n        return new Resource(mergedAttributes);\n    };\n    Resource.EMPTY = new Resource({});\n    return Resource;\n}());\nexport { Resource };\n//# sourceMappingURL=Resource.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function defaultServiceName() {\n    return 'unknown_service';\n}\n//# sourceMappingURL=default-service-name.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { globalErrorHandler } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nvar MultiSpanProcessor = /** @class */ (function () {\n    function MultiSpanProcessor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    MultiSpanProcessor.prototype.forceFlush = function () {\n        var e_1, _a;\n        var promises = [];\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                promises.push(spanProcessor.forceFlush());\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return new Promise(function (resolve) {\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(function (error) {\n                globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    };\n    MultiSpanProcessor.prototype.onStart = function (span, context) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                spanProcessor.onStart(span, context);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    MultiSpanProcessor.prototype.onEnd = function (span) {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                spanProcessor.onEnd(span);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    MultiSpanProcessor.prototype.shutdown = function () {\n        var e_4, _a;\n        var promises = [];\n        try {\n            for (var _b = __values(this._spanProcessors), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var spanProcessor = _c.value;\n                promises.push(spanProcessor.shutdown());\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return new Promise(function (resolve, reject) {\n            Promise.all(promises).then(function () {\n                resolve();\n            }, reject);\n        });\n    };\n    return MultiSpanProcessor;\n}());\nexport { MultiSpanProcessor };\n//# sourceMappingURL=MultiSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=Sampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticAttributes = {\n    /**\n     * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n     *\n     * Note: This may be different from `faas.id` if an alias is involved.\n     */\n    AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n    /**\n     * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n     */\n    DB_SYSTEM: 'db.system',\n    /**\n     * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n     */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n     * Username for accessing the database.\n     */\n    DB_USER: 'db.user',\n    /**\n     * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n     */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    /**\n     * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n     *\n     * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n     */\n    DB_NAME: 'db.name',\n    /**\n     * The database statement being executed.\n     *\n     * Note: The value may be sanitized to exclude sensitive information.\n     */\n    DB_STATEMENT: 'db.statement',\n    /**\n     * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n     *\n     * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n     */\n    DB_OPERATION: 'db.operation',\n    /**\n     * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n     *\n     * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n     */\n    DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n     * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n     * The fetch size used for paging, i.e. how many rows will be returned at once.\n     */\n    DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n    /**\n     * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n     */\n    DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_CASSANDRA_TABLE: 'db.cassandra.table',\n    /**\n     * Whether or not the query is idempotent.\n     */\n    DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n    /**\n     * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n     */\n    DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n    /**\n     * The ID of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n    /**\n     * The data center of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n    /**\n     * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n     * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n     */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n     * The collection being accessed within the database stated in `db.name`.\n     */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_SQL_TABLE: 'db.sql.table',\n    /**\n     * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n     */\n    EXCEPTION_TYPE: 'exception.type',\n    /**\n     * The exception message.\n     */\n    EXCEPTION_MESSAGE: 'exception.message',\n    /**\n     * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n     */\n    EXCEPTION_STACKTRACE: 'exception.stacktrace',\n    /**\n    * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n    *\n    * Note: An exception is considered to have escaped (or left) the scope of a span,\n  if that span is ended while the exception is still logically &#34;in flight&#34;.\n  This may be actually &#34;in flight&#34; in some languages (e.g. if the exception\n  is passed to a Context manager&#39;s `__exit__` method in Python) but will\n  usually be caught at the point of recording the exception in most languages.\n  \n  It is usually not possible to determine at the point where an exception is thrown\n  whether it will escape the scope of a span.\n  However, it is trivial to know that an exception\n  will escape, if one checks for an active exception just before ending the span,\n  as done in the [example above](#exception-end-example).\n  \n  It follows that an exception may still escape the scope of the span\n  even if the `exception.escaped` attribute was not set or set to false,\n  since the event might have been recorded at a time where it was not\n  clear whether the exception will escape.\n    */\n    EXCEPTION_ESCAPED: 'exception.escaped',\n    /**\n     * Type of the trigger on which the function is executed.\n     */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n     * The execution ID of the current function execution.\n     */\n    FAAS_EXECUTION: 'faas.execution',\n    /**\n     * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n     */\n    FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n    /**\n     * Describes the type of the operation that was performed on the data.\n     */\n    FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n    /**\n     * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_DOCUMENT_TIME: 'faas.document.time',\n    /**\n     * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n     */\n    FAAS_DOCUMENT_NAME: 'faas.document.name',\n    /**\n     * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_TIME: 'faas.time',\n    /**\n     * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n     */\n    FAAS_CRON: 'faas.cron',\n    /**\n     * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n     */\n    FAAS_COLDSTART: 'faas.coldstart',\n    /**\n     * The name of the invoked function.\n     *\n     * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n     * The cloud provider of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n     * The cloud region of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    /**\n     * Transport protocol used. See note below.\n     */\n    NET_TRANSPORT: 'net.transport',\n    /**\n     * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n     */\n    NET_PEER_IP: 'net.peer.ip',\n    /**\n     * Remote port number.\n     */\n    NET_PEER_PORT: 'net.peer.port',\n    /**\n     * Remote hostname or similar, see note below.\n     */\n    NET_PEER_NAME: 'net.peer.name',\n    /**\n     * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n     */\n    NET_HOST_IP: 'net.host.ip',\n    /**\n     * Like `net.peer.port` but for the host port.\n     */\n    NET_HOST_PORT: 'net.host.port',\n    /**\n     * Local hostname or similar, see note below.\n     */\n    NET_HOST_NAME: 'net.host.name',\n    /**\n     * The internet connection type currently being used by the host.\n     */\n    NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n    /**\n     * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n     */\n    NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n    /**\n     * The name of the mobile carrier.\n     */\n    NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n    /**\n     * The mobile carrier country code.\n     */\n    NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n    /**\n     * The mobile carrier network code.\n     */\n    NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n    /**\n     * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n     */\n    NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n    /**\n     * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n     */\n    PEER_SERVICE: 'peer.service',\n    /**\n     * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n     */\n    ENDUSER_ID: 'enduser.id',\n    /**\n     * Actual/assumed role the client is making the request under extracted from token or application security context.\n     */\n    ENDUSER_ROLE: 'enduser.role',\n    /**\n     * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n     */\n    ENDUSER_SCOPE: 'enduser.scope',\n    /**\n     * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n     */\n    THREAD_ID: 'thread.id',\n    /**\n     * Current thread name.\n     */\n    THREAD_NAME: 'thread.name',\n    /**\n     * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n     */\n    CODE_FUNCTION: 'code.function',\n    /**\n     * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n     */\n    CODE_NAMESPACE: 'code.namespace',\n    /**\n     * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n     */\n    CODE_FILEPATH: 'code.filepath',\n    /**\n     * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n     */\n    CODE_LINENO: 'code.lineno',\n    /**\n     * HTTP request method.\n     */\n    HTTP_METHOD: 'http.method',\n    /**\n     * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n     *\n     * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n     */\n    HTTP_URL: 'http.url',\n    /**\n     * The full request target as passed in a HTTP request line or equivalent.\n     */\n    HTTP_TARGET: 'http.target',\n    /**\n     * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n     *\n     * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n     */\n    HTTP_HOST: 'http.host',\n    /**\n     * The URI scheme identifying the used protocol.\n     */\n    HTTP_SCHEME: 'http.scheme',\n    /**\n     * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n     */\n    HTTP_STATUS_CODE: 'http.status_code',\n    /**\n     * Kind of HTTP protocol used.\n     *\n     * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n     */\n    HTTP_FLAVOR: 'http.flavor',\n    /**\n     * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n     */\n    HTTP_USER_AGENT: 'http.user_agent',\n    /**\n     * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    /**\n     * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    /**\n     * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    /**\n     * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    /**\n     * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n     *\n     * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n     */\n    HTTP_SERVER_NAME: 'http.server_name',\n    /**\n     * The matched route (path template).\n     */\n    HTTP_ROUTE: 'http.route',\n    /**\n    * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n    *\n    * Note: This is not necessarily the same as `net.peer.ip`, which would\n  identify the network-level peer, which may be a proxy.\n  \n  This attribute should be set when a source of information different\n  from the one used for `net.peer.ip`, is available even if that other\n  source just confirms the same value as `net.peer.ip`.\n  Rationale: For `net.peer.ip`, one typically does not know if it\n  comes from a proxy, reverse proxy, or the actual client. Setting\n  `http.client_ip` when it&#39;s the same as `net.peer.ip` means that\n  one is at least somewhat confident that the address is not that of\n  the closest proxy.\n    */\n    HTTP_CLIENT_IP: 'http.client_ip',\n    /**\n     * The keys in the `RequestItems` object field.\n     */\n    AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n    /**\n     * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n     */\n    AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n    /**\n     * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n     */\n    AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n    /**\n     * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n    /**\n     * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n    /**\n     * The value of the `ConsistentRead` request parameter.\n     */\n    AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n    /**\n     * The value of the `ProjectionExpression` request parameter.\n     */\n    AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n    /**\n     * The value of the `Limit` request parameter.\n     */\n    AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n    /**\n     * The value of the `AttributesToGet` request parameter.\n     */\n    AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n    /**\n     * The value of the `IndexName` request parameter.\n     */\n    AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n    /**\n     * The value of the `Select` request parameter.\n     */\n    AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n    /**\n     * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n    /**\n     * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n    /**\n     * The value of the `ExclusiveStartTableName` request parameter.\n     */\n    AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n    /**\n     * The the number of items in the `TableNames` response parameter.\n     */\n    AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n    /**\n     * The value of the `ScanIndexForward` request parameter.\n     */\n    AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n    /**\n     * The value of the `Segment` request parameter.\n     */\n    AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n    /**\n     * The value of the `TotalSegments` request parameter.\n     */\n    AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n    /**\n     * The value of the `Count` response parameter.\n     */\n    AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n    /**\n     * The value of the `ScannedCount` response parameter.\n     */\n    AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n    /**\n     * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n     */\n    AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n    /**\n     * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n    /**\n     * A string identifying the messaging system.\n     */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n     * The message destination name. This might be equal to the span name but is required nevertheless.\n     */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n     * The kind of message destination.\n     */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n     * A boolean that is true if the message destination is temporary.\n     */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n     * The name of the transport protocol.\n     */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n     * The version of the transport protocol.\n     */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n     * Connection string.\n     */\n    MESSAGING_URL: 'messaging.url',\n    /**\n     * A value used by the messaging system as an identifier for the message, represented as a string.\n     */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n     * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n     */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n     * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n     * The compressed size of the message payload in bytes.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n     * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n     */\n    MESSAGING_OPERATION: 'messaging.operation',\n    /**\n     * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n     */\n    MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n    /**\n     * RabbitMQ message routing key.\n     */\n    MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n    /**\n     * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n     *\n     * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n     */\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    /**\n     * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n     */\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    /**\n     * Client Id for the Consumer or Producer that is handling the message.\n     */\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    /**\n     * Partition the message is sent to.\n     */\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    /**\n     * A boolean that is true if the message is a tombstone.\n     */\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n    /**\n     * A string identifying the remoting system.\n     */\n    RPC_SYSTEM: 'rpc.system',\n    /**\n     * The full (logical) name of the service being called, including its package name, if applicable.\n     *\n     * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n     */\n    RPC_SERVICE: 'rpc.service',\n    /**\n     * The name of the (logical) method being called, must be equal to the $method part in the span name.\n     *\n     * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n     */\n    RPC_METHOD: 'rpc.method',\n    /**\n     * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n     */\n    RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n    /**\n     * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n     */\n    RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n    /**\n     * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n     */\n    RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n    /**\n     * `error.code` property of response if it is an error response.\n     */\n    RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n    /**\n     * `error.message` property of response if it is an error response.\n     */\n    RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n    /**\n     * Whether this is a received or sent message.\n     */\n    MESSAGE_TYPE: 'message.type',\n    /**\n     * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n     *\n     * Note: This way we guarantee that the values will be consistent between different implementations.\n     */\n    MESSAGE_ID: 'message.id',\n    /**\n     * Compressed size of the message in bytes.\n     */\n    MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n    /**\n     * Uncompressed size of the message in bytes.\n     */\n    MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\nexport var DbSystemValues = {\n    /** Some other SQL database. Fallback only. See notes. */\n    OTHER_SQL: 'other_sql',\n    /** Microsoft SQL Server. */\n    MSSQL: 'mssql',\n    /** MySQL. */\n    MYSQL: 'mysql',\n    /** Oracle Database. */\n    ORACLE: 'oracle',\n    /** IBM Db2. */\n    DB2: 'db2',\n    /** PostgreSQL. */\n    POSTGRESQL: 'postgresql',\n    /** Amazon Redshift. */\n    REDSHIFT: 'redshift',\n    /** Apache Hive. */\n    HIVE: 'hive',\n    /** Cloudscape. */\n    CLOUDSCAPE: 'cloudscape',\n    /** HyperSQL DataBase. */\n    HSQLDB: 'hsqldb',\n    /** Progress Database. */\n    PROGRESS: 'progress',\n    /** SAP MaxDB. */\n    MAXDB: 'maxdb',\n    /** SAP HANA. */\n    HANADB: 'hanadb',\n    /** Ingres. */\n    INGRES: 'ingres',\n    /** FirstSQL. */\n    FIRSTSQL: 'firstsql',\n    /** EnterpriseDB. */\n    EDB: 'edb',\n    /** InterSystems Caché. */\n    CACHE: 'cache',\n    /** Adabas (Adaptable Database System). */\n    ADABAS: 'adabas',\n    /** Firebird. */\n    FIREBIRD: 'firebird',\n    /** Apache Derby. */\n    DERBY: 'derby',\n    /** FileMaker. */\n    FILEMAKER: 'filemaker',\n    /** Informix. */\n    INFORMIX: 'informix',\n    /** InstantDB. */\n    INSTANTDB: 'instantdb',\n    /** InterBase. */\n    INTERBASE: 'interbase',\n    /** MariaDB. */\n    MARIADB: 'mariadb',\n    /** Netezza. */\n    NETEZZA: 'netezza',\n    /** Pervasive PSQL. */\n    PERVASIVE: 'pervasive',\n    /** PointBase. */\n    POINTBASE: 'pointbase',\n    /** SQLite. */\n    SQLITE: 'sqlite',\n    /** Sybase. */\n    SYBASE: 'sybase',\n    /** Teradata. */\n    TERADATA: 'teradata',\n    /** Vertica. */\n    VERTICA: 'vertica',\n    /** H2. */\n    H2: 'h2',\n    /** ColdFusion IMQ. */\n    COLDFUSION: 'coldfusion',\n    /** Apache Cassandra. */\n    CASSANDRA: 'cassandra',\n    /** Apache HBase. */\n    HBASE: 'hbase',\n    /** MongoDB. */\n    MONGODB: 'mongodb',\n    /** Redis. */\n    REDIS: 'redis',\n    /** Couchbase. */\n    COUCHBASE: 'couchbase',\n    /** CouchDB. */\n    COUCHDB: 'couchdb',\n    /** Microsoft Azure Cosmos DB. */\n    COSMOSDB: 'cosmosdb',\n    /** Amazon DynamoDB. */\n    DYNAMODB: 'dynamodb',\n    /** Neo4j. */\n    NEO4J: 'neo4j',\n    /** Apache Geode. */\n    GEODE: 'geode',\n    /** Elasticsearch. */\n    ELASTICSEARCH: 'elasticsearch',\n    /** Memcached. */\n    MEMCACHED: 'memcached',\n    /** CockroachDB. */\n    COCKROACHDB: 'cockroachdb',\n};\nexport var DbCassandraConsistencyLevelValues = {\n    /** all. */\n    ALL: 'all',\n    /** each_quorum. */\n    EACH_QUORUM: 'each_quorum',\n    /** quorum. */\n    QUORUM: 'quorum',\n    /** local_quorum. */\n    LOCAL_QUORUM: 'local_quorum',\n    /** one. */\n    ONE: 'one',\n    /** two. */\n    TWO: 'two',\n    /** three. */\n    THREE: 'three',\n    /** local_one. */\n    LOCAL_ONE: 'local_one',\n    /** any. */\n    ANY: 'any',\n    /** serial. */\n    SERIAL: 'serial',\n    /** local_serial. */\n    LOCAL_SERIAL: 'local_serial',\n};\nexport var FaasTriggerValues = {\n    /** A response to some data source operation such as a database or filesystem read/write. */\n    DATASOURCE: 'datasource',\n    /** To provide an answer to an inbound HTTP request. */\n    HTTP: 'http',\n    /** A function is set to be executed when messages are sent to a messaging system. */\n    PUBSUB: 'pubsub',\n    /** A function is scheduled to be executed regularly. */\n    TIMER: 'timer',\n    /** If none of the others apply. */\n    OTHER: 'other',\n};\nexport var FaasDocumentOperationValues = {\n    /** When a new object is created. */\n    INSERT: 'insert',\n    /** When an object is modified. */\n    EDIT: 'edit',\n    /** When an object is deleted. */\n    DELETE: 'delete',\n};\nexport var FaasInvokedProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var NetTransportValues = {\n    /** ip_tcp. */\n    IP_TCP: 'ip_tcp',\n    /** ip_udp. */\n    IP_UDP: 'ip_udp',\n    /** Another IP-based protocol. */\n    IP: 'ip',\n    /** Unix Domain socket. See below. */\n    UNIX: 'unix',\n    /** Named or anonymous pipe. See note below. */\n    PIPE: 'pipe',\n    /** In-process communication. */\n    INPROC: 'inproc',\n    /** Something else (non IP-based). */\n    OTHER: 'other',\n};\nexport var NetHostConnectionTypeValues = {\n    /** wifi. */\n    WIFI: 'wifi',\n    /** wired. */\n    WIRED: 'wired',\n    /** cell. */\n    CELL: 'cell',\n    /** unavailable. */\n    UNAVAILABLE: 'unavailable',\n    /** unknown. */\n    UNKNOWN: 'unknown',\n};\nexport var NetHostConnectionSubtypeValues = {\n    /** GPRS. */\n    GPRS: 'gprs',\n    /** EDGE. */\n    EDGE: 'edge',\n    /** UMTS. */\n    UMTS: 'umts',\n    /** CDMA. */\n    CDMA: 'cdma',\n    /** EVDO Rel. 0. */\n    EVDO_0: 'evdo_0',\n    /** EVDO Rev. A. */\n    EVDO_A: 'evdo_a',\n    /** CDMA2000 1XRTT. */\n    CDMA2000_1XRTT: 'cdma2000_1xrtt',\n    /** HSDPA. */\n    HSDPA: 'hsdpa',\n    /** HSUPA. */\n    HSUPA: 'hsupa',\n    /** HSPA. */\n    HSPA: 'hspa',\n    /** IDEN. */\n    IDEN: 'iden',\n    /** EVDO Rev. B. */\n    EVDO_B: 'evdo_b',\n    /** LTE. */\n    LTE: 'lte',\n    /** EHRPD. */\n    EHRPD: 'ehrpd',\n    /** HSPAP. */\n    HSPAP: 'hspap',\n    /** GSM. */\n    GSM: 'gsm',\n    /** TD-SCDMA. */\n    TD_SCDMA: 'td_scdma',\n    /** IWLAN. */\n    IWLAN: 'iwlan',\n    /** 5G NR (New Radio). */\n    NR: 'nr',\n    /** 5G NRNSA (New Radio Non-Standalone). */\n    NRNSA: 'nrnsa',\n    /** LTE CA. */\n    LTE_CA: 'lte_ca',\n};\nexport var HttpFlavorValues = {\n    /** HTTP 1.0. */\n    HTTP_1_0: '1.0',\n    /** HTTP 1.1. */\n    HTTP_1_1: '1.1',\n    /** HTTP 2. */\n    HTTP_2_0: '2.0',\n    /** SPDY protocol. */\n    SPDY: 'SPDY',\n    /** QUIC protocol. */\n    QUIC: 'QUIC',\n};\nexport var MessagingDestinationKindValues = {\n    /** A message sent to a queue. */\n    QUEUE: 'queue',\n    /** A message sent to a topic. */\n    TOPIC: 'topic',\n};\nexport var MessagingOperationValues = {\n    /** receive. */\n    RECEIVE: 'receive',\n    /** process. */\n    PROCESS: 'process',\n};\nexport var RpcGrpcStatusCodeValues = {\n    /** OK. */\n    OK: 0,\n    /** CANCELLED. */\n    CANCELLED: 1,\n    /** UNKNOWN. */\n    UNKNOWN: 2,\n    /** INVALID_ARGUMENT. */\n    INVALID_ARGUMENT: 3,\n    /** DEADLINE_EXCEEDED. */\n    DEADLINE_EXCEEDED: 4,\n    /** NOT_FOUND. */\n    NOT_FOUND: 5,\n    /** ALREADY_EXISTS. */\n    ALREADY_EXISTS: 6,\n    /** PERMISSION_DENIED. */\n    PERMISSION_DENIED: 7,\n    /** RESOURCE_EXHAUSTED. */\n    RESOURCE_EXHAUSTED: 8,\n    /** FAILED_PRECONDITION. */\n    FAILED_PRECONDITION: 9,\n    /** ABORTED. */\n    ABORTED: 10,\n    /** OUT_OF_RANGE. */\n    OUT_OF_RANGE: 11,\n    /** UNIMPLEMENTED. */\n    UNIMPLEMENTED: 12,\n    /** INTERNAL. */\n    INTERNAL: 13,\n    /** UNAVAILABLE. */\n    UNAVAILABLE: 14,\n    /** DATA_LOSS. */\n    DATA_LOSS: 15,\n    /** UNAUTHENTICATED. */\n    UNAUTHENTICATED: 16,\n};\nexport var MessageTypeValues = {\n    /** sent. */\n    SENT: 'SENT',\n    /** received. */\n    RECEIVED: 'RECEIVED',\n};\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag, SpanStatusCode, } from '@opentelemetry/api';\nimport { addHrTimes, millisToHrTime, getTimeOrigin, hrTime, hrTimeDuration, isAttributeValue, isTimeInput, isTimeInputHrTime, otperformance, sanitizeAttributes, } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\n/**\n * This class represents a span.\n */\nvar Span = /** @class */ (function () {\n    /**\n     * Constructs a new Span instance.\n     *\n     * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n     * */\n    function Span(parentTracer, context, spanName, spanContext, kind, parentSpanId, links, startTime, _deprecatedClock // keeping this argument even though it is unused to ensure backwards compatibility\n    ) {\n        if (links === void 0) { links = []; }\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this.status = {\n            code: SpanStatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this.name = spanName;\n        this._spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        var now = Date.now();\n        this._performanceStartTime = otperformance.now();\n        this._performanceOffset =\n            now - (this._performanceStartTime + getTimeOrigin());\n        this._startTimeProvided = startTime != null;\n        this.startTime = this._getTime(startTime !== null && startTime !== void 0 ? startTime : now);\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._spanLimits = parentTracer.getSpanLimits();\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n        this._attributeValueLengthLimit =\n            this._spanLimits.attributeValueLengthLimit || 0;\n    }\n    Span.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    Span.prototype.setAttribute = function (key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            diag.warn(\"Invalid attribute key: \" + key);\n            return this;\n        }\n        if (!isAttributeValue(value)) {\n            diag.warn(\"Invalid attribute value set for key: \" + key);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._spanLimits.attributeCountLimit &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            return this;\n        }\n        this.attributes[key] = this._truncateToSize(value);\n        return this;\n    };\n    Span.prototype.setAttributes = function (attributes) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), k = _d[0], v = _d[1];\n                this.setAttribute(k, v);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [timeStamp] Specified time stamp for the event\n     */\n    Span.prototype.addEvent = function (name, attributesOrStartTime, timeStamp) {\n        if (this._isSpanEnded())\n            return this;\n        if (this._spanLimits.eventCountLimit === 0) {\n            diag.warn('No events allowed.');\n            return this;\n        }\n        if (this.events.length >= this._spanLimits.eventCountLimit) {\n            diag.warn('Dropping extra events.');\n            this.events.shift();\n        }\n        if (isTimeInput(attributesOrStartTime)) {\n            if (!isTimeInput(timeStamp)) {\n                timeStamp = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        var attributes = sanitizeAttributes(attributesOrStartTime);\n        this.events.push({\n            name: name,\n            attributes: attributes,\n            time: this._getTime(timeStamp),\n        });\n        return this;\n    };\n    Span.prototype.setStatus = function (status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = status;\n        return this;\n    };\n    Span.prototype.updateName = function (name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    };\n    Span.prototype.end = function (endTime) {\n        if (this._isSpanEnded()) {\n            diag.error('You can only call end() on a span once.');\n            return;\n        }\n        this._ended = true;\n        this.endTime = this._getTime(endTime);\n        this._duration = hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            diag.warn('Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.', this.startTime, this.endTime);\n            this.endTime = this.startTime.slice();\n            this._duration = [0, 0];\n        }\n        this._spanProcessor.onEnd(this);\n    };\n    Span.prototype._getTime = function (inp) {\n        if (typeof inp === 'number' && inp < otperformance.now()) {\n            // must be a performance timestamp\n            // apply correction and convert to hrtime\n            return hrTime(inp + this._performanceOffset);\n        }\n        if (typeof inp === 'number') {\n            return millisToHrTime(inp);\n        }\n        if (inp instanceof Date) {\n            return millisToHrTime(inp.getTime());\n        }\n        if (isTimeInputHrTime(inp)) {\n            return inp;\n        }\n        if (this._startTimeProvided) {\n            // if user provided a time for the start manually\n            // we can't use duration to calculate event/end times\n            return millisToHrTime(Date.now());\n        }\n        var msDuration = otperformance.now() - this._performanceStartTime;\n        return addHrTimes(this.startTime, millisToHrTime(msDuration));\n    };\n    Span.prototype.isRecording = function () {\n        return this._ended === false;\n    };\n    Span.prototype.recordException = function (exception, time) {\n        var attributes = {};\n        if (typeof exception === 'string') {\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] =\n                    exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n            attributes[SemanticAttributes.EXCEPTION_MESSAGE]) {\n            this.addEvent(ExceptionEventName, attributes, time);\n        }\n        else {\n            diag.warn(\"Failed to record an exception \" + exception);\n        }\n    };\n    Object.defineProperty(Span.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"ended\", {\n        get: function () {\n            return this._ended;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Span.prototype._isSpanEnded = function () {\n        if (this._ended) {\n            diag.warn(\"Can not execute the operation on ended Span {traceId: \" + this._spanContext.traceId + \", spanId: \" + this._spanContext.spanId + \"}\");\n        }\n        return this._ended;\n    };\n    // Utility function to truncate given value within size\n    // for value type of string, will truncate to given limit\n    // for type of non-string, will return same value\n    Span.prototype._truncateToLimitUtil = function (value, limit) {\n        if (value.length <= limit) {\n            return value;\n        }\n        return value.substr(0, limit);\n    };\n    /**\n     * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n     * return string with trucated to {@code attributeValueLengthLimit} characters\n     *\n     * If the given attribute value is array of strings then\n     * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n     *\n     * Otherwise return same Attribute {@code value}\n     *\n     * @param value Attribute value\n     * @returns truncated attribute value if required, otherwise same value\n     */\n    Span.prototype._truncateToSize = function (value) {\n        var _this = this;\n        var limit = this._attributeValueLengthLimit;\n        // Check limit\n        if (limit <= 0) {\n            // Negative values are invalid, so do not truncate\n            diag.warn(\"Attribute value limit must be positive, got \" + limit);\n            return value;\n        }\n        // String\n        if (typeof value === 'string') {\n            return this._truncateToLimitUtil(value, limit);\n        }\n        // Array of strings\n        if (Array.isArray(value)) {\n            return value.map(function (val) {\n                return typeof val === 'string' ? _this._truncateToLimitUtil(val, limit) : val;\n            });\n        }\n        // Other types, no need to apply value length limit\n        return value;\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=Span.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Event name definitions\nexport var ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { sanitizeAttributes, isTracingSuppressed, } from '@opentelemetry/core';\nimport { Span } from './Span';\nimport { mergeConfig } from './utility';\nimport { RandomIdGenerator } from './platform';\n/**\n * This class represents a basic tracer.\n */\nvar Tracer = /** @class */ (function () {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    function Tracer(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        var localConfig = mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._generalLimits = localConfig.generalLimits;\n        this._spanLimits = localConfig.spanLimits;\n        this._idGenerator = config.idGenerator || new RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    Tracer.prototype.startSpan = function (name, options, context) {\n        var _a, _b;\n        if (options === void 0) { options = {}; }\n        if (context === void 0) { context = api.context.active(); }\n        // remove span from context in case a root span is requested via options\n        if (options.root) {\n            context = api.trace.deleteSpan(context);\n        }\n        var parentSpan = api.trace.getSpan(context);\n        if (isTracingSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            var nonRecordingSpan = api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n            return nonRecordingSpan;\n        }\n        var parentSpanContext = parentSpan === null || parentSpan === void 0 ? void 0 : parentSpan.spanContext();\n        var spanId = this._idGenerator.generateSpanId();\n        var traceId;\n        var traceState;\n        var parentSpanId;\n        if (!parentSpanContext ||\n            !api.trace.isSpanContextValid(parentSpanContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentSpanContext.traceId;\n            traceState = parentSpanContext.traceState;\n            parentSpanId = parentSpanContext.spanId;\n        }\n        var spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        var links = ((_b = options.links) !== null && _b !== void 0 ? _b : []).map(function (link) {\n            return {\n                context: link.context,\n                attributes: sanitizeAttributes(link.attributes),\n            };\n        });\n        var attributes = sanitizeAttributes(options.attributes);\n        // make sampling decision\n        var samplingResult = this._sampler.shouldSample(context, traceId, name, spanKind, attributes, links);\n        var traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        var spanContext = { traceId: traceId, spanId: spanId, traceFlags: traceFlags, traceState: traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, propagating context in a non-recording span');\n            var nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n            return nonRecordingSpan;\n        }\n        var span = new Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime);\n        // Set initial span attributes. The attributes object may have been mutated\n        // by the sampler, so we sanitize the merged attributes before setting them.\n        var initAttributes = sanitizeAttributes(Object.assign(attributes, samplingResult.attributes));\n        span.setAttributes(initAttributes);\n        return span;\n    };\n    Tracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : api.context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = api.trace.setSpan(parentContext, span);\n        return api.context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    /** Returns the active {@link GeneralLimits}. */\n    Tracer.prototype.getGeneralLimits = function () {\n        return this._generalLimits;\n    };\n    /** Returns the active {@link SpanLimits}. */\n    Tracer.prototype.getSpanLimits = function () {\n        return this._spanLimits;\n    };\n    Tracer.prototype.getActiveSpanProcessor = function () {\n        return this._tracerProvider.getActiveSpanProcessor();\n    };\n    return Tracer;\n}());\nexport { Tracer };\n//# sourceMappingURL=Tracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, TracesSamplerValues } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\nvar env = getEnv();\nvar FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nvar DEFAULT_RATIO = 1;\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n    return {\n        sampler: buildSamplerFromEnv(env),\n        forceFlushTimeoutMillis: 30000,\n        generalLimits: {\n            attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n            attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n        },\n        spanLimits: {\n            attributeValueLengthLimit: getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n            attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n            linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n            eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n        },\n    };\n}\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(environment) {\n    if (environment === void 0) { environment = getEnv(); }\n    switch (environment.OTEL_TRACES_SAMPLER) {\n        case TracesSamplerValues.AlwaysOn:\n            return new AlwaysOnSampler();\n        case TracesSamplerValues.AlwaysOff:\n            return new AlwaysOffSampler();\n        case TracesSamplerValues.ParentBasedAlwaysOn:\n            return new ParentBasedSampler({\n                root: new AlwaysOnSampler(),\n            });\n        case TracesSamplerValues.ParentBasedAlwaysOff:\n            return new ParentBasedSampler({\n                root: new AlwaysOffSampler(),\n            });\n        case TracesSamplerValues.TraceIdRatio:\n            return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n        case TracesSamplerValues.ParentBasedTraceIdRatio:\n            return new ParentBasedSampler({\n                root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n            });\n        default:\n            diag.error(\"OTEL_TRACES_SAMPLER value \\\"\" + environment.OTEL_TRACES_SAMPLER + \" invalid, defaulting to \" + FALLBACK_OTEL_TRACES_SAMPLER + \"\\\".\");\n            return new AlwaysOnSampler();\n    }\n}\nfunction getSamplerProbabilityFromEnv(environment) {\n    if (environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n        environment.OTEL_TRACES_SAMPLER_ARG === '') {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG is blank, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    var probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n    if (isNaN(probability)) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is invalid, defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        diag.error(\"OTEL_TRACES_SAMPLER_ARG=\" + environment.OTEL_TRACES_SAMPLER_ARG + \" was given, but it is out of range ([0..1]), defaulting to \" + DEFAULT_RATIO + \".\");\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */ (function () {\n    function NoopSpanProcessor() {\n    }\n    NoopSpanProcessor.prototype.onStart = function (_span, _context) { };\n    NoopSpanProcessor.prototype.onEnd = function (_span) { };\n    NoopSpanProcessor.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    NoopSpanProcessor.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    return NoopSpanProcessor;\n}());\nexport { NoopSpanProcessor };\n//# sourceMappingURL=NoopSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { ExportResultCode, hrTimeToMicroseconds, } from '@opentelemetry/core';\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n/* eslint-disable no-console */\nvar ConsoleSpanExporter = /** @class */ (function () {\n    function ConsoleSpanExporter() {\n    }\n    /**\n     * Export spans.\n     * @param spans\n     * @param resultCallback\n     */\n    ConsoleSpanExporter.prototype.export = function (spans, resultCallback) {\n        return this._sendSpans(spans, resultCallback);\n    };\n    /**\n     * Shutdown the exporter.\n     */\n    ConsoleSpanExporter.prototype.shutdown = function () {\n        this._sendSpans([]);\n        return Promise.resolve();\n    };\n    /**\n     * converts span info into more readable format\n     * @param span\n     */\n    ConsoleSpanExporter.prototype._exportInfo = function (span) {\n        var _a;\n        return {\n            traceId: span.spanContext().traceId,\n            parentId: span.parentSpanId,\n            traceState: (_a = span.spanContext().traceState) === null || _a === void 0 ? void 0 : _a.serialize(),\n            name: span.name,\n            id: span.spanContext().spanId,\n            kind: span.kind,\n            timestamp: hrTimeToMicroseconds(span.startTime),\n            duration: hrTimeToMicroseconds(span.duration),\n            attributes: span.attributes,\n            status: span.status,\n            events: span.events,\n            links: span.links,\n        };\n    };\n    /**\n     * Showing spans in console\n     * @param spans\n     * @param done\n     */\n    ConsoleSpanExporter.prototype._sendSpans = function (spans, done) {\n        var e_1, _a;\n        try {\n            for (var spans_1 = __values(spans), spans_1_1 = spans_1.next(); !spans_1_1.done; spans_1_1 = spans_1.next()) {\n                var span = spans_1_1.value;\n                console.dir(this._exportInfo(span), { depth: 3 });\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (spans_1_1 && !spans_1_1.done && (_a = spans_1.return)) _a.call(spans_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (done) {\n            return done({ code: ExportResultCode.SUCCESS });\n        }\n    };\n    return ConsoleSpanExporter;\n}());\nexport { ConsoleSpanExporter };\n//# sourceMappingURL=ConsoleSpanExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nvar InMemorySpanExporter = /** @class */ (function () {\n    function InMemorySpanExporter() {\n        this._finishedSpans = [];\n        /**\n         * Indicates if the exporter has been \"shutdown.\"\n         * When false, exported spans will not be stored in-memory.\n         */\n        this._stopped = false;\n    }\n    InMemorySpanExporter.prototype.export = function (spans, resultCallback) {\n        var _a;\n        if (this._stopped)\n            return resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Exporter has been stopped'),\n            });\n        (_a = this._finishedSpans).push.apply(_a, __spreadArray([], __read(spans), false));\n        setTimeout(function () { return resultCallback({ code: ExportResultCode.SUCCESS }); }, 0);\n    };\n    InMemorySpanExporter.prototype.shutdown = function () {\n        this._stopped = true;\n        this._finishedSpans = [];\n        return Promise.resolve();\n    };\n    InMemorySpanExporter.prototype.reset = function () {\n        this._finishedSpans = [];\n    };\n    InMemorySpanExporter.prototype.getFinishedSpans = function () {\n        return this._finishedSpans;\n    };\n    return InMemorySpanExporter;\n}());\nexport { InMemorySpanExporter };\n//# sourceMappingURL=InMemorySpanExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './baggage/propagation/W3CBaggagePropagator';\nexport * from './common/anchored-clock';\nexport * from './common/attributes';\nexport * from './common/global-error-handler';\nexport * from './common/logging-error-handler';\nexport * from './common/time';\nexport * from './common/types';\nexport * from './ExportResult';\nexport * from './version';\nimport * as baggageUtils_1 from './baggage/utils';\nexport { baggageUtils_1 as baggageUtils };\nexport * from './platform';\nexport * from './propagation/composite';\nexport * from './trace/W3CTraceContextPropagator';\nexport * from './trace/IdGenerator';\nexport * from './trace/rpc-metadata';\nexport * from './trace/sampler/AlwaysOffSampler';\nexport * from './trace/sampler/AlwaysOnSampler';\nexport * from './trace/sampler/ParentBasedSampler';\nexport * from './trace/sampler/TraceIdRatioBasedSampler';\nexport * from './trace/suppress-tracing';\nexport * from './trace/TraceState';\nexport * from './utils/environment';\nexport * from './utils/merge';\nexport * from './utils/sampling';\nexport * from './utils/url';\nexport * from './utils/wrap';\nexport * from './utils/callback';\nexport * from './version';\nimport { _export } from './internal/exporter';\nexport var internal = {\n    _export: _export,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context } from '@opentelemetry/api';\nimport { suppressTracing } from '../trace/suppress-tracing';\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppresion of Traces.\n */\nexport function _export(exporter, arg) {\n    return new Promise(function (resolve) {\n        // prevent downstream exporter calls from generating spans\n        context.with(suppressTracing(context.active()), function () {\n            exporter.export(arg, function (result) {\n                resolve(result);\n            });\n        });\n    });\n}\n//# sourceMappingURL=exporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from '@opentelemetry/api';\nimport { internal, ExportResultCode, globalErrorHandler, BindOnceFuture, } from '@opentelemetry/core';\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nvar SimpleSpanProcessor = /** @class */ (function () {\n    function SimpleSpanProcessor(_exporter) {\n        this._exporter = _exporter;\n        this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n    }\n    SimpleSpanProcessor.prototype.forceFlush = function () {\n        // do nothing as all spans are being exported without waiting\n        return Promise.resolve();\n    };\n    // does nothing.\n    SimpleSpanProcessor.prototype.onStart = function (_span, _parentContext) { };\n    SimpleSpanProcessor.prototype.onEnd = function (span) {\n        if (this._shutdownOnce.isCalled) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        internal\n            ._export(this._exporter, [span])\n            .then(function (result) {\n            var _a;\n            if (result.code !== ExportResultCode.SUCCESS) {\n                globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error(\"SimpleSpanProcessor: span export failed (status \" + result + \")\"));\n            }\n        })\n            .catch(function (error) {\n            globalErrorHandler(error);\n        });\n    };\n    SimpleSpanProcessor.prototype.shutdown = function () {\n        return this._shutdownOnce.call();\n    };\n    SimpleSpanProcessor.prototype._shutdown = function () {\n        return this._exporter.shutdown();\n    };\n    return SimpleSpanProcessor;\n}());\nexport { SimpleSpanProcessor };\n//# sourceMappingURL=SimpleSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nvar BatchSpanProcessor = /** @class */ (function (_super) {\n    __extends(BatchSpanProcessor, _super);\n    function BatchSpanProcessor(_exporter, config) {\n        var _this = _super.call(this, _exporter, config) || this;\n        _this.onInit(config);\n        return _this;\n    }\n    BatchSpanProcessor.prototype.onInit = function (config) {\n        var _this = this;\n        if ((config === null || config === void 0 ? void 0 : config.disableAutoFlushOnDocumentHide) !== true &&\n            typeof document !== 'undefined') {\n            this._visibilityChangeListener = function () {\n                if (document.visibilityState === 'hidden') {\n                    void _this.forceFlush();\n                }\n            };\n            this._pageHideListener = function () {\n                void _this.forceFlush();\n            };\n            document.addEventListener('visibilitychange', this._visibilityChangeListener);\n            // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n            document.addEventListener('pagehide', this._pageHideListener);\n        }\n    };\n    BatchSpanProcessor.prototype.onShutdown = function () {\n        if (typeof document !== 'undefined') {\n            if (this._visibilityChangeListener) {\n                document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n            }\n            if (this._pageHideListener) {\n                document.removeEventListener('pagehide', this._pageHideListener);\n            }\n        }\n    };\n    return BatchSpanProcessor;\n}(BatchSpanProcessorBase));\nexport { BatchSpanProcessor };\n//# sourceMappingURL=BatchSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, diag, TraceFlags } from '@opentelemetry/api';\nimport { BindOnceFuture, ExportResultCode, getEnv, globalErrorHandler, suppressTracing, unrefTimer, } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nvar BatchSpanProcessorBase = /** @class */ (function () {\n    function BatchSpanProcessorBase(_exporter, config) {\n        this._exporter = _exporter;\n        this._finishedSpans = [];\n        var env = getEnv();\n        this._maxExportBatchSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxExportBatchSize) === 'number'\n                ? config.maxExportBatchSize\n                : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n        this._maxQueueSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxQueueSize) === 'number'\n                ? config.maxQueueSize\n                : env.OTEL_BSP_MAX_QUEUE_SIZE;\n        this._scheduledDelayMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.scheduledDelayMillis) === 'number'\n                ? config.scheduledDelayMillis\n                : env.OTEL_BSP_SCHEDULE_DELAY;\n        this._exportTimeoutMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.exportTimeoutMillis) === 'number'\n                ? config.exportTimeoutMillis\n                : env.OTEL_BSP_EXPORT_TIMEOUT;\n        this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n        if (this._maxExportBatchSize > this._maxQueueSize) {\n            diag.warn('BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize');\n            this._maxExportBatchSize = this._maxQueueSize;\n        }\n    }\n    BatchSpanProcessorBase.prototype.forceFlush = function () {\n        if (this._shutdownOnce.isCalled) {\n            return this._shutdownOnce.promise;\n        }\n        return this._flushAll();\n    };\n    // does nothing.\n    BatchSpanProcessorBase.prototype.onStart = function (_span, _parentContext) { };\n    BatchSpanProcessorBase.prototype.onEnd = function (span) {\n        if (this._shutdownOnce.isCalled) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        this._addToBuffer(span);\n    };\n    BatchSpanProcessorBase.prototype.shutdown = function () {\n        return this._shutdownOnce.call();\n    };\n    BatchSpanProcessorBase.prototype._shutdown = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.onShutdown();\n        })\n            .then(function () {\n            return _this._flushAll();\n        })\n            .then(function () {\n            return _this._exporter.shutdown();\n        });\n    };\n    /** Add a span in the buffer. */\n    BatchSpanProcessorBase.prototype._addToBuffer = function (span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            return;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    };\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    BatchSpanProcessorBase.prototype._flushAll = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var promises = [];\n            // calculate number of batches\n            var count = Math.ceil(_this._finishedSpans.length / _this._maxExportBatchSize);\n            for (var i = 0, j = count; i < j; i++) {\n                promises.push(_this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(function () {\n                resolve();\n            })\n                .catch(reject);\n        });\n    };\n    BatchSpanProcessorBase.prototype._flushOneBatch = function () {\n        var _this = this;\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var timer = setTimeout(function () {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, _this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            context.with(suppressTracing(context.active()), function () {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside of the execution of this callback.\n                _this._exporter.export(_this._finishedSpans.splice(0, _this._maxExportBatchSize), function (result) {\n                    var _a;\n                    clearTimeout(timer);\n                    if (result.code === ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n            });\n        });\n    };\n    BatchSpanProcessorBase.prototype._maybeStartTimer = function () {\n        var _this = this;\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(function () {\n            _this._flushOneBatch()\n                .then(function () {\n                if (_this._finishedSpans.length > 0) {\n                    _this._clearTimer();\n                    _this._maybeStartTimer();\n                }\n            })\n                .catch(function (e) {\n                globalErrorHandler(e);\n            });\n        }, this._scheduledDelayMillis);\n        unrefTimer(this._timer);\n    };\n    BatchSpanProcessorBase.prototype._clearTimer = function () {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    };\n    return BatchSpanProcessorBase;\n}());\nexport { BatchSpanProcessorBase };\n//# sourceMappingURL=BatchSpanProcessorBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples no traces. */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples all traces. */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { DEFAULT_ATTRIBUTE_COUNT_LIMIT, DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT, getEnvWithoutDefaults, } from '@opentelemetry/core';\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig) {\n    var perInstanceDefaults = {\n        sampler: buildSamplerFromEnv(),\n    };\n    var DEFAULT_CONFIG = loadDefaultConfig();\n    var target = Object.assign({}, DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.generalLimits = Object.assign({}, DEFAULT_CONFIG.generalLimits, userConfig.generalLimits || {});\n    target.spanLimits = Object.assign({}, DEFAULT_CONFIG.spanLimits, userConfig.spanLimits || {});\n    return target;\n}\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var spanLimits = Object.assign({}, userConfig.spanLimits);\n    var parsedEnvConfig = getEnvWithoutDefaults();\n    /**\n     * Reassign span attribute count limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeCountLimit =\n        (_f = (_e = (_d = (_b = (_a = userConfig.spanLimits) === null || _a === void 0 ? void 0 : _a.attributeCountLimit) !== null && _b !== void 0 ? _b : (_c = userConfig.generalLimits) === null || _c === void 0 ? void 0 : _c.attributeCountLimit) !== null && _d !== void 0 ? _d : parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT) !== null && _e !== void 0 ? _e : parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT) !== null && _f !== void 0 ? _f : DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n    /**\n     * Reassign span attribute value length limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeValueLengthLimit =\n        (_m = (_l = (_k = (_h = (_g = userConfig.spanLimits) === null || _g === void 0 ? void 0 : _g.attributeValueLengthLimit) !== null && _h !== void 0 ? _h : (_j = userConfig.generalLimits) === null || _j === void 0 ? void 0 : _j.attributeValueLengthLimit) !== null && _k !== void 0 ? _k : parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && _l !== void 0 ? _l : parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && _m !== void 0 ? _m : DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n    return Object.assign({}, userConfig, { spanLimits: spanLimits });\n}\n//# sourceMappingURL=utility.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag } from '@opentelemetry/api';\nexport function sanitizeAttributes(attributes) {\n    var e_1, _a;\n    var out = {};\n    if (typeof attributes !== 'object' || attributes == null) {\n        return out;\n    }\n    try {\n        for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), key = _d[0], val = _d[1];\n            if (!isAttributeKey(key)) {\n                diag.warn(\"Invalid attribute key: \" + key);\n                continue;\n            }\n            if (!isAttributeValue(val)) {\n                diag.warn(\"Invalid attribute value set for key: \" + key);\n                continue;\n            }\n            if (Array.isArray(val)) {\n                out[key] = val.slice();\n            }\n            else {\n                out[key] = val;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return out;\n}\nexport function isAttributeKey(key) {\n    return typeof key === 'string' && key.length > 0;\n}\nexport function isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n    var e_2, _a;\n    var type;\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var element = arr_1_1.value;\n            // null/undefined elements are allowed\n            if (element == null)\n                continue;\n            if (!type) {\n                if (isValidPrimitiveAttributeValue(element)) {\n                    type = typeof element;\n                    continue;\n                }\n                // encountered an invalid primitive\n                return false;\n            }\n            if (typeof element === type) {\n                continue;\n            }\n            return false;\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n        case 'boolean':\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar NANOSECOND_DIGITS_IN_MILLIS = 6;\nvar MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n    return [seconds, nanos];\n}\nexport function getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = millisToHrTime(getTimeOrigin());\n    var now = millisToHrTime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    return addHrTimes(timeOrigin, now);\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return millisToHrTime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return millisToHrTime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1, time2) {\n    var out = [time1[0] + time2[0], time1[1] + time2[1]];\n    // Nanoseconds\n    if (out[1] >= SECOND_TO_NANOSECONDS) {\n        out[1] -= SECOND_TO_NANOSECONDS;\n        out[0] += 1;\n    }\n    return out;\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var globalEnv = parseEnvironment(_globalThis);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n        ? self\n        : typeof window === 'object'\n            ? window\n            : typeof global === 'object'\n                ? global\n                : {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false))).then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'];\nfunction isEnvVarABoolean(key) {\n    return (ENVIRONMENT_BOOLEAN_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    OTEL_SDK_DISABLED: false,\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: '',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n};\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(key, environment, values) {\n    if (typeof values[key] === 'undefined') {\n        return;\n    }\n    var value = String(values[key]);\n    // support case-insensitive \"true\"\n    environment[key] = value.toLowerCase() === 'true';\n}\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarABoolean(key)) {\n                    parseBoolean(key, environment, values);\n                }\n                else if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults() {\n    return typeof process !== 'undefined'\n        ? parseEnvironment(process.env)\n        : parseEnvironment(_globalThis);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var PerformanceTimingNames;\n(function (PerformanceTimingNames) {\n    PerformanceTimingNames[\"CONNECT_END\"] = \"connectEnd\";\n    PerformanceTimingNames[\"CONNECT_START\"] = \"connectStart\";\n    PerformanceTimingNames[\"DECODED_BODY_SIZE\"] = \"decodedBodySize\";\n    PerformanceTimingNames[\"DOM_COMPLETE\"] = \"domComplete\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_END\"] = \"domContentLoadedEventEnd\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_START\"] = \"domContentLoadedEventStart\";\n    PerformanceTimingNames[\"DOM_INTERACTIVE\"] = \"domInteractive\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_END\"] = \"domainLookupEnd\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_START\"] = \"domainLookupStart\";\n    PerformanceTimingNames[\"ENCODED_BODY_SIZE\"] = \"encodedBodySize\";\n    PerformanceTimingNames[\"FETCH_START\"] = \"fetchStart\";\n    PerformanceTimingNames[\"LOAD_EVENT_END\"] = \"loadEventEnd\";\n    PerformanceTimingNames[\"LOAD_EVENT_START\"] = \"loadEventStart\";\n    PerformanceTimingNames[\"NAVIGATION_START\"] = \"navigationStart\";\n    PerformanceTimingNames[\"REDIRECT_END\"] = \"redirectEnd\";\n    PerformanceTimingNames[\"REDIRECT_START\"] = \"redirectStart\";\n    PerformanceTimingNames[\"REQUEST_START\"] = \"requestStart\";\n    PerformanceTimingNames[\"RESPONSE_END\"] = \"responseEnd\";\n    PerformanceTimingNames[\"RESPONSE_START\"] = \"responseStart\";\n    PerformanceTimingNames[\"SECURE_CONNECTION_START\"] = \"secureConnectionStart\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_END\"] = \"unloadEventEnd\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_START\"] = \"unloadEventStart\";\n})(PerformanceTimingNames || (PerformanceTimingNames = {}));\n//# sourceMappingURL=PerformanceTimingNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BasicTracerProvider, } from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nvar WebTracerProvider = /** @class */ (function (_super) {\n    __extends(WebTracerProvider, _super);\n    /**\n     * Constructs a new Tracer instance.\n     * @param config Web Tracer config\n     */\n    function WebTracerProvider(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        if (config.contextManager) {\n            throw ('contextManager should be defined in register method not in' +\n                ' constructor');\n        }\n        if (config.propagator) {\n            throw 'propagator should be defined in register method not in constructor';\n        }\n        return _this;\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    WebTracerProvider.prototype.register = function (config) {\n        if (config === void 0) { config = {}; }\n        if (config.contextManager === undefined) {\n            config.contextManager = new StackContextManager();\n        }\n        if (config.contextManager) {\n            config.contextManager.enable();\n        }\n        _super.prototype.register.call(this, config);\n    };\n    return WebTracerProvider;\n}(BasicTracerProvider));\nexport { WebTracerProvider };\n//# sourceMappingURL=WebTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ROOT_CONTEXT } from '@opentelemetry/api';\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nvar StackContextManager = /** @class */ (function () {\n    function StackContextManager() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Keeps the reference to current context\n         */\n        this._currentContext = ROOT_CONTEXT;\n    }\n    /**\n     *\n     * @param context\n     * @param target Function to be executed within the context\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    StackContextManager.prototype._bindFunction = function (context, target) {\n        if (context === void 0) { context = ROOT_CONTEXT; }\n        var manager = this;\n        var contextWrapper = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.with(context, function () { return target.apply(_this, args); });\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    };\n    /**\n     * Returns the active context\n     */\n    StackContextManager.prototype.active = function () {\n        return this._currentContext;\n    };\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    StackContextManager.prototype.bind = function (context, target) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        return target;\n    };\n    /**\n     * Disable the context manager (clears the current context)\n     */\n    StackContextManager.prototype.disable = function () {\n        this._currentContext = ROOT_CONTEXT;\n        this._enabled = false;\n        return this;\n    };\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    StackContextManager.prototype.enable = function () {\n        if (this._enabled) {\n            return this;\n        }\n        this._enabled = true;\n        this._currentContext = ROOT_CONTEXT;\n        return this;\n    };\n    /**\n     * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n     * The context will be set as active\n     * @param context\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    StackContextManager.prototype.with = function (context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        var previousContext = this._currentContext;\n        this._currentContext = context || ROOT_CONTEXT;\n        try {\n            return fn.call.apply(fn, __spreadArray([thisArg], __read(args), false));\n        }\n        finally {\n            this._currentContext = previousContext;\n        }\n    };\n    return StackContextManager;\n}());\nexport { StackContextManager };\n//# sourceMappingURL=StackContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar NANOSECOND_DIGITS_IN_MILLIS = 6;\nvar MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n    return [seconds, nanos];\n}\nexport function getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = millisToHrTime(getTimeOrigin());\n    var now = millisToHrTime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    return addHrTimes(timeOrigin, now);\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return millisToHrTime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return millisToHrTime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1, time2) {\n    var out = [time1[0] + time2[0], time1[1] + time2[1]];\n    // Nanoseconds\n    if (out[1] >= SECOND_TO_NANOSECONDS) {\n        out[1] -= SECOND_TO_NANOSECONDS;\n        out[0] += 1;\n    }\n    return out;\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticAttributes = {\n    /**\n     * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n     *\n     * Note: This may be different from `faas.id` if an alias is involved.\n     */\n    AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n    /**\n     * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n     */\n    DB_SYSTEM: 'db.system',\n    /**\n     * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n     */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n     * Username for accessing the database.\n     */\n    DB_USER: 'db.user',\n    /**\n     * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n     */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    /**\n     * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n     *\n     * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n     */\n    DB_NAME: 'db.name',\n    /**\n     * The database statement being executed.\n     *\n     * Note: The value may be sanitized to exclude sensitive information.\n     */\n    DB_STATEMENT: 'db.statement',\n    /**\n     * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n     *\n     * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n     */\n    DB_OPERATION: 'db.operation',\n    /**\n     * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n     *\n     * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n     */\n    DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n     * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n     * The fetch size used for paging, i.e. how many rows will be returned at once.\n     */\n    DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n    /**\n     * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n     */\n    DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_CASSANDRA_TABLE: 'db.cassandra.table',\n    /**\n     * Whether or not the query is idempotent.\n     */\n    DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n    /**\n     * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n     */\n    DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n    /**\n     * The ID of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n    /**\n     * The data center of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n    /**\n     * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n     * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n     */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n     * The collection being accessed within the database stated in `db.name`.\n     */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_SQL_TABLE: 'db.sql.table',\n    /**\n     * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n     */\n    EXCEPTION_TYPE: 'exception.type',\n    /**\n     * The exception message.\n     */\n    EXCEPTION_MESSAGE: 'exception.message',\n    /**\n     * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n     */\n    EXCEPTION_STACKTRACE: 'exception.stacktrace',\n    /**\n    * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n    *\n    * Note: An exception is considered to have escaped (or left) the scope of a span,\n  if that span is ended while the exception is still logically &#34;in flight&#34;.\n  This may be actually &#34;in flight&#34; in some languages (e.g. if the exception\n  is passed to a Context manager&#39;s `__exit__` method in Python) but will\n  usually be caught at the point of recording the exception in most languages.\n  \n  It is usually not possible to determine at the point where an exception is thrown\n  whether it will escape the scope of a span.\n  However, it is trivial to know that an exception\n  will escape, if one checks for an active exception just before ending the span,\n  as done in the [example above](#exception-end-example).\n  \n  It follows that an exception may still escape the scope of the span\n  even if the `exception.escaped` attribute was not set or set to false,\n  since the event might have been recorded at a time where it was not\n  clear whether the exception will escape.\n    */\n    EXCEPTION_ESCAPED: 'exception.escaped',\n    /**\n     * Type of the trigger on which the function is executed.\n     */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n     * The execution ID of the current function execution.\n     */\n    FAAS_EXECUTION: 'faas.execution',\n    /**\n     * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n     */\n    FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n    /**\n     * Describes the type of the operation that was performed on the data.\n     */\n    FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n    /**\n     * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_DOCUMENT_TIME: 'faas.document.time',\n    /**\n     * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n     */\n    FAAS_DOCUMENT_NAME: 'faas.document.name',\n    /**\n     * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_TIME: 'faas.time',\n    /**\n     * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n     */\n    FAAS_CRON: 'faas.cron',\n    /**\n     * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n     */\n    FAAS_COLDSTART: 'faas.coldstart',\n    /**\n     * The name of the invoked function.\n     *\n     * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n     * The cloud provider of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n     * The cloud region of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    /**\n     * Transport protocol used. See note below.\n     */\n    NET_TRANSPORT: 'net.transport',\n    /**\n     * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n     */\n    NET_PEER_IP: 'net.peer.ip',\n    /**\n     * Remote port number.\n     */\n    NET_PEER_PORT: 'net.peer.port',\n    /**\n     * Remote hostname or similar, see note below.\n     */\n    NET_PEER_NAME: 'net.peer.name',\n    /**\n     * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n     */\n    NET_HOST_IP: 'net.host.ip',\n    /**\n     * Like `net.peer.port` but for the host port.\n     */\n    NET_HOST_PORT: 'net.host.port',\n    /**\n     * Local hostname or similar, see note below.\n     */\n    NET_HOST_NAME: 'net.host.name',\n    /**\n     * The internet connection type currently being used by the host.\n     */\n    NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n    /**\n     * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n     */\n    NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n    /**\n     * The name of the mobile carrier.\n     */\n    NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n    /**\n     * The mobile carrier country code.\n     */\n    NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n    /**\n     * The mobile carrier network code.\n     */\n    NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n    /**\n     * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n     */\n    NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n    /**\n     * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n     */\n    PEER_SERVICE: 'peer.service',\n    /**\n     * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n     */\n    ENDUSER_ID: 'enduser.id',\n    /**\n     * Actual/assumed role the client is making the request under extracted from token or application security context.\n     */\n    ENDUSER_ROLE: 'enduser.role',\n    /**\n     * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n     */\n    ENDUSER_SCOPE: 'enduser.scope',\n    /**\n     * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n     */\n    THREAD_ID: 'thread.id',\n    /**\n     * Current thread name.\n     */\n    THREAD_NAME: 'thread.name',\n    /**\n     * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n     */\n    CODE_FUNCTION: 'code.function',\n    /**\n     * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n     */\n    CODE_NAMESPACE: 'code.namespace',\n    /**\n     * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n     */\n    CODE_FILEPATH: 'code.filepath',\n    /**\n     * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n     */\n    CODE_LINENO: 'code.lineno',\n    /**\n     * HTTP request method.\n     */\n    HTTP_METHOD: 'http.method',\n    /**\n     * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n     *\n     * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n     */\n    HTTP_URL: 'http.url',\n    /**\n     * The full request target as passed in a HTTP request line or equivalent.\n     */\n    HTTP_TARGET: 'http.target',\n    /**\n     * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n     *\n     * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n     */\n    HTTP_HOST: 'http.host',\n    /**\n     * The URI scheme identifying the used protocol.\n     */\n    HTTP_SCHEME: 'http.scheme',\n    /**\n     * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n     */\n    HTTP_STATUS_CODE: 'http.status_code',\n    /**\n     * Kind of HTTP protocol used.\n     *\n     * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n     */\n    HTTP_FLAVOR: 'http.flavor',\n    /**\n     * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n     */\n    HTTP_USER_AGENT: 'http.user_agent',\n    /**\n     * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    /**\n     * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    /**\n     * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    /**\n     * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    /**\n     * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n     *\n     * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n     */\n    HTTP_SERVER_NAME: 'http.server_name',\n    /**\n     * The matched route (path template).\n     */\n    HTTP_ROUTE: 'http.route',\n    /**\n    * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n    *\n    * Note: This is not necessarily the same as `net.peer.ip`, which would\n  identify the network-level peer, which may be a proxy.\n  \n  This attribute should be set when a source of information different\n  from the one used for `net.peer.ip`, is available even if that other\n  source just confirms the same value as `net.peer.ip`.\n  Rationale: For `net.peer.ip`, one typically does not know if it\n  comes from a proxy, reverse proxy, or the actual client. Setting\n  `http.client_ip` when it&#39;s the same as `net.peer.ip` means that\n  one is at least somewhat confident that the address is not that of\n  the closest proxy.\n    */\n    HTTP_CLIENT_IP: 'http.client_ip',\n    /**\n     * The keys in the `RequestItems` object field.\n     */\n    AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n    /**\n     * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n     */\n    AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n    /**\n     * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n     */\n    AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n    /**\n     * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n    /**\n     * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n    /**\n     * The value of the `ConsistentRead` request parameter.\n     */\n    AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n    /**\n     * The value of the `ProjectionExpression` request parameter.\n     */\n    AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n    /**\n     * The value of the `Limit` request parameter.\n     */\n    AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n    /**\n     * The value of the `AttributesToGet` request parameter.\n     */\n    AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n    /**\n     * The value of the `IndexName` request parameter.\n     */\n    AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n    /**\n     * The value of the `Select` request parameter.\n     */\n    AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n    /**\n     * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n    /**\n     * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n    /**\n     * The value of the `ExclusiveStartTableName` request parameter.\n     */\n    AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n    /**\n     * The the number of items in the `TableNames` response parameter.\n     */\n    AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n    /**\n     * The value of the `ScanIndexForward` request parameter.\n     */\n    AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n    /**\n     * The value of the `Segment` request parameter.\n     */\n    AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n    /**\n     * The value of the `TotalSegments` request parameter.\n     */\n    AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n    /**\n     * The value of the `Count` response parameter.\n     */\n    AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n    /**\n     * The value of the `ScannedCount` response parameter.\n     */\n    AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n    /**\n     * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n     */\n    AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n    /**\n     * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n    /**\n     * A string identifying the messaging system.\n     */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n     * The message destination name. This might be equal to the span name but is required nevertheless.\n     */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n     * The kind of message destination.\n     */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n     * A boolean that is true if the message destination is temporary.\n     */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n     * The name of the transport protocol.\n     */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n     * The version of the transport protocol.\n     */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n     * Connection string.\n     */\n    MESSAGING_URL: 'messaging.url',\n    /**\n     * A value used by the messaging system as an identifier for the message, represented as a string.\n     */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n     * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n     */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n     * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n     * The compressed size of the message payload in bytes.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n     * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n     */\n    MESSAGING_OPERATION: 'messaging.operation',\n    /**\n     * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n     */\n    MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n    /**\n     * RabbitMQ message routing key.\n     */\n    MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n    /**\n     * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n     *\n     * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n     */\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    /**\n     * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n     */\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    /**\n     * Client Id for the Consumer or Producer that is handling the message.\n     */\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    /**\n     * Partition the message is sent to.\n     */\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    /**\n     * A boolean that is true if the message is a tombstone.\n     */\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n    /**\n     * A string identifying the remoting system.\n     */\n    RPC_SYSTEM: 'rpc.system',\n    /**\n     * The full (logical) name of the service being called, including its package name, if applicable.\n     *\n     * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n     */\n    RPC_SERVICE: 'rpc.service',\n    /**\n     * The name of the (logical) method being called, must be equal to the $method part in the span name.\n     *\n     * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n     */\n    RPC_METHOD: 'rpc.method',\n    /**\n     * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n     */\n    RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n    /**\n     * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n     */\n    RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n    /**\n     * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n     */\n    RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n    /**\n     * `error.code` property of response if it is an error response.\n     */\n    RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n    /**\n     * `error.message` property of response if it is an error response.\n     */\n    RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n    /**\n     * Whether this is a received or sent message.\n     */\n    MESSAGE_TYPE: 'message.type',\n    /**\n     * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n     *\n     * Note: This way we guarantee that the values will be consistent between different implementations.\n     */\n    MESSAGE_ID: 'message.id',\n    /**\n     * Compressed size of the message in bytes.\n     */\n    MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n    /**\n     * Uncompressed size of the message in bytes.\n     */\n    MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\nexport var DbSystemValues = {\n    /** Some other SQL database. Fallback only. See notes. */\n    OTHER_SQL: 'other_sql',\n    /** Microsoft SQL Server. */\n    MSSQL: 'mssql',\n    /** MySQL. */\n    MYSQL: 'mysql',\n    /** Oracle Database. */\n    ORACLE: 'oracle',\n    /** IBM Db2. */\n    DB2: 'db2',\n    /** PostgreSQL. */\n    POSTGRESQL: 'postgresql',\n    /** Amazon Redshift. */\n    REDSHIFT: 'redshift',\n    /** Apache Hive. */\n    HIVE: 'hive',\n    /** Cloudscape. */\n    CLOUDSCAPE: 'cloudscape',\n    /** HyperSQL DataBase. */\n    HSQLDB: 'hsqldb',\n    /** Progress Database. */\n    PROGRESS: 'progress',\n    /** SAP MaxDB. */\n    MAXDB: 'maxdb',\n    /** SAP HANA. */\n    HANADB: 'hanadb',\n    /** Ingres. */\n    INGRES: 'ingres',\n    /** FirstSQL. */\n    FIRSTSQL: 'firstsql',\n    /** EnterpriseDB. */\n    EDB: 'edb',\n    /** InterSystems Caché. */\n    CACHE: 'cache',\n    /** Adabas (Adaptable Database System). */\n    ADABAS: 'adabas',\n    /** Firebird. */\n    FIREBIRD: 'firebird',\n    /** Apache Derby. */\n    DERBY: 'derby',\n    /** FileMaker. */\n    FILEMAKER: 'filemaker',\n    /** Informix. */\n    INFORMIX: 'informix',\n    /** InstantDB. */\n    INSTANTDB: 'instantdb',\n    /** InterBase. */\n    INTERBASE: 'interbase',\n    /** MariaDB. */\n    MARIADB: 'mariadb',\n    /** Netezza. */\n    NETEZZA: 'netezza',\n    /** Pervasive PSQL. */\n    PERVASIVE: 'pervasive',\n    /** PointBase. */\n    POINTBASE: 'pointbase',\n    /** SQLite. */\n    SQLITE: 'sqlite',\n    /** Sybase. */\n    SYBASE: 'sybase',\n    /** Teradata. */\n    TERADATA: 'teradata',\n    /** Vertica. */\n    VERTICA: 'vertica',\n    /** H2. */\n    H2: 'h2',\n    /** ColdFusion IMQ. */\n    COLDFUSION: 'coldfusion',\n    /** Apache Cassandra. */\n    CASSANDRA: 'cassandra',\n    /** Apache HBase. */\n    HBASE: 'hbase',\n    /** MongoDB. */\n    MONGODB: 'mongodb',\n    /** Redis. */\n    REDIS: 'redis',\n    /** Couchbase. */\n    COUCHBASE: 'couchbase',\n    /** CouchDB. */\n    COUCHDB: 'couchdb',\n    /** Microsoft Azure Cosmos DB. */\n    COSMOSDB: 'cosmosdb',\n    /** Amazon DynamoDB. */\n    DYNAMODB: 'dynamodb',\n    /** Neo4j. */\n    NEO4J: 'neo4j',\n    /** Apache Geode. */\n    GEODE: 'geode',\n    /** Elasticsearch. */\n    ELASTICSEARCH: 'elasticsearch',\n    /** Memcached. */\n    MEMCACHED: 'memcached',\n    /** CockroachDB. */\n    COCKROACHDB: 'cockroachdb',\n};\nexport var DbCassandraConsistencyLevelValues = {\n    /** all. */\n    ALL: 'all',\n    /** each_quorum. */\n    EACH_QUORUM: 'each_quorum',\n    /** quorum. */\n    QUORUM: 'quorum',\n    /** local_quorum. */\n    LOCAL_QUORUM: 'local_quorum',\n    /** one. */\n    ONE: 'one',\n    /** two. */\n    TWO: 'two',\n    /** three. */\n    THREE: 'three',\n    /** local_one. */\n    LOCAL_ONE: 'local_one',\n    /** any. */\n    ANY: 'any',\n    /** serial. */\n    SERIAL: 'serial',\n    /** local_serial. */\n    LOCAL_SERIAL: 'local_serial',\n};\nexport var FaasTriggerValues = {\n    /** A response to some data source operation such as a database or filesystem read/write. */\n    DATASOURCE: 'datasource',\n    /** To provide an answer to an inbound HTTP request. */\n    HTTP: 'http',\n    /** A function is set to be executed when messages are sent to a messaging system. */\n    PUBSUB: 'pubsub',\n    /** A function is scheduled to be executed regularly. */\n    TIMER: 'timer',\n    /** If none of the others apply. */\n    OTHER: 'other',\n};\nexport var FaasDocumentOperationValues = {\n    /** When a new object is created. */\n    INSERT: 'insert',\n    /** When an object is modified. */\n    EDIT: 'edit',\n    /** When an object is deleted. */\n    DELETE: 'delete',\n};\nexport var FaasInvokedProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var NetTransportValues = {\n    /** ip_tcp. */\n    IP_TCP: 'ip_tcp',\n    /** ip_udp. */\n    IP_UDP: 'ip_udp',\n    /** Another IP-based protocol. */\n    IP: 'ip',\n    /** Unix Domain socket. See below. */\n    UNIX: 'unix',\n    /** Named or anonymous pipe. See note below. */\n    PIPE: 'pipe',\n    /** In-process communication. */\n    INPROC: 'inproc',\n    /** Something else (non IP-based). */\n    OTHER: 'other',\n};\nexport var NetHostConnectionTypeValues = {\n    /** wifi. */\n    WIFI: 'wifi',\n    /** wired. */\n    WIRED: 'wired',\n    /** cell. */\n    CELL: 'cell',\n    /** unavailable. */\n    UNAVAILABLE: 'unavailable',\n    /** unknown. */\n    UNKNOWN: 'unknown',\n};\nexport var NetHostConnectionSubtypeValues = {\n    /** GPRS. */\n    GPRS: 'gprs',\n    /** EDGE. */\n    EDGE: 'edge',\n    /** UMTS. */\n    UMTS: 'umts',\n    /** CDMA. */\n    CDMA: 'cdma',\n    /** EVDO Rel. 0. */\n    EVDO_0: 'evdo_0',\n    /** EVDO Rev. A. */\n    EVDO_A: 'evdo_a',\n    /** CDMA2000 1XRTT. */\n    CDMA2000_1XRTT: 'cdma2000_1xrtt',\n    /** HSDPA. */\n    HSDPA: 'hsdpa',\n    /** HSUPA. */\n    HSUPA: 'hsupa',\n    /** HSPA. */\n    HSPA: 'hspa',\n    /** IDEN. */\n    IDEN: 'iden',\n    /** EVDO Rev. B. */\n    EVDO_B: 'evdo_b',\n    /** LTE. */\n    LTE: 'lte',\n    /** EHRPD. */\n    EHRPD: 'ehrpd',\n    /** HSPAP. */\n    HSPAP: 'hspap',\n    /** GSM. */\n    GSM: 'gsm',\n    /** TD-SCDMA. */\n    TD_SCDMA: 'td_scdma',\n    /** IWLAN. */\n    IWLAN: 'iwlan',\n    /** 5G NR (New Radio). */\n    NR: 'nr',\n    /** 5G NRNSA (New Radio Non-Standalone). */\n    NRNSA: 'nrnsa',\n    /** LTE CA. */\n    LTE_CA: 'lte_ca',\n};\nexport var HttpFlavorValues = {\n    /** HTTP 1.0. */\n    HTTP_1_0: '1.0',\n    /** HTTP 1.1. */\n    HTTP_1_1: '1.1',\n    /** HTTP 2. */\n    HTTP_2_0: '2.0',\n    /** SPDY protocol. */\n    SPDY: 'SPDY',\n    /** QUIC protocol. */\n    QUIC: 'QUIC',\n};\nexport var MessagingDestinationKindValues = {\n    /** A message sent to a queue. */\n    QUEUE: 'queue',\n    /** A message sent to a topic. */\n    TOPIC: 'topic',\n};\nexport var MessagingOperationValues = {\n    /** receive. */\n    RECEIVE: 'receive',\n    /** process. */\n    PROCESS: 'process',\n};\nexport var RpcGrpcStatusCodeValues = {\n    /** OK. */\n    OK: 0,\n    /** CANCELLED. */\n    CANCELLED: 1,\n    /** UNKNOWN. */\n    UNKNOWN: 2,\n    /** INVALID_ARGUMENT. */\n    INVALID_ARGUMENT: 3,\n    /** DEADLINE_EXCEEDED. */\n    DEADLINE_EXCEEDED: 4,\n    /** NOT_FOUND. */\n    NOT_FOUND: 5,\n    /** ALREADY_EXISTS. */\n    ALREADY_EXISTS: 6,\n    /** PERMISSION_DENIED. */\n    PERMISSION_DENIED: 7,\n    /** RESOURCE_EXHAUSTED. */\n    RESOURCE_EXHAUSTED: 8,\n    /** FAILED_PRECONDITION. */\n    FAILED_PRECONDITION: 9,\n    /** ABORTED. */\n    ABORTED: 10,\n    /** OUT_OF_RANGE. */\n    OUT_OF_RANGE: 11,\n    /** UNIMPLEMENTED. */\n    UNIMPLEMENTED: 12,\n    /** INTERNAL. */\n    INTERNAL: 13,\n    /** UNAVAILABLE. */\n    UNAVAILABLE: 14,\n    /** DATA_LOSS. */\n    DATA_LOSS: 15,\n    /** UNAUTHENTICATED. */\n    UNAUTHENTICATED: 16,\n};\nexport var MessageTypeValues = {\n    /** sent. */\n    SENT: 'SENT',\n    /** received. */\n    RECEIVED: 'RECEIVED',\n};\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport { hrTimeToNanoseconds, timeInputToHrTime, urlMatches, } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n// Used to normalize relative URLs\nvar urlNormalizingAnchor;\nfunction getUrlNormalizingAnchor() {\n    if (!urlNormalizingAnchor) {\n        urlNormalizingAnchor = document.createElement('a');\n    }\n    return urlNormalizingAnchor;\n}\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey(obj, key) {\n    return key in obj;\n}\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(span, performanceName, entries) {\n    if (hasKey(entries, performanceName) &&\n        typeof entries[performanceName] === 'number') {\n        span.addEvent(performanceName, entries[performanceName]);\n        return span;\n    }\n    return undefined;\n}\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(span, resource) {\n    addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n    addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n    addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n    var encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n    if (encodedLength !== undefined) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n    }\n    var decodedLength = resource[PTN.DECODED_BODY_SIZE];\n    // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n    if (decodedLength !== undefined && encodedLength !== decodedLength) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, decodedLength);\n    }\n}\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources) {\n    return filteredResources.slice().sort(function (a, b) {\n        var valueA = a[PTN.FETCH_START];\n        var valueB = b[PTN.FETCH_START];\n        if (valueA > valueB) {\n            return 1;\n        }\n        else if (valueA < valueB) {\n            return -1;\n        }\n        return 0;\n    });\n}\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    if (ignoredResources === void 0) { ignoredResources = new WeakSet(); }\n    // de-relativize the URL before usage (does no harm to absolute URLs)\n    var parsedSpanUrl = parseUrl(spanUrl);\n    spanUrl = parsedSpanUrl.toString();\n    var filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n    if (filteredResources.length === 0) {\n        return {\n            mainRequest: undefined,\n        };\n    }\n    if (filteredResources.length === 1) {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n    var sorted = sortResources(filteredResources);\n    if (parsedSpanUrl.origin !== location.origin && sorted.length > 1) {\n        var corsPreFlightRequest = sorted[0];\n        var mainRequest = findMainRequest(sorted, corsPreFlightRequest[PTN.RESPONSE_END], endTimeHR);\n        var responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n        var fetchStart = mainRequest[PTN.FETCH_START];\n        // no corsPreFlightRequest\n        if (fetchStart < responseEnd) {\n            mainRequest = corsPreFlightRequest;\n            corsPreFlightRequest = undefined;\n        }\n        return {\n            corsPreFlightRequest: corsPreFlightRequest,\n            mainRequest: mainRequest,\n        };\n    }\n    else {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n}\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n    var spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n    var minTime = hrTimeToNanoseconds(timeInputToHrTime(corsPreFlightRequestEndTime));\n    var mainRequest = resources[1];\n    var bestGap;\n    var length = resources.length;\n    for (var i = 1; i < length; i++) {\n        var resource = resources[i];\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        var currentGap = spanEndTime - resourceEndTime;\n        if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n            bestGap = currentGap;\n            mainRequest = resource;\n        }\n    }\n    return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    var startTime = hrTimeToNanoseconds(startTimeHR);\n    var endTime = hrTimeToNanoseconds(endTimeHR);\n    var filteredResources = resources.filter(function (resource) {\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        return (resource.initiatorType.toLowerCase() ===\n            (initiatorType || 'xmlhttprequest') &&\n            resource.name === spanUrl &&\n            resourceStartTime >= startTime &&\n            resourceEndTime <= endTime);\n    });\n    if (filteredResources.length > 0) {\n        filteredResources = filteredResources.filter(function (resource) {\n            return !ignoredResources.has(resource);\n        });\n    }\n    return filteredResources;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url) {\n    if (typeof URL === 'function') {\n        return new URL(url, location.href);\n    }\n    var element = getUrlNormalizingAnchor();\n    element.href = url;\n    return element;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url) {\n    var urlLike = parseUrl(url);\n    return urlLike.href;\n}\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target, optimised) {\n    if (target.nodeType === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    var targetValue = getNodeValue(target, optimised);\n    if (optimised && targetValue.indexOf('@id') > 0) {\n        return targetValue;\n    }\n    var xpath = '';\n    if (target.parentNode) {\n        xpath += getElementXPath(target.parentNode, false);\n    }\n    xpath += targetValue;\n    return xpath;\n}\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n    if (!target.parentNode) {\n        return 0;\n    }\n    var allowedTypes = [target.nodeType];\n    if (target.nodeType === Node.CDATA_SECTION_NODE) {\n        allowedTypes.push(Node.TEXT_NODE);\n    }\n    var elements = Array.from(target.parentNode.childNodes);\n    elements = elements.filter(function (element) {\n        var localName = element.localName;\n        return (allowedTypes.indexOf(element.nodeType) >= 0 &&\n            localName === target.localName);\n    });\n    if (elements.length >= 1) {\n        return elements.indexOf(target) + 1; // xpath starts from 1\n    }\n    // if there are no other similar child xpath doesn't need index\n    return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n    var nodeType = target.nodeType;\n    var index = getNodeIndex(target);\n    var nodeValue = '';\n    if (nodeType === Node.ELEMENT_NODE) {\n        var id = target.getAttribute('id');\n        if (optimised && id) {\n            return \"//*[@id=\\\"\" + id + \"\\\"]\";\n        }\n        nodeValue = target.localName;\n    }\n    else if (nodeType === Node.TEXT_NODE ||\n        nodeType === Node.CDATA_SECTION_NODE) {\n        nodeValue = 'text()';\n    }\n    else if (nodeType === Node.COMMENT_NODE) {\n        nodeValue = 'comment()';\n    }\n    else {\n        return '';\n    }\n    // if index is 1 it can be omitted in xpath\n    if (nodeValue && index > 1) {\n        return \"/\" + nodeValue + \"[\" + index + \"]\";\n    }\n    return \"/\" + nodeValue;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n    var propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n    if (typeof propagateTraceHeaderUrls === 'string' ||\n        propagateTraceHeaderUrls instanceof RegExp) {\n        propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n    }\n    var parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin === location.origin) {\n        return true;\n    }\n    else {\n        return propagateTraceHeaderUrls.some(function (propagateTraceHeaderUrl) {\n            return urlMatches(spanUrl, propagateTraceHeaderUrl);\n        });\n    }\n}\n//# sourceMappingURL=utils.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(url, ignoredUrls) {\n    var e_1, _a;\n    if (!ignoredUrls) {\n        return false;\n    }\n    try {\n        for (var ignoredUrls_1 = __values(ignoredUrls), ignoredUrls_1_1 = ignoredUrls_1.next(); !ignoredUrls_1_1.done; ignoredUrls_1_1 = ignoredUrls_1.next()) {\n            var ignoreUrl = ignoredUrls_1_1.value;\n            if (urlMatches(url, ignoreUrl)) {\n                return true;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (ignoredUrls_1_1 && !ignoredUrls_1_1.done && (_a = ignoredUrls_1.return)) _a.call(ignoredUrls_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return false;\n}\n//# sourceMappingURL=url.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticAttributes = {\n    /**\n    * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n    *\n    * Note: This may be different from `faas.id` if an alias is involved.\n    */\n    AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n    /**\n    * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n    */\n    DB_SYSTEM: 'db.system',\n    /**\n    * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n    */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n    * Username for accessing the database.\n    */\n    DB_USER: 'db.user',\n    /**\n    * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n    */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    /**\n    * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n    *\n    * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n    */\n    DB_NAME: 'db.name',\n    /**\n    * The database statement being executed.\n    *\n    * Note: The value may be sanitized to exclude sensitive information.\n    */\n    DB_STATEMENT: 'db.statement',\n    /**\n    * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n    *\n    * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n    */\n    DB_OPERATION: 'db.operation',\n    /**\n    * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n    *\n    * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n    */\n    DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n    * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n    */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n    * The fetch size used for paging, i.e. how many rows will be returned at once.\n    */\n    DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n    /**\n    * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n    */\n    DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n    /**\n    * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n    *\n    * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n    */\n    DB_CASSANDRA_TABLE: 'db.cassandra.table',\n    /**\n    * Whether or not the query is idempotent.\n    */\n    DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n    /**\n    * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n    */\n    DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n    /**\n    * The ID of the coordinating node for a query.\n    */\n    DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n    /**\n    * The data center of the coordinating node for a query.\n    */\n    DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n    /**\n    * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n    */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n    * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n    */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n    * The collection being accessed within the database stated in `db.name`.\n    */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    /**\n    * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n    *\n    * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n    */\n    DB_SQL_TABLE: 'db.sql.table',\n    /**\n    * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n    */\n    EXCEPTION_TYPE: 'exception.type',\n    /**\n    * The exception message.\n    */\n    EXCEPTION_MESSAGE: 'exception.message',\n    /**\n    * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n    */\n    EXCEPTION_STACKTRACE: 'exception.stacktrace',\n    /**\n    * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n    *\n    * Note: An exception is considered to have escaped (or left) the scope of a span,\n  if that span is ended while the exception is still logically &#34;in flight&#34;.\n  This may be actually &#34;in flight&#34; in some languages (e.g. if the exception\n  is passed to a Context manager&#39;s `__exit__` method in Python) but will\n  usually be caught at the point of recording the exception in most languages.\n  \n  It is usually not possible to determine at the point where an exception is thrown\n  whether it will escape the scope of a span.\n  However, it is trivial to know that an exception\n  will escape, if one checks for an active exception just before ending the span,\n  as done in the [example above](#exception-end-example).\n  \n  It follows that an exception may still escape the scope of the span\n  even if the `exception.escaped` attribute was not set or set to false,\n  since the event might have been recorded at a time where it was not\n  clear whether the exception will escape.\n    */\n    EXCEPTION_ESCAPED: 'exception.escaped',\n    /**\n    * Type of the trigger on which the function is executed.\n    */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n    * The execution ID of the current function execution.\n    */\n    FAAS_EXECUTION: 'faas.execution',\n    /**\n    * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n    */\n    FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n    /**\n    * Describes the type of the operation that was performed on the data.\n    */\n    FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n    /**\n    * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n    */\n    FAAS_DOCUMENT_TIME: 'faas.document.time',\n    /**\n    * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n    */\n    FAAS_DOCUMENT_NAME: 'faas.document.name',\n    /**\n    * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n    */\n    FAAS_TIME: 'faas.time',\n    /**\n    * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n    */\n    FAAS_CRON: 'faas.cron',\n    /**\n    * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n    */\n    FAAS_COLDSTART: 'faas.coldstart',\n    /**\n    * The name of the invoked function.\n    *\n    * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n    */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n    * The cloud provider of the invoked function.\n    *\n    * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n    */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n    * The cloud region of the invoked function.\n    *\n    * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n    */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    /**\n    * Transport protocol used. See note below.\n    */\n    NET_TRANSPORT: 'net.transport',\n    /**\n    * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n    */\n    NET_PEER_IP: 'net.peer.ip',\n    /**\n    * Remote port number.\n    */\n    NET_PEER_PORT: 'net.peer.port',\n    /**\n    * Remote hostname or similar, see note below.\n    */\n    NET_PEER_NAME: 'net.peer.name',\n    /**\n    * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n    */\n    NET_HOST_IP: 'net.host.ip',\n    /**\n    * Like `net.peer.port` but for the host port.\n    */\n    NET_HOST_PORT: 'net.host.port',\n    /**\n    * Local hostname or similar, see note below.\n    */\n    NET_HOST_NAME: 'net.host.name',\n    /**\n    * The internet connection type currently being used by the host.\n    */\n    NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n    /**\n    * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n    */\n    NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n    /**\n    * The name of the mobile carrier.\n    */\n    NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n    /**\n    * The mobile carrier country code.\n    */\n    NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n    /**\n    * The mobile carrier network code.\n    */\n    NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n    /**\n    * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n    */\n    NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n    /**\n    * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n    */\n    PEER_SERVICE: 'peer.service',\n    /**\n    * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n    */\n    ENDUSER_ID: 'enduser.id',\n    /**\n    * Actual/assumed role the client is making the request under extracted from token or application security context.\n    */\n    ENDUSER_ROLE: 'enduser.role',\n    /**\n    * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n    */\n    ENDUSER_SCOPE: 'enduser.scope',\n    /**\n    * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n    */\n    THREAD_ID: 'thread.id',\n    /**\n    * Current thread name.\n    */\n    THREAD_NAME: 'thread.name',\n    /**\n    * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n    */\n    CODE_FUNCTION: 'code.function',\n    /**\n    * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n    */\n    CODE_NAMESPACE: 'code.namespace',\n    /**\n    * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n    */\n    CODE_FILEPATH: 'code.filepath',\n    /**\n    * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n    */\n    CODE_LINENO: 'code.lineno',\n    /**\n    * HTTP request method.\n    */\n    HTTP_METHOD: 'http.method',\n    /**\n    * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n    *\n    * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n    */\n    HTTP_URL: 'http.url',\n    /**\n    * The full request target as passed in a HTTP request line or equivalent.\n    */\n    HTTP_TARGET: 'http.target',\n    /**\n    * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n    *\n    * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n    */\n    HTTP_HOST: 'http.host',\n    /**\n    * The URI scheme identifying the used protocol.\n    */\n    HTTP_SCHEME: 'http.scheme',\n    /**\n    * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n    */\n    HTTP_STATUS_CODE: 'http.status_code',\n    /**\n    * Kind of HTTP protocol used.\n    *\n    * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n    */\n    HTTP_FLAVOR: 'http.flavor',\n    /**\n    * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n    */\n    HTTP_USER_AGENT: 'http.user_agent',\n    /**\n    * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n    */\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    /**\n    * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n    */\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    /**\n    * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n    */\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    /**\n    * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n    */\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    /**\n    * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n    *\n    * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n    */\n    HTTP_SERVER_NAME: 'http.server_name',\n    /**\n    * The matched route (path template).\n    */\n    HTTP_ROUTE: 'http.route',\n    /**\n    * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n    *\n    * Note: This is not necessarily the same as `net.peer.ip`, which would\n  identify the network-level peer, which may be a proxy.\n  \n  This attribute should be set when a source of information different\n  from the one used for `net.peer.ip`, is available even if that other\n  source just confirms the same value as `net.peer.ip`.\n  Rationale: For `net.peer.ip`, one typically does not know if it\n  comes from a proxy, reverse proxy, or the actual client. Setting\n  `http.client_ip` when it&#39;s the same as `net.peer.ip` means that\n  one is at least somewhat confident that the address is not that of\n  the closest proxy.\n    */\n    HTTP_CLIENT_IP: 'http.client_ip',\n    /**\n    * The keys in the `RequestItems` object field.\n    */\n    AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n    /**\n    * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n    */\n    AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n    /**\n    * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n    */\n    AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n    /**\n    * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n    */\n    AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n    /**\n    * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n    */\n    AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n    /**\n    * The value of the `ConsistentRead` request parameter.\n    */\n    AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n    /**\n    * The value of the `ProjectionExpression` request parameter.\n    */\n    AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n    /**\n    * The value of the `Limit` request parameter.\n    */\n    AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n    /**\n    * The value of the `AttributesToGet` request parameter.\n    */\n    AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n    /**\n    * The value of the `IndexName` request parameter.\n    */\n    AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n    /**\n    * The value of the `Select` request parameter.\n    */\n    AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n    /**\n    * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n    */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n    /**\n    * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n    */\n    AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n    /**\n    * The value of the `ExclusiveStartTableName` request parameter.\n    */\n    AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n    /**\n    * The the number of items in the `TableNames` response parameter.\n    */\n    AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n    /**\n    * The value of the `ScanIndexForward` request parameter.\n    */\n    AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n    /**\n    * The value of the `Segment` request parameter.\n    */\n    AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n    /**\n    * The value of the `TotalSegments` request parameter.\n    */\n    AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n    /**\n    * The value of the `Count` response parameter.\n    */\n    AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n    /**\n    * The value of the `ScannedCount` response parameter.\n    */\n    AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n    /**\n    * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n    */\n    AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n    /**\n    * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n    */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n    /**\n    * A string identifying the messaging system.\n    */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n    * The message destination name. This might be equal to the span name but is required nevertheless.\n    */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n    * The kind of message destination.\n    */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n    * A boolean that is true if the message destination is temporary.\n    */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n    * The name of the transport protocol.\n    */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n    * The version of the transport protocol.\n    */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n    * Connection string.\n    */\n    MESSAGING_URL: 'messaging.url',\n    /**\n    * A value used by the messaging system as an identifier for the message, represented as a string.\n    */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n    * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n    */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n    * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n    */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n    * The compressed size of the message payload in bytes.\n    */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n    * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n    */\n    MESSAGING_OPERATION: 'messaging.operation',\n    /**\n    * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n    */\n    MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n    /**\n    * RabbitMQ message routing key.\n    */\n    MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n    /**\n    * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n    *\n    * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n    */\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    /**\n    * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n    */\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    /**\n    * Client Id for the Consumer or Producer that is handling the message.\n    */\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    /**\n    * Partition the message is sent to.\n    */\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    /**\n    * A boolean that is true if the message is a tombstone.\n    */\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n    /**\n    * A string identifying the remoting system.\n    */\n    RPC_SYSTEM: 'rpc.system',\n    /**\n    * The full (logical) name of the service being called, including its package name, if applicable.\n    *\n    * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n    */\n    RPC_SERVICE: 'rpc.service',\n    /**\n    * The name of the (logical) method being called, must be equal to the $method part in the span name.\n    *\n    * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n    */\n    RPC_METHOD: 'rpc.method',\n    /**\n    * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n    */\n    RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n    /**\n    * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n    */\n    RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n    /**\n    * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n    */\n    RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n    /**\n    * `error.code` property of response if it is an error response.\n    */\n    RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n    /**\n    * `error.message` property of response if it is an error response.\n    */\n    RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n    /**\n    * Whether this is a received or sent message.\n    */\n    MESSAGE_TYPE: 'message.type',\n    /**\n    * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n    *\n    * Note: This way we guarantee that the values will be consistent between different implementations.\n    */\n    MESSAGE_ID: 'message.id',\n    /**\n    * Compressed size of the message in bytes.\n    */\n    MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n    /**\n    * Uncompressed size of the message in bytes.\n    */\n    MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\nexport var DbSystemValues = {\n    /** Some other SQL database. Fallback only. See notes. */\n    OTHER_SQL: 'other_sql',\n    /** Microsoft SQL Server. */\n    MSSQL: 'mssql',\n    /** MySQL. */\n    MYSQL: 'mysql',\n    /** Oracle Database. */\n    ORACLE: 'oracle',\n    /** IBM Db2. */\n    DB2: 'db2',\n    /** PostgreSQL. */\n    POSTGRESQL: 'postgresql',\n    /** Amazon Redshift. */\n    REDSHIFT: 'redshift',\n    /** Apache Hive. */\n    HIVE: 'hive',\n    /** Cloudscape. */\n    CLOUDSCAPE: 'cloudscape',\n    /** HyperSQL DataBase. */\n    HSQLDB: 'hsqldb',\n    /** Progress Database. */\n    PROGRESS: 'progress',\n    /** SAP MaxDB. */\n    MAXDB: 'maxdb',\n    /** SAP HANA. */\n    HANADB: 'hanadb',\n    /** Ingres. */\n    INGRES: 'ingres',\n    /** FirstSQL. */\n    FIRSTSQL: 'firstsql',\n    /** EnterpriseDB. */\n    EDB: 'edb',\n    /** InterSystems Caché. */\n    CACHE: 'cache',\n    /** Adabas (Adaptable Database System). */\n    ADABAS: 'adabas',\n    /** Firebird. */\n    FIREBIRD: 'firebird',\n    /** Apache Derby. */\n    DERBY: 'derby',\n    /** FileMaker. */\n    FILEMAKER: 'filemaker',\n    /** Informix. */\n    INFORMIX: 'informix',\n    /** InstantDB. */\n    INSTANTDB: 'instantdb',\n    /** InterBase. */\n    INTERBASE: 'interbase',\n    /** MariaDB. */\n    MARIADB: 'mariadb',\n    /** Netezza. */\n    NETEZZA: 'netezza',\n    /** Pervasive PSQL. */\n    PERVASIVE: 'pervasive',\n    /** PointBase. */\n    POINTBASE: 'pointbase',\n    /** SQLite. */\n    SQLITE: 'sqlite',\n    /** Sybase. */\n    SYBASE: 'sybase',\n    /** Teradata. */\n    TERADATA: 'teradata',\n    /** Vertica. */\n    VERTICA: 'vertica',\n    /** H2. */\n    H2: 'h2',\n    /** ColdFusion IMQ. */\n    COLDFUSION: 'coldfusion',\n    /** Apache Cassandra. */\n    CASSANDRA: 'cassandra',\n    /** Apache HBase. */\n    HBASE: 'hbase',\n    /** MongoDB. */\n    MONGODB: 'mongodb',\n    /** Redis. */\n    REDIS: 'redis',\n    /** Couchbase. */\n    COUCHBASE: 'couchbase',\n    /** CouchDB. */\n    COUCHDB: 'couchdb',\n    /** Microsoft Azure Cosmos DB. */\n    COSMOSDB: 'cosmosdb',\n    /** Amazon DynamoDB. */\n    DYNAMODB: 'dynamodb',\n    /** Neo4j. */\n    NEO4J: 'neo4j',\n    /** Apache Geode. */\n    GEODE: 'geode',\n    /** Elasticsearch. */\n    ELASTICSEARCH: 'elasticsearch',\n    /** Memcached. */\n    MEMCACHED: 'memcached',\n    /** CockroachDB. */\n    COCKROACHDB: 'cockroachdb',\n};\nexport var DbCassandraConsistencyLevelValues = {\n    /** all. */\n    ALL: 'all',\n    /** each_quorum. */\n    EACH_QUORUM: 'each_quorum',\n    /** quorum. */\n    QUORUM: 'quorum',\n    /** local_quorum. */\n    LOCAL_QUORUM: 'local_quorum',\n    /** one. */\n    ONE: 'one',\n    /** two. */\n    TWO: 'two',\n    /** three. */\n    THREE: 'three',\n    /** local_one. */\n    LOCAL_ONE: 'local_one',\n    /** any. */\n    ANY: 'any',\n    /** serial. */\n    SERIAL: 'serial',\n    /** local_serial. */\n    LOCAL_SERIAL: 'local_serial',\n};\nexport var FaasTriggerValues = {\n    /** A response to some data source operation such as a database or filesystem read/write. */\n    DATASOURCE: 'datasource',\n    /** To provide an answer to an inbound HTTP request. */\n    HTTP: 'http',\n    /** A function is set to be executed when messages are sent to a messaging system. */\n    PUBSUB: 'pubsub',\n    /** A function is scheduled to be executed regularly. */\n    TIMER: 'timer',\n    /** If none of the others apply. */\n    OTHER: 'other',\n};\nexport var FaasDocumentOperationValues = {\n    /** When a new object is created. */\n    INSERT: 'insert',\n    /** When an object is modified. */\n    EDIT: 'edit',\n    /** When an object is deleted. */\n    DELETE: 'delete',\n};\nexport var FaasInvokedProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var NetTransportValues = {\n    /** ip_tcp. */\n    IP_TCP: 'ip_tcp',\n    /** ip_udp. */\n    IP_UDP: 'ip_udp',\n    /** Another IP-based protocol. */\n    IP: 'ip',\n    /** Unix Domain socket. See below. */\n    UNIX: 'unix',\n    /** Named or anonymous pipe. See note below. */\n    PIPE: 'pipe',\n    /** In-process communication. */\n    INPROC: 'inproc',\n    /** Something else (non IP-based). */\n    OTHER: 'other',\n};\nexport var NetHostConnectionTypeValues = {\n    /** wifi. */\n    WIFI: 'wifi',\n    /** wired. */\n    WIRED: 'wired',\n    /** cell. */\n    CELL: 'cell',\n    /** unavailable. */\n    UNAVAILABLE: 'unavailable',\n    /** unknown. */\n    UNKNOWN: 'unknown',\n};\nexport var NetHostConnectionSubtypeValues = {\n    /** GPRS. */\n    GPRS: 'gprs',\n    /** EDGE. */\n    EDGE: 'edge',\n    /** UMTS. */\n    UMTS: 'umts',\n    /** CDMA. */\n    CDMA: 'cdma',\n    /** EVDO Rel. 0. */\n    EVDO_0: 'evdo_0',\n    /** EVDO Rev. A. */\n    EVDO_A: 'evdo_a',\n    /** CDMA2000 1XRTT. */\n    CDMA2000_1XRTT: 'cdma2000_1xrtt',\n    /** HSDPA. */\n    HSDPA: 'hsdpa',\n    /** HSUPA. */\n    HSUPA: 'hsupa',\n    /** HSPA. */\n    HSPA: 'hspa',\n    /** IDEN. */\n    IDEN: 'iden',\n    /** EVDO Rev. B. */\n    EVDO_B: 'evdo_b',\n    /** LTE. */\n    LTE: 'lte',\n    /** EHRPD. */\n    EHRPD: 'ehrpd',\n    /** HSPAP. */\n    HSPAP: 'hspap',\n    /** GSM. */\n    GSM: 'gsm',\n    /** TD-SCDMA. */\n    TD_SCDMA: 'td_scdma',\n    /** IWLAN. */\n    IWLAN: 'iwlan',\n    /** 5G NR (New Radio). */\n    NR: 'nr',\n    /** 5G NRNSA (New Radio Non-Standalone). */\n    NRNSA: 'nrnsa',\n    /** LTE CA. */\n    LTE_CA: 'lte_ca',\n};\nexport var HttpFlavorValues = {\n    /** HTTP 1.0. */\n    HTTP_1_0: '1.0',\n    /** HTTP 1.1. */\n    HTTP_1_1: '1.1',\n    /** HTTP 2. */\n    HTTP_2_0: '2.0',\n    /** SPDY protocol. */\n    SPDY: 'SPDY',\n    /** QUIC protocol. */\n    QUIC: 'QUIC',\n};\nexport var MessagingDestinationKindValues = {\n    /** A message sent to a queue. */\n    QUEUE: 'queue',\n    /** A message sent to a topic. */\n    TOPIC: 'topic',\n};\nexport var MessagingOperationValues = {\n    /** receive. */\n    RECEIVE: 'receive',\n    /** process. */\n    PROCESS: 'process',\n};\nexport var RpcGrpcStatusCodeValues = {\n    /** OK. */\n    OK: 0,\n    /** CANCELLED. */\n    CANCELLED: 1,\n    /** UNKNOWN. */\n    UNKNOWN: 2,\n    /** INVALID_ARGUMENT. */\n    INVALID_ARGUMENT: 3,\n    /** DEADLINE_EXCEEDED. */\n    DEADLINE_EXCEEDED: 4,\n    /** NOT_FOUND. */\n    NOT_FOUND: 5,\n    /** ALREADY_EXISTS. */\n    ALREADY_EXISTS: 6,\n    /** PERMISSION_DENIED. */\n    PERMISSION_DENIED: 7,\n    /** RESOURCE_EXHAUSTED. */\n    RESOURCE_EXHAUSTED: 8,\n    /** FAILED_PRECONDITION. */\n    FAILED_PRECONDITION: 9,\n    /** ABORTED. */\n    ABORTED: 10,\n    /** OUT_OF_RANGE. */\n    OUT_OF_RANGE: 11,\n    /** UNIMPLEMENTED. */\n    UNIMPLEMENTED: 12,\n    /** INTERNAL. */\n    INTERNAL: 13,\n    /** UNAVAILABLE. */\n    UNAVAILABLE: 14,\n    /** DATA_LOSS. */\n    DATA_LOSS: 15,\n    /** UNAUTHENTICATED. */\n    UNAUTHENTICATED: 16,\n};\nexport var MessageTypeValues = {\n    /** sent. */\n    SENT: 'SENT',\n    /** received. */\n    RECEIVED: 'RECEIVED',\n};\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n    * Name of the cloud provider.\n    */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n    * The cloud account ID the resource is assigned to.\n    */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n    * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n    */\n    CLOUD_REGION: 'cloud.region',\n    /**\n    * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n    *\n    * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n    */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n    * The cloud platform in use.\n    *\n    * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n    */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n    * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n    */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n    * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n    */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n    * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n    */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n    * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n    */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n    * The task definition family this task definition is a member of.\n    */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n    * The revision for this task definition.\n    */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n    * The ARN of an EKS cluster.\n    */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n    * The name(s) of the AWS log group(s) an application is writing to.\n    *\n    * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n    */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n    * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n    *\n    * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n    */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n    * The name(s) of the AWS log stream(s) an application is writing to.\n    */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n    * The ARN(s) of the AWS log stream(s).\n    *\n    * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n    */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n    * Container name.\n    */\n    CONTAINER_NAME: 'container.name',\n    /**\n    * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n    */\n    CONTAINER_ID: 'container.id',\n    /**\n    * The container runtime managing this container.\n    */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n    * Name of the image the container was built on.\n    */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n    * Container image tag.\n    */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n    * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n    */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n    * A unique identifier representing the device.\n    *\n    * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n    */\n    DEVICE_ID: 'device.id',\n    /**\n    * The model identifier for the device.\n    *\n    * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n    */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n    * The marketing name for the device model.\n    *\n    * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n    */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n    * The name of the single function that this runtime instance executes.\n    *\n    * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n    */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n    * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n    *\n    * Note: * **AWS Lambda:** Use the (full) log stream name.\n    */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n    * The amount of memory available to the serverless function in MiB.\n    *\n    * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n    */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n    * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n    */\n    HOST_ID: 'host.id',\n    /**\n    * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n    */\n    HOST_NAME: 'host.name',\n    /**\n    * Type of host. For Cloud, this must be the machine type.\n    */\n    HOST_TYPE: 'host.type',\n    /**\n    * The CPU architecture the host system is running on.\n    */\n    HOST_ARCH: 'host.arch',\n    /**\n    * Name of the VM image or OS install the host was instantiated from.\n    */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n    * VM image ID. For Cloud, this value is from the provider.\n    */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n    * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n    */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n    * The name of the cluster.\n    */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n    * The name of the Node.\n    */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n    * The UID of the Node.\n    */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n    * The name of the namespace that the pod is running in.\n    */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n    * The UID of the Pod.\n    */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n    * The name of the Pod.\n    */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n    * The name of the Container in a Pod template.\n    */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n    * The UID of the ReplicaSet.\n    */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n    * The name of the ReplicaSet.\n    */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n    * The UID of the Deployment.\n    */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n    * The name of the Deployment.\n    */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n    * The UID of the StatefulSet.\n    */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n    * The name of the StatefulSet.\n    */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n    * The UID of the DaemonSet.\n    */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n    * The name of the DaemonSet.\n    */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n    * The UID of the Job.\n    */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n    * The name of the Job.\n    */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n    * The UID of the CronJob.\n    */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n    * The name of the CronJob.\n    */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n    * The operating system type.\n    */\n    OS_TYPE: 'os.type',\n    /**\n    * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n    */\n    OS_DESCRIPTION: 'os.description',\n    /**\n    * Human readable operating system name.\n    */\n    OS_NAME: 'os.name',\n    /**\n    * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n    */\n    OS_VERSION: 'os.version',\n    /**\n    * Process identifier (PID).\n    */\n    PROCESS_PID: 'process.pid',\n    /**\n    * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n    * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n    */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n    * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n    */\n    PROCESS_COMMAND: 'process.command',\n    /**\n    * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n    */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n    * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n    */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n    * The username of the user that owns the process.\n    */\n    PROCESS_OWNER: 'process.owner',\n    /**\n    * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n    */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n    * The version of the runtime of this process, as returned by the runtime without modification.\n    */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n    * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n    */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n    * Logical name of the service.\n    *\n    * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n    */\n    SERVICE_NAME: 'service.name',\n    /**\n    * A namespace for `service.name`.\n    *\n    * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n    */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n    * The string ID of the service instance.\n    *\n    * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n    */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n    * The version string of the service API or implementation.\n    */\n    SERVICE_VERSION: 'service.version',\n    /**\n    * The name of the telemetry SDK as defined above.\n    */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n    * The language of the telemetry SDK.\n    */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n    * The version string of the telemetry SDK.\n    */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n    * The version string of the auto instrumentation agent, if used.\n    */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n    * The name of the web engine.\n    */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n    * The version of the web engine.\n    */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n    * Additional description of the web engine (e.g. detailed version and edition information).\n    */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*!\n * Copyright © 2018 Splunk Inc.\n * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or\n * in part without a valid written license from Splunk Inc. is PROHIBITED.\n */\n/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 579:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"K8\": () => (/* binding */ AUTO_ATTRIBUTES),\n/* harmony export */   \"Lg\": () => (/* binding */ MANUAL_ATTRIBUTES),\n/* harmony export */   \"bS\": () => (/* binding */ LIB_BUILD_VERSION)\n/* harmony export */ });\n/**\n * note: Typescript doesn't know about the webpack defined variable,\n * so it needs to be declared and exported in order to be used in the other places.\n */\nconst LIB_BUILD_VERSION = \"1.19.0\";\n\n/**\n * Default attributes that should be attached to every tag that is manually reported\n */\n\nconst MANUAL_ATTRIBUTES = {\n  'splunk.telemetryType': 'manual'\n};\n/**\n * Default attributes that should be attached to every tag that is autocaptured\n */\n\nconst AUTO_ATTRIBUTES = {\n  'splunk.telemetryType': 'autocapture'\n};\n\n/***/ }),\n\n/***/ 851:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"H\": () => (/* binding */ createSpanProcessor)\n});\n\n;// CONCATENATED MODULE: external \"@opentelemetry/sdk-trace-base\"\nconst sdk_trace_base_namespaceObject = require(\"@opentelemetry/sdk-trace-base\");\n// EXTERNAL MODULE: external \"@babel/runtime/helpers/defineProperty\"\nvar defineProperty_ = __webpack_require__(195);\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);\n;// CONCATENATED MODULE: external \"@opentelemetry/core\"\nconst core_namespaceObject = require(\"@opentelemetry/core\");\n;// CONCATENATED MODULE: external \"@opentelemetry/exporter-zipkin/build/src/transform.js\"\nconst transform_js_namespaceObject = require(\"@opentelemetry/exporter-zipkin/build/src/transform.js\");\n// EXTERNAL MODULE: ./src/attributes/index.ts\nvar attributes = __webpack_require__(579);\n;// CONCATENATED MODULE: ./src/opentelemetry-x/exporters/HecExporter.ts\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n/**\n * Some of the functionality in this file was copied from zipkin.js at\n * https://github.com/signalfx/splunk-otel-js-web/blob/03be3c245af5a9092293554f6c6b1fb6bde16b3f/src/zipkin.js\n * with slight modifications to fit this purpose.\n */\nconst MAX_VALUE_LIMIT = 4096;\nconst SPAN_RATE_LIMIT_PERIOD = 30000; // millis, sweep to clear out span counts\n\nconst MAX_SPANS_PER_PERIOD_PER_COMPONENT = 100;\nconst statusCodeTagName = 'ot.status_code';\nconst statusDescriptionTagName = 'ot.status_description';\n\nfunction limitLen(s, cap) {\n  if (s.length > cap) {\n    return s.substring(0, cap);\n  }\n\n  return s;\n}\n\nfunction logEventFromSpan(span, appName) {\n  return _objectSpread(_objectSpread({}, span), {}, {\n    tags: _objectSpread(_objectSpread({}, attributes/* AUTO_ATTRIBUTES */.K8), span.tags),\n    severity: 'info',\n    source: appName\n  });\n}\n/**\n * Truncate span tags to MAX_VALUE_LIMIT.\n * Note: This mutates the object that gets passed in.\n * @param zspan\n */\n\n\nfunction truncate(zspan) {\n  // eslint-disable-next-line no-param-reassign\n  zspan.name = limitLen(zspan.name, MAX_VALUE_LIMIT);\n  Object.entries(zspan.tags).forEach(tag => {\n    const key = tag[0];\n    const value = \"\" + tag[1]; // eslint-disable-next-line no-param-reassign\n\n    zspan.tags[key] = limitLen(value, MAX_VALUE_LIMIT);\n  });\n}\n\nfunction modZipkinSpan(span) {\n  // this trims off some stuff added by the default zipkin exporter.  Cleaner than copy+pasting the code\n  const modifiedSpan = span;\n  modifiedSpan.resource = {\n    attributes: {}\n  };\n  const zspan = (0,transform_js_namespaceObject.toZipkinSpan)(modifiedSpan, 'browser', statusCodeTagName, statusDescriptionTagName);\n  delete zspan.localEndpoint;\n  truncate(zspan);\n  return zspan;\n}\n\nclass LogExporter {\n  constructor(appName, obfuscator, sendSpans) {\n    this.appName = appName;\n    this.obfuscator = obfuscator;\n    this.sendSpans = sendSpans;\n    this.spanCounts = {};\n    this.rateLimiterHandle = setInterval(() => {\n      this.spanCounts = {};\n    }, SPAN_RATE_LIMIT_PERIOD);\n  }\n\n  filter(span) {\n    const component = span.attributes && span.attributes.component ? span.attributes.component : 'unknown';\n\n    if (!this.spanCounts[component]) {\n      this.spanCounts[component] = 0;\n    }\n\n    return (this.spanCounts[component] += 1) < MAX_SPANS_PER_PERIOD_PER_COMPONENT;\n  }\n\n  export(spans, resultCallback) {\n    // eslint-disable-next-line dot-notation\n    if (__webpack_require__.g.window && __webpack_require__.g.window['requestIdleCallback']) {\n      // eslint-disable-next-line\n      __webpack_require__.g.window['requestIdleCallback'](() => {\n        this.doExport(spans, resultCallback);\n      });\n      return;\n    }\n\n    this.doExport(spans, resultCallback);\n  }\n\n  doExport(spans, resultCallback) {\n    try {\n      // Transform the spans to match a modified zipkin format, which can be converted to JSON and reported.\n      const transformedSpans = spans.filter(span => this.filter(span)).map(span => {\n        return {\n          // NOTE: some properties in Span are not enumerable, and as a result cannot be spread or Object.assign-ed\n          name: this.obfuscator.obfuscateValue(span.name),\n          kind: span.kind,\n          spanContext: span.spanContext.bind(span),\n          parentSpanId: span.parentSpanId,\n          startTime: span.startTime,\n          endTime: span.endTime,\n          status: span.status,\n          links: span.links,\n          events: span.events,\n          duration: span.duration,\n          ended: span.ended,\n          instrumentationLibrary: span.instrumentationLibrary,\n          resource: span.resource,\n          attributes: this.obfuscator.redactAttributes(span.attributes)\n        };\n      }).map(span => modZipkinSpan(span));\n      /**\n       * Convert the spans into an array of HEC-compliant JSONs, like:\n       * [{event: ...}, {event: ...}]\n       */\n\n      const spansJsonArray = transformedSpans.map(span => {\n        return logEventFromSpan(span, this.appName);\n      });\n      /**\n       * Uncomment to test sending a single event.\n       */\n      // const span = transformedSpans[0];\n      // const event = { event: { ...span } };\n      // const spansJson = JSON.stringify(event);\n      // const dataArray = JSON.stringify(spansJsonArray);\n\n      this.sendSpans(spansJsonArray);\n      resultCallback({\n        code: core_namespaceObject.ExportResultCode.SUCCESS\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Could not send telemetry data from the HECExporter');\n    }\n  }\n\n  async shutdown() {\n    clearInterval(this.rateLimiterHandle);\n    return Promise.resolve();\n  }\n\n}\n;// CONCATENATED MODULE: external \"@splunk/splunk-utils/config\"\nconst config_namespaceObject = require(\"@splunk/splunk-utils/config\");\n;// CONCATENATED MODULE: ./src/opentelemetry-x/exporters/ECExporter.ts\n\n\nclass ECExporter {\n  /**\n   * Method that returns and sets the splunkweb csrf token\n   * @returns token\n   */\n\n  /**\n   * Method that returns and sets the request URL\n   */\n  // setting URL and Token, when Class is initiated\n  constructor() {\n    defineProperty_default()(this, \"setToken\", () => {\n      // token in cookies it consists of splunkweb_csrf_token_ and a portNumber from config\n      const EC_TOKEN_NAME = \"splunkweb_csrf_token_\" + config_namespaceObject.portNumber;\n      let cookieValue = null; // checking if there are any cookies\n\n      if (document.cookie && document.cookie !== '') {\n        // getting list of all the cookies, using coma space as in MDN docs\n        const cookies = document.cookie.split('; ');\n\n        for (let i = 0; i < cookies.length; i += 1) {\n          try {\n            // trying to decode cookie\n            const cookie = decodeURIComponent(cookies[i]).trim(); // Does this cookie string begin with the name we want?\n\n            if (cookie.substring(0, EC_TOKEN_NAME.length + 1) === EC_TOKEN_NAME + \"=\") {\n              cookieValue = cookie.substring(EC_TOKEN_NAME.length + 1);\n              break;\n            }\n          } catch (e) {\n            // if we can't decode, we are going to the next value\n            // eslint-disable-next-line no-console\n            console.warn(e.message);\n          }\n        }\n      }\n\n      this.token = cookieValue;\n      return cookieValue;\n    });\n\n    defineProperty_default()(this, \"setUrl\", () => {\n      const SPLUNKD_TELEMETRY_ENDPOINT = \"/en-US/splunkd/__raw/servicesNS/nobody/splunk_instrumentation/telemetry-metric\"; // getting curent domain\n\n      const baseUrl = window.location.origin; // creating a telemetry endpoint url\n\n      const url = new URL(SPLUNKD_TELEMETRY_ENDPOINT, baseUrl).toString(); // setting url value\n\n      this.url = url;\n      return url;\n    });\n\n    defineProperty_default()(this, \"getUrl\", () => {\n      if (this.url) {\n        return this.url;\n      } // if for some reason we were not able to set value during the init, we are setting it one more time\n\n\n      return this.setUrl();\n    });\n\n    defineProperty_default()(this, \"getToken\", () => {\n      if (this.token) {\n        return this.token;\n      } // if for some reason we were not able to set value during the init, we are setting it one more time\n\n\n      return this.setToken();\n    });\n\n    defineProperty_default()(this, \"setHeaders\", request => {\n      const formToken = this.getToken();\n      request.setRequestHeader('Content-Type', 'application/json');\n      request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      request.setRequestHeader('X-Splunk-Form-Key', formToken);\n    });\n\n    defineProperty_default()(this, \"sendSpans\", data => {\n      const xhr = new XMLHttpRequest();\n      const url = this.getUrl();\n      xhr.open('POST', url);\n      this.setHeaders(xhr);\n      const dataToSend = JSON.stringify(data.map(d => ({\n        type: 'event',\n        component: 'otel',\n        optInRequired: 0,\n        visibility: ['anonymous', 'support'],\n        data: d\n      })));\n      xhr.send(dataToSend);\n    });\n\n    this.setUrl();\n    this.setToken();\n  }\n  /**\n   * Method that returns url if it exists, or sets it and returns is if it doesn't exist\n   * @returns url\n   */\n\n\n}\n// EXTERNAL MODULE: ./src/splunk-otel-plugin/createSplunkOtelPlugin.ts + 20 modules\nvar createSplunkOtelPlugin = __webpack_require__(42);\n;// CONCATENATED MODULE: ./src/opentelemetry-x/exporters/SCSExporter.ts\n\n\nconst CONTENT_TYPE = 'application/json';\nclass SCSExporter {\n  /**\n   * Method that returns and sets token\n   * @returns token\n   */\n\n  /**\n   * Method that returns and sets tenant\n   * @returns tenant\n   */\n\n  /**\n   * Method that returns and sets region\n   * @returns region\n   */\n  constructor(_environment) {\n    defineProperty_default()(this, \"setToken\", () => {\n      const tokenStorage = window.sessionStorage.getItem('splunk-token-storage');\n\n      if (tokenStorage) {\n        const tenantInfo = tokenStorage && JSON.parse(tokenStorage).tenant;\n        const tenant = tenantInfo && Object.keys(tenantInfo)[0];\n        const token = tenant && tenantInfo[tenant].accessToken;\n        this.token = token;\n        return token;\n      }\n\n      return '';\n    });\n\n    defineProperty_default()(this, \"setTenant\", () => {\n      const tokenStorage = window.sessionStorage.getItem('splunk-token-storage');\n\n      if (tokenStorage) {\n        const tenantInfo = tokenStorage && JSON.parse(tokenStorage).tenant;\n        const tenant = tenantInfo && Object.keys(tenantInfo)[0];\n        this.tenant = tenant;\n        return tenant;\n      }\n\n      return '';\n    });\n\n    defineProperty_default()(this, \"setRegion\", () => {\n      const userParamsStorage = window.sessionStorage.getItem('splunk-user-params-storage');\n\n      if (userParamsStorage) {\n        const {\n          region\n        } = userParamsStorage && JSON.parse(userParamsStorage);\n        this.region = region;\n        return region;\n      }\n\n      return '';\n    });\n\n    defineProperty_default()(this, \"getToken\", () => {\n      if (this.token) {\n        return this.token;\n      } // if for some reason we were not able to set value during the init, we are setting it one more time\n\n\n      return this.setToken();\n    });\n\n    defineProperty_default()(this, \"getTenant\", () => {\n      if (this.tenant) {\n        return this.tenant;\n      } // if for some reason we were not able to set value during the init, we are setting it one more time\n\n\n      return this.setTenant();\n    });\n\n    defineProperty_default()(this, \"getRegion\", () => {\n      if (this.region) {\n        return this.region;\n      } // if for some reason we were not able to set value during the init, we are setting it one more time\n\n\n      return this.setRegion();\n    });\n\n    defineProperty_default()(this, \"getEnvironment\", () => {\n      if (this.environment) {\n        return this.environment;\n      } // if for some reason we were not able to set value during the init, we are assuming that we are in prod\n\n\n      return 'prod';\n    });\n\n    defineProperty_default()(this, \"setHeaders\", request => {\n      const token = this.getToken();\n      const bearerToken = \"Bearer \" + token;\n      const tenant = this.getTenant();\n      const region = this.getRegion();\n      const environment = this.getEnvironment(); // all this headers are required by Data Analytics Service\n\n      request.setRequestHeader('x-de-token', bearerToken);\n      request.setRequestHeader('x-de-tenant', tenant);\n      request.setRequestHeader('x-de-region', \"region-\" + region);\n      request.setRequestHeader('x-de-environment', environment);\n    });\n\n    defineProperty_default()(this, \"sendSpans\", data => {\n      const xhr = new XMLHttpRequest();\n      const url = (0,createSplunkOtelPlugin/* getCollectorURL */.xY)(this.environment);\n      xhr.open('POST', url);\n      this.setHeaders(xhr);\n      xhr.setRequestHeader('Content-Type', CONTENT_TYPE);\n      xhr.send(JSON.stringify(data));\n    });\n\n    this.setToken();\n    this.setTenant();\n    this.setRegion();\n    this.environment = _environment;\n  }\n  /**\n   * Method that returns the token if it exists, or sets it and returns is if it doesn't exist\n   * @returns token\n   */\n\n\n}\n// EXTERNAL MODULE: external \"@splunk/skinny-web-telemetry\"\nvar skinny_web_telemetry_ = __webpack_require__(578);\n;// CONCATENATED MODULE: ./src/opentelemetry-x/exporters/POCExporter.ts\n\n\n\nconst POCExporter_CONTENT_TYPE = 'application/json';\nclass POCExporter_SCSExporter {\n  /**\n   * Method that returns and sets token\n   * @returns token\n   */\n  constructor(appName, _environment) {\n    defineProperty_default()(this, \"token\", null);\n\n    defineProperty_default()(this, \"appName\", null);\n\n    defineProperty_default()(this, \"environment\", 'prod');\n\n    defineProperty_default()(this, \"setToken\", () => {\n      const obfuscatedToken = (0,skinny_web_telemetry_.obfuscate)(this.appName);\n      this.token = obfuscatedToken;\n      return obfuscatedToken;\n    });\n\n    defineProperty_default()(this, \"getToken\", () => {\n      if (this.token) {\n        return this.token;\n      } // if for some reason we were not able to set value during the init, we are setting it one more time\n\n\n      return this.setToken();\n    });\n\n    defineProperty_default()(this, \"getEnvironment\", () => {\n      if (this.environment) {\n        return this.environment;\n      } // if for some reason we were not able to set value during the init, we assuming we are in prod\n\n\n      return 'prod';\n    });\n\n    defineProperty_default()(this, \"setHeaders\", request => {\n      const token = this.getToken();\n      const bearerToken = \"Bearer \" + token;\n      const environment = this.getEnvironment(); // all this headers are required by Data Analytics Service\n\n      request.setRequestHeader('x-de-token', bearerToken);\n      request.setRequestHeader('x-de-tenant', 'poc');\n      request.setRequestHeader('x-de-region', 'poc');\n      request.setRequestHeader('x-de-environment', environment);\n    });\n\n    defineProperty_default()(this, \"sendSpans\", data => {\n      if (this.environment !== 'play') {\n        // Silently disabling POC telemetry in all the environments except playground\n        return;\n      }\n\n      const xhr = new XMLHttpRequest();\n      const url = (0,createSplunkOtelPlugin/* getPOCCollectorURL */.G6)(this.environment);\n      xhr.open('POST', url);\n      this.setHeaders(xhr);\n      xhr.setRequestHeader('Content-Type', POCExporter_CONTENT_TYPE);\n      xhr.send(JSON.stringify(data));\n    });\n\n    this.appName = appName;\n    this.environment = _environment;\n    this.setToken();\n  }\n  /**\n   * Method that returns the token if it exists, or sets it and returns is if it doesn't exist\n   * @returns token\n   */\n\n\n}\n;// CONCATENATED MODULE: ./src/opentelemetry-x/exporters/createSpanProcessor.ts\n\n\n\n\n\n// by default we are sending 20 events at once\nconst DEFAULT_QUEUE_SIZE = 20; // by default we are sending data every 5 seconds\n\nconst DEFAULT_DELAY_INTERVAL = 5000;\nfunction createSpanProcessor(appType, appName, obfuscator, environment) {\n  const isECEnv = appType === 'ec';\n  const isSCSEnv = appType === 'scs';\n  const isPOCEnv = !appType || appType === 'poc';\n  let Exporter = {\n    // eslint-disable-next-line\n    sendSpans: data => {\n      // eslint-disable-next-line no-console\n      console.warn('Telemetry is disabled');\n    }\n  };\n  let queueSize = DEFAULT_QUEUE_SIZE;\n  let delay = DEFAULT_DELAY_INTERVAL;\n\n  if (isECEnv) {\n    Exporter = new ECExporter(); // Splunkd endpoint can't process more than 3 events at once\n    // There is a 9kb restriction for splunkd telemetry endpoint\n    // I tried to send more than 3 events at once, but I would usually get an error\n\n    queueSize = 3; // Usually when app is loading for the first time, there are around 30 events, that are generated,\n    // If we would send 3 events every 5 seconds, we would have to wait for a minute before we see any other event\n    // To be able to debug better and avoid loosing events, we are going to make requests in ec apps more frequently,\n    // we are going to make requests every second\n\n    delay = 1000;\n  } else if (isSCSEnv) {\n    Exporter = new SCSExporter(environment);\n  } else if (isPOCEnv) {\n    Exporter = new POCExporter_SCSExporter(appName, environment);\n  }\n\n  const exporter = new LogExporter(appName, obfuscator, Exporter.sendSpans);\n  const spanProcessor = new sdk_trace_base_namespaceObject.BatchSpanProcessor(exporter, {\n    // send spans as soon as we have this many\n    maxExportBatchSize: queueSize,\n    // send spans if we have buffered spans older than this\n    scheduledDelayMillis: delay\n  });\n  return spanProcessor;\n}\n\n/***/ }),\n\n/***/ 37:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"H\": () => (/* reexport safe */ _createSpanProcessor__WEBPACK_IMPORTED_MODULE_0__.H)\n/* harmony export */ });\n/* harmony import */ var _createSpanProcessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(851);\n\n\n/***/ }),\n\n/***/ 42:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"DK\": () => (/* binding */ createSplunkOtelPlugin),\n  \"xY\": () => (/* binding */ getCollectorURL),\n  \"G6\": () => (/* binding */ getPOCCollectorURL)\n});\n\n// EXTERNAL MODULE: external \"@splunk/skinny-web-telemetry\"\nvar skinny_web_telemetry_ = __webpack_require__(578);\n;// CONCATENATED MODULE: external \"@opentelemetry/instrumentation\"\nconst instrumentation_namespaceObject = require(\"@opentelemetry/instrumentation\");\n;// CONCATENATED MODULE: external \"@opentelemetry/instrumentation-document-load\"\nconst instrumentation_document_load_namespaceObject = require(\"@opentelemetry/instrumentation-document-load\");\n;// CONCATENATED MODULE: external \"@opentelemetry/instrumentation-user-interaction\"\nconst instrumentation_user_interaction_namespaceObject = require(\"@opentelemetry/instrumentation-user-interaction\");\n// EXTERNAL MODULE: external \"@babel/runtime/helpers/defineProperty\"\nvar defineProperty_ = __webpack_require__(195);\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);\n;// CONCATENATED MODULE: ./src/opentelemetry-x/instrumentation/scs/index.ts\nfunction addErrorDetailsToSpan(span, body, shouldRemovePII) {\n  const {\n    code,\n    message,\n    details,\n    moreInfo\n  } = body;\n\n  if (code) {\n    span.setAttribute('splunk.rest.code', code);\n  }\n  /**\n   * The code field does not contain PII, but the rest may, so do not add them if we need obfuscation.\n   */\n\n\n  if (shouldRemovePII) {\n    return;\n  }\n\n  if (details) {\n    span.setAttribute('splunk.rest.details', JSON.stringify(details));\n  }\n\n  if (message) {\n    span.setAttribute('splunk.rest.message', message);\n  }\n\n  if (moreInfo) {\n    span.setAttribute('splunk.rest.moreinfo', moreInfo);\n  }\n}\n;// CONCATENATED MODULE: external \"@opentelemetry/instrumentation-xml-http-request\"\nconst instrumentation_xml_http_request_namespaceObject = require(\"@opentelemetry/instrumentation-xml-http-request\");\n;// CONCATENATED MODULE: external \"@opentelemetry/instrumentation-fetch\"\nconst instrumentation_fetch_namespaceObject = require(\"@opentelemetry/instrumentation-fetch\");\n;// CONCATENATED MODULE: ./src/opentelemetry-x/instrumentation/temporary/servertiming.js\n/* eslint-disable no-restricted-syntax */\n\n/*\nCopyright 2020 Splunk Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nfunction addMatchToSpan(match, span) {\n  if (match && match[1] && match[2]) {\n    const traceId = match[1];\n    const spanId = match[2];\n    span.setAttribute('link.traceId', traceId);\n    span.setAttribute('link.spanId', spanId);\n  }\n}\n\nconst HeaderRegex = new RegExp('traceparent;desc=\"00-([0-9a-f]{32})-([0-9a-f]{16})-01\"');\nfunction captureTraceParent(serverTimingValues, span) {\n  // getResponseHeader returns multiple Server-Timing headers concat with ', ' (note space)\n  // fetch returns concat with ','.\n  // split the difference\n  for (let header of serverTimingValues.split(',')) {\n    header = header.trim();\n    const match = header.match(HeaderRegex);\n    addMatchToSpan(match, span);\n  }\n}\nconst ValueRegex = (/* unused pure expression or super */ null && (new RegExp('00-([0-9a-f]{32})-([0-9a-f]{16})-01')));\nfunction captureTraceParentFromPerformanceEntries(entries, span) {\n  if (!entries.serverTiming) {\n    return;\n  }\n\n  for (const st of entries.serverTiming) {\n    if (st.name === 'traceparent' && st.description) {\n      const match = st.description.match(ValueRegex);\n      addMatchToSpan(match, span);\n    }\n  }\n}\n;// CONCATENATED MODULE: ./src/opentelemetry-x/instrumentation/temporary/xhrfetch.js\n/* eslint-disable func-names */\n\n/* eslint-disable prefer-arrow-callback */\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable max-classes-per-file */\n\n/*\nCopyright 2020 Splunk Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n\n\n\n/**\n * Adds more details to the span if the response is a failure coming from an SCS server and follows the SCS error format.\n * (see http://go/ssc-errors)\n * This function is new -- added because the version of @opentelemetry/instrumentation-xml-http-request that supports\n * applyCustomAttributesOnSpan has not been published yet.\n * @param {*} xhr\n * @param {*} span\n */\n\nfunction maybeAddSCSResponse(xhr, shouldRemovePII, span) {\n  if (xhr.readyState === XMLHttpRequest.DONE) {\n    if (xhr.status >= 400) {\n      const body = JSON.parse(xhr.response);\n      addErrorDetailsToSpan(span, body, shouldRemovePII);\n    }\n  }\n}\n\nclass SplunkXhrPlugin extends instrumentation_xml_http_request_namespaceObject.XMLHttpRequestInstrumentation {\n  constructor(instrumentationOptions, shouldRemovePII) {\n    super(instrumentationOptions);\n    this.shouldRemovePII = shouldRemovePII;\n  }\n\n  _createSpan(xhr, url, method) {\n    const span = super._createSpan(xhr, url, method); // if this url is ignored then there is no span\n\n\n    if (span) {\n      // don't care about success/failure, just want to see response headers if they exist\n      xhr.addEventListener('readystatechange', function () {\n        if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n          const headers = xhr.getAllResponseHeaders().toLowerCase();\n\n          if (headers.indexOf('server-timing') !== -1) {\n            const st = xhr.getResponseHeader('server-timing');\n\n            if (st !== null) {\n              captureTraceParent(st, span);\n            }\n          }\n        }\n\n        maybeAddSCSResponse(xhr, this.shouldRemovePII, span);\n      }); // FIXME long-term answer for deprecating attributes.component?\n\n      span.setAttribute('component', this.moduleName);\n    }\n\n    return span;\n  }\n\n}\nclass SplunkFetchInstrumentation extends instrumentation_fetch_namespaceObject.FetchInstrumentation {\n  _addFinalSpanAttributes(span, fetchResponse) {\n    if (span && fetchResponse && fetchResponse.headers) {\n      const st = fetchResponse.headers.get('Server-Timing');\n\n      if (st) {\n        captureTraceParent(st, span);\n      }\n    }\n\n    return super._addFinalSpanAttributes(span, fetchResponse);\n  }\n\n}\n;// CONCATENATED MODULE: ./src/opentelemetry-x/instrumentation/index.ts\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nfunction isResponse(result) {\n  return result.body !== undefined;\n}\n\nfunction createSCSFetchInstrumentation(instrumentationOptions, shouldRemovePII) {\n  return new SplunkFetchInstrumentation(_objectSpread(_objectSpread({}, instrumentationOptions), {}, {\n    applyCustomAttributesOnSpan: async (span, request, result) => {\n      if (isResponse(result)) {\n        if (result.status >= 400) {\n          try {\n            const response = result.clone();\n            const body = await response.json();\n            addErrorDetailsToSpan(span, body, shouldRemovePII);\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.warn('Error cloning and reading failed response', error);\n          }\n        }\n      }\n    }\n  }));\n}\nfunction createXhrPlugin(instrumentationOptions, shouldRemovePII) {\n  return new SplunkXhrPlugin(_objectSpread({}, instrumentationOptions), shouldRemovePII);\n}\n/**\n * Updates RUM by instrumenting `fetch` and `XHR requests` to include SCS-specific response codes in the span\n * (see http://go/ssc-errors)\n * @param rum\n * @param options\n */\n\nfunction instrumentSCSRequests(provider, shouldRemovePII, options) {\n  const fetchInstrumentation = createSCSFetchInstrumentation(options, shouldRemovePII);\n  fetchInstrumentation.setTracerProvider(provider);\n  const xhrPlugin = createXhrPlugin(options, shouldRemovePII);\n  xhrPlugin.setTracerProvider(provider);\n}\n;// CONCATENATED MODULE: ./src/opentelemetry-x/setupInstrumentations.ts\n\n\n\n\nfunction setupInstrumentations(provider, options, shouldRemovePII, shouldDisableAutocapture) {\n  // User Interaction Events we want to send to open-tel\n  const eventKeys = ['click', 'error'];\n  const instrumentations = new Array();\n\n  if (shouldDisableAutocapture) {\n    return (0,instrumentation_namespaceObject.registerInstrumentations)({\n      tracerProvider: provider,\n      instrumentations\n    });\n  }\n\n  instrumentations.push(createXhrPlugin(options, shouldRemovePII));\n  instrumentations.push(createSCSFetchInstrumentation(options, shouldRemovePII));\n  instrumentations.push(new instrumentation_document_load_namespaceObject.DocumentLoadInstrumentation());\n  instrumentations.push(new instrumentation_user_interaction_namespaceObject.UserInteractionInstrumentation({\n    eventNames: eventKeys\n  }));\n  return (0,instrumentation_namespaceObject.registerInstrumentations)({\n    tracerProvider: provider,\n    instrumentations\n  });\n}\n;// CONCATENATED MODULE: external \"@opentelemetry/api\"\nconst api_namespaceObject = require(\"@opentelemetry/api\");\n;// CONCATENATED MODULE: external \"@opentelemetry/sdk-trace-web\"\nconst sdk_trace_web_namespaceObject = require(\"@opentelemetry/sdk-trace-web\");\n;// CONCATENATED MODULE: external \"detect-browser\"\nconst external_detect_browser_namespaceObject = require(\"detect-browser\");\n;// CONCATENATED MODULE: ./src/opentelemetry-x/getUserColorScheme.ts\nfunction getUserColorScheme() {\n  const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const userPrefersLight = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;\n\n  if (userPrefersDark) {\n    return 'dark';\n  }\n\n  if (userPrefersLight) {\n    return 'light';\n  }\n\n  return 'unknown';\n}\n// EXTERNAL MODULE: ./src/attributes/index.ts\nvar src_attributes = __webpack_require__(579);\n;// CONCATENATED MODULE: ./src/opentelemetry-x/SplunkWebTracerProvider.ts\n\n\n\n\n\n/**\n * The main purpose of this class is to attach global attributes and the location.href to the URL.\n *\n * It may not be ideal to create our own provider, but we are relying on this pattern as used by\n * the Splunk RUM client: https://github.com/signalfx/splunk-otel-js-web/blob/main/src/SplunkWebTracerProvider.ts\n * If they change their approach, we shall change ours as well.\n */\n\nclass SplunkWebTracerProvider extends sdk_trace_web_namespaceObject.WebTracerProvider {\n  constructor(config, appName, environment) {\n    super(config);\n    this.appName = appName;\n    this.environment = environment;\n    this.globalAttributes = {};\n  }\n\n  get attributes() {\n    return this.globalAttributes;\n  }\n\n  getTracer(name, version) {\n    const tracer = super.getTracer(name, version);\n    const origStartSpan = tracer.startSpan;\n    const browser = (0,external_detect_browser_namespaceObject.detect)();\n\n    tracer.startSpan = (...args) => {\n      var _navigator, _window;\n\n      const span = origStartSpan.apply(tracer, args);\n      span.setAttribute('environment', this.environment);\n      span.setAttribute('app', this.appName);\n      span.setAttribute('location.href', window.location.href);\n      span.setAttribute('splunk.telemetryVersion', src_attributes/* BUILD_VERSION */.bS);\n      span.setAttribute('splunk.telemetry', 'skinny-web-opentelemetry');\n\n      if (browser) {\n        span.setAttribute('browser.name', browser.name);\n        span.setAttribute('browser.version', browser.version);\n        span.setAttribute('os.name', browser.os);\n      }\n\n      span.setAttribute('useragent', (_navigator = navigator) == null ? void 0 : _navigator.userAgent);\n      const screen = (_window = window) == null ? void 0 : _window.screen;\n      const screenSize = {\n        width: (screen == null ? void 0 : screen.width) || 'n/a',\n        height: (screen == null ? void 0 : screen.height) || 'n/a'\n      };\n      span.setAttribute('screen.size', JSON.stringify(screenSize));\n      const colorScheme = getUserColorScheme();\n      span.setAttribute('preferred.color.scheme', colorScheme);\n      span.setAttributes(this.globalAttributes);\n      return span;\n    };\n\n    return tracer;\n  }\n\n  setGlobalAttributes(attributes) {\n    if (attributes) {\n      Object.assign(this.globalAttributes, attributes);\n    } else {\n      Object.keys(this.globalAttributes).forEach(key => {\n        delete this.globalAttributes[key];\n      });\n    }\n  }\n\n  async shutdown() {\n    await new Promise(resolve => {\n      api_namespaceObject.propagation.disable();\n      api_namespaceObject.context.disable();\n      api_namespaceObject.trace.disable();\n      resolve();\n    });\n    return super.shutdown();\n  }\n\n}\n;// CONCATENATED MODULE: ./src/splunk-otel-plugin/SplunkOtelPlugin.ts\n\n\nfunction SplunkOtelPlugin_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction SplunkOtelPlugin_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SplunkOtelPlugin_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SplunkOtelPlugin_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nfunction createAnalyticsId(sessionId, user) {\n  return sessionId + \"-\" + user;\n}\n\nclass SplunkOtelPlugin {\n  /**\n   * Editable global attributes\n   */\n  constructor(obfuscator, sessionManager, setGlobalAttributes, tracerProvider) {\n    defineProperty_default()(this, \"pluginName\", 'SplunkOtelPlugin');\n\n    this.obfuscator = obfuscator;\n    this.sessionManager = sessionManager;\n    this.setGlobalAttributes = setGlobalAttributes;\n    this.tracerProvider = tracerProvider;\n    this.globalAttributes = {};\n  }\n\n  getName() {\n    return this.pluginName;\n  }\n\n  identify({\n    tenant,\n    user,\n    piiValues\n  }) {\n    /**\n     * set up obfuscator to remove tenant\n     */\n    this.obfuscator.setTenant(tenant);\n    /**\n     * set up obfuscator to remove user\n     */\n\n    this.obfuscator.setUser(user);\n\n    if (piiValues) {\n      /**\n       * set up obfuscator to remove PII properties\n       */\n      this.obfuscator.setPIIProperties(piiValues);\n    }\n    /**\n     * Clean up any old listeners, to avoid duplication\n     */\n\n\n    this.cleanupSessionListeners();\n    /**\n     * Start a session\n     */\n\n    this.sessionManager.startSession();\n    /**\n     * Set global attributes based on the user and session\n     */\n\n    const obfuscatedUser = this.obfuscator.obfuscate(user);\n    const analyticsSessionId = this.sessionManager ? createAnalyticsId(this.sessionManager.getSessionId(), obfuscatedUser) : null;\n    const isInternal = (0,skinny_web_telemetry_.isInternalUser)(user);\n    const attributes = {\n      analyticsSessionId,\n      isInternalUser: isInternal,\n      tenant,\n      user: obfuscatedUser\n    };\n    this.addGlobalAttributes(attributes);\n    /**\n     * Listen for changes to the sessionId, removing the user\n     */\n\n    this.sessionListener = {\n      sessionChanged: newSessionId => {\n        const newAnalyticsSessionId = createAnalyticsId(newSessionId, obfuscatedUser);\n        this.addGlobalAttributes({\n          analyticsSessionId: newAnalyticsSessionId\n        });\n      }\n    };\n    this.sessionManager.addSessionListener(this.sessionListener);\n  }\n\n  reset() {\n    this.obfuscator.setTenant(null);\n    this.obfuscator.setUser(null);\n    this.obfuscator.clearObfuscatedAttributes(); // end the session\n\n    this.cleanupSessionListeners();\n    this.sessionManager.endSession(); // clear *all* global attributes\n\n    this.removeGlobalAttributes(new Set(Object.keys(this.globalAttributes)));\n  }\n\n  track(event, attributes) {\n    const span = this.innerStartSpan(event, attributes);\n    span.end();\n  }\n\n  startSpan(event, attributes) {\n    return this.innerStartSpan(event, attributes);\n  }\n\n  register(attributes) {\n    this.addGlobalAttributes(attributes);\n  }\n\n  unregister(attributeNames) {\n    this.removeGlobalAttributes(attributeNames);\n  }\n\n  addGlobalAttributes(attributes) {\n    Object.keys(attributes).forEach(key => {\n      this.globalAttributes[key] = attributes[key];\n    });\n    this.flushAttributes();\n  }\n\n  removeGlobalAttributes(attributeNames) {\n    attributeNames.forEach(key => {\n      delete this.globalAttributes[key];\n    });\n    this.flushAttributes();\n  }\n\n  flushAttributes() {\n    this.setGlobalAttributes(this.globalAttributes);\n  }\n\n  cleanupSessionListeners() {\n    if (this.sessionListener && this.sessionManager) {\n      this.sessionManager.removeSessionListener(this.sessionListener);\n    }\n  }\n\n  innerStartSpan(event, attributes) {\n    const span = this.tracerProvider.getTracer('@splunk/skinny-web-opentelemetry', src_attributes/* BUILD_VERSION */.bS).startSpan(event);\n    span.setAttributes(SplunkOtelPlugin_objectSpread(SplunkOtelPlugin_objectSpread(SplunkOtelPlugin_objectSpread({}, this.globalAttributes), attributes), src_attributes/* MANUAL_ATTRIBUTES */.Lg));\n    return span;\n  }\n\n}\n;// CONCATENATED MODULE: ./src/session/utils.ts\nfunction isIframe() {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n}\n;// CONCATENATED MODULE: ./src/session/cookie.ts\n\nconst maxSessionLength = 4 * 60 * 60 * 1000;\n/**\n * Returns true if the session is longer than what we consider a maximum session length, i.e. several hours.\n */\n\nfunction isPastMaxSessionLength(createdAt) {\n  const now = Date.now();\n  return createdAt > now || now > createdAt + maxSessionLength;\n}\n\nfunction findCookieValue(cookieName) {\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const cookies = decodedCookie.split(';');\n\n  for (let i = 0; i < cookies.length; i += 1) {\n    const curentCookie = cookies[i].trim();\n\n    if (curentCookie.startsWith(cookieName + \"=\")) {\n      return curentCookie.substring((cookieName + \"=\").length, curentCookie.length);\n    }\n  }\n\n  return undefined;\n}\nfunction createCookie(cookieName, cookieValue, maxAge) {\n  return cookieName + \"=\" + cookieValue + \"; path=/; max-age=\" + maxAge;\n}\nfunction deleteCookie(cookieName) {\n  document.cookie = cookieName + \"=; max-age=-1;\";\n}\nfunction parseCookieToSessionState(cookieName) {\n  const rawValue = findCookieValue(cookieName);\n\n  if (!rawValue) {\n    return undefined;\n  }\n\n  const decoded = decodeURIComponent(rawValue);\n\n  if (!decoded) {\n    return undefined;\n  }\n\n  let ss;\n\n  try {\n    ss = JSON.parse(decoded);\n  } catch (error) {\n    return undefined;\n  } // should exist and be an object\n\n\n  if (!ss || typeof ss !== 'object') {\n    return undefined;\n  } // id validity\n\n\n  if (!ss.id || typeof ss.id !== 'string' || !ss.id.length || ss.id.length !== 32) {\n    return undefined;\n  } // createdAt validity\n\n\n  if (!ss.createdAt || typeof ss.createdAt !== 'number' || isPastMaxSessionLength(ss.createdAt)) {\n    return undefined;\n  }\n\n  return ss;\n}\nfunction writeAndRenewCookie(cookieName, maxAge, sessionState) {\n  if (isPastMaxSessionLength(sessionState.createdAt)) {\n    // safety valve\n    return;\n  }\n\n  const cookieValue = encodeURIComponent(JSON.stringify(sessionState));\n  let cookie = createCookie(cookieName, cookieValue, maxAge);\n\n  if (isIframe()) {\n    cookie += ';SameSite=None; Secure';\n  } else {\n    cookie += ';SameSite=Strict';\n  }\n\n  document.cookie = cookie;\n}\n;// CONCATENATED MODULE: ./src/session/SessionManager.ts\n\nconst COOKIE_NAME = '_splunk_icx_telemetry_sid';\nconst ACTIVITY_EVENTS = ['click', 'scroll', 'mousedown', 'keydown', 'touchend', 'visibilitychange'];\nconst LISTENER_OPTIONS = {\n  capture: true,\n  passive: true\n};\nfunction generateId(bits) {\n  const xes = 'x'.repeat(bits / 4);\n  return xes.replace(/x/g, () => {\n    // eslint-disable-next-line no-bitwise\n    return (Math.random() * 16 | 0).toString(16);\n  });\n}\nfunction createSessionState() {\n  const now = Date.now();\n  return {\n    createdAt: now,\n    updatedAt: now,\n    id: generateId(128)\n  };\n}\n\n/**\n * The basic idea is to let the browser expire cookies for us \"naturally\" once\n * inactivityTimeoutSeconds is reached.  Activity (including any page load)\n * extends the session.  The true startTime of the session is set in the cookie value\n * and an extension never exceeds MaxAge.\n *\n * We use a background periodic timer to check for expired cookies and initialize new ones.\n *\n * Session state is stored in the cookie as uriencoded json and is of the form {@link SessionState}.\n *\n * Future work can add more fields though note that the fact that the value doesn't change\n * once created makes this very robust when used in multiple tabs/windows - tabs don't compete/\n * race to do anything but set the max-age.\n */\nclass SessionManager {\n  cleanupListeners() {\n    this.activityListenersByEventType.forEach((listener, type) => {\n      document.removeEventListener(type, listener, LISTENER_OPTIONS);\n    });\n    this.activityListenersByEventType.clear();\n  }\n\n  markActivity() {\n    this.recentActivity = true;\n  }\n\n  constructor(inactivityTimeoutSeconds, periodicCheckSeconds) {\n    this.inactivityTimeoutSeconds = inactivityTimeoutSeconds;\n    this.periodicCheckSeconds = periodicCheckSeconds;\n    this.activityListenersByEventType = new Map();\n    this.sessionListeners = new Set();\n  }\n\n  addSessionListener(listener) {\n    this.sessionListeners.add(listener);\n  }\n\n  getSessionId() {\n    return this.sessionState.id;\n  }\n\n  getSessionState() {\n    return this.sessionState;\n  }\n\n  removeSessionListener(listener) {\n    this.sessionListeners.delete(listener);\n  }\n  /**\n   * Starts a session, creating a cookie that keeps refreshing while the session is active.\n   */\n\n\n  startSession() {\n    this.endSession();\n    this.markActivity();\n    this.updateSessionStatus(); // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n    const sessionManager = this;\n    this.updateHandle = setInterval(() => {\n      sessionManager.updateSessionStatus();\n    }, this.periodicCheckSeconds * 1000);\n    this.activityListenersByEventType.clear();\n    ACTIVITY_EVENTS.forEach(type => {\n      const listener = () => {\n        sessionManager.markActivity();\n      };\n\n      document.addEventListener(type, listener, LISTENER_OPTIONS);\n      this.activityListenersByEventType.set(type, listener);\n    });\n  }\n  /**\n   * Ends the session, clearing out the cookie.\n   */\n\n\n  endSession() {\n    deleteCookie(COOKIE_NAME);\n    this.sessionState = parseCookieToSessionState(COOKIE_NAME);\n    clearInterval(this.updateHandle);\n    this.cleanupListeners();\n  }\n  /**\n   * (This should not be called directly, only exported for unit testing.)\n   * This is called periodically and has two purposes:\n   * 1) If activity has occured since the last invocation, keep the session alive by renewing the cookie.\n   * 2) If the cookie has expired (happens due to inactivity), create a new session and store that in the cookie.\n   */\n\n\n  updateSessionStatus() {\n    let sessionState = parseCookieToSessionState(COOKIE_NAME);\n    let isNew = false;\n\n    if (!sessionState) {\n      // Create a new session if the old one has expired\n      sessionState = createSessionState();\n      this.recentActivity = true; // force write of new cookie\n\n      isNew = true;\n    }\n\n    if (this.recentActivity) {\n      sessionState.updatedAt = Date.now();\n      writeAndRenewCookie(COOKIE_NAME, this.inactivityTimeoutSeconds, sessionState);\n\n      if (isNew) {\n        this.sessionListeners.forEach(listener => {\n          listener.sessionChanged(sessionState.id);\n        });\n      }\n    }\n\n    this.sessionState = sessionState;\n    this.recentActivity = false;\n  }\n\n}\n;// CONCATENATED MODULE: ./src/session/index.ts\n\n// EXTERNAL MODULE: ./src/opentelemetry-x/exporters/createSpanProcessor.ts + 8 modules\nvar createSpanProcessor = __webpack_require__(851);\n;// CONCATENATED MODULE: ./src/splunk-otel-plugin/createSplunkOtelPlugin.ts\n\n\n\n\n\n\nconst PERIOD_CHECK_SECONDS = 60;\nconst INACTIVITY_TIMEOUT_SECONDS = 15 * 60;\n/**\n * This function is used to be able to get the correct URL for data collection service.\n * @param env current environment\n * @returns collectorUrl\n */\n\nconst getCollectorURL = env => {\n  // default production url, all the data from prod and staging is going to be sent there\n  let dataCollectionServiceURL = 'https://telemetry-splkmobile.dataeng.splunk.com/2.0/events'; // if we are in playground, we are sending data to dev environment to be able to debug issues faster\n\n  if (env === 'play') {\n    dataCollectionServiceURL = 'https://telemetry-splkmobile.kube-bridger-iad10.dev.splunk8s.io/2.0/events';\n  }\n\n  return dataCollectionServiceURL;\n};\n/**\n * This function is used to be able to get the correct URL for POCExporter for data collection service.\n * We are going to use POC exporter, to be able to start work on POC, while working on authorization and compliance\n * @param env current environment\n * @returns collectorUrl\n */\n\nconst getPOCCollectorURL = env => {\n  // by default there is no url\n  let dataCollectionServiceURL = ''; // only if we are in playground, we are sending data to dev environment\n\n  if (env === 'play') {\n    dataCollectionServiceURL = 'https://telemetry-splkmobile.kube-bridger-iad10.dev.splunk8s.io/2.0.dev/events';\n  }\n\n  return dataCollectionServiceURL;\n};\n/**\n * Create a SplunkOtel plugin\n * @param options:\n * - appType: type of the application. Currently supported appTypes are scs and ec\n * - appName: the name of the app\n * - environment: the environment the app is running in\n * - shouldRemovePII: boolean to indicate whether to remove or obfuscate sensitive data, such as username.\n *   to track internal user behavior in detail. Note that internal users are those whose emails end with `@splunk.com`.\n * - redactAttributes?: optional function which can be used to reduct attributes.\n * - shouldDisableAutocapture?: set it to true if you would like to disable autocapturing of click and error events.\n * - shouldRemoveQueryParams?: set it to true if you would like to remove all the query params in the urls.\n */\n\nfunction createSplunkOtelPlugin(options) {\n  // We are going to send all the data to Data Collection Service or Splunk Endpoint we are going to use getCollectorURL function to get correct url.\n  // We also want to exclude this requests from tracking.\n  const openTelemetryURL = getCollectorURL(options.environment); // We want to exclude requests to the full story from the tracking, so that we wouldn't track it in open telemetry to remove extra noise from data.\n\n  const fullStoryURL = 'https://rs.fullstory.com/rec';\n  const fulStoryConfigURL = 'https://remotes.scs.splunk.com/fullstory-lib/config_play.json'; // Excluding requests to splunkd telemetry metric-endpoint\n\n  const ECURLRegex = /telemetry-metric/g;\n  const sessionManager = new SessionManager(INACTIVITY_TIMEOUT_SECONDS, PERIOD_CHECK_SECONDS);\n  const splunkProvider = new SplunkWebTracerProvider({}, options.appName, options.environment);\n  setupInstrumentations(splunkProvider, {\n    ignoreUrls: [openTelemetryURL, fullStoryURL, fulStoryConfigURL, ECURLRegex]\n  }, options.shouldRemovePII, options.shouldDisableAutocapture);\n  splunkProvider.register();\n  const obfuscateParams = {\n    shouldRemovePII: options.shouldRemovePII,\n    userDefinedRedactFn: options.redactAttributes,\n    shouldRemoveQueryParams: options.shouldRemoveQueryParams\n  };\n  const obfuscator = new skinny_web_telemetry_.Obfuscator(obfuscateParams);\n  const spanProcessor = (0,createSpanProcessor/* createSpanProcessor */.H)(options.appType, options.appName, obfuscator, options.environment);\n  splunkProvider.addSpanProcessor(spanProcessor);\n\n  const setGlobalAttributes = attributes => {\n    splunkProvider.setGlobalAttributes(attributes);\n  };\n\n  return new SplunkOtelPlugin(obfuscator, sessionManager, setGlobalAttributes, splunkProvider);\n}\n\n/***/ }),\n\n/***/ 353:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DK\": () => (/* reexport safe */ _createSplunkOtelPlugin__WEBPACK_IMPORTED_MODULE_0__.DK),\n/* harmony export */   \"G6\": () => (/* reexport safe */ _createSplunkOtelPlugin__WEBPACK_IMPORTED_MODULE_0__.G6),\n/* harmony export */   \"xY\": () => (/* reexport safe */ _createSplunkOtelPlugin__WEBPACK_IMPORTED_MODULE_0__.xY)\n/* harmony export */ });\n/* harmony import */ var _createSplunkOtelPlugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(42);\n\n\n/***/ }),\n\n/***/ 125:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);\n/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_session__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _session__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _session__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n/***/ }),\n\n/***/ 170:\n/***/ (() => {\n\n\n\n/***/ }),\n\n/***/ 195:\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@babel/runtime/helpers/defineProperty\");\n\n/***/ }),\n\n/***/ 578:\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@splunk/skinny-web-telemetry\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/global */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.g = (function() {\n/******/ \t\t\tif (typeof globalThis === 'object') return globalThis;\n/******/ \t\t\ttry {\n/******/ \t\t\t\treturn this || new Function('return this')();\n/******/ \t\t\t} catch (e) {\n/******/ \t\t\t\tif (typeof window === 'object') return window;\n/******/ \t\t\t}\n/******/ \t\t})();\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSpanProcessor\": () => (/* reexport safe */ _opentelemetry_x_exporters__WEBPACK_IMPORTED_MODULE_1__.H),\n/* harmony export */   \"createSplunkOtelPlugin\": () => (/* reexport safe */ _splunk_otel_plugin__WEBPACK_IMPORTED_MODULE_0__.DK),\n/* harmony export */   \"getCollectorURL\": () => (/* reexport safe */ _splunk_otel_plugin__WEBPACK_IMPORTED_MODULE_0__.xY),\n/* harmony export */   \"getPOCCollectorURL\": () => (/* reexport safe */ _splunk_otel_plugin__WEBPACK_IMPORTED_MODULE_0__.G6)\n/* harmony export */ });\n/* harmony import */ var _splunk_otel_plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(353);\n/* harmony import */ var _opentelemetry_x_exporters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(125);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"createSplunkOtelPlugin\",\"getCollectorURL\",\"getPOCCollectorURL\",\"createSpanProcessor\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n})();\n\nmodule.exports = __webpack_exports__;\n/******/ })()\n;\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport var BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport var BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport var BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport var BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport var BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString, } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce(function (hValue, current) {\n        var value = \"\" + hValue + (hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : '') + current;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var entry = encodeURIComponent(key) + \"=\" + encodeURIComponent(value.value);\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    var valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    var keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    var keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (keyPair.length !== 2)\n        return;\n    var key = decodeURIComponent(keyPair[0].trim());\n    var value = decodeURIComponent(keyPair[1].trim());\n    var metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key: key, value: value, metadata: metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(function (entry) {\n        return parsePairKeyValue(entry);\n    })\n        .filter(function (keyPair) { return keyPair !== undefined && keyPair.value.length > 0; })\n        .reduce(function (headers, keyPair) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS, } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nvar W3CBaggagePropagator = /** @class */ (function () {\n    function W3CBaggagePropagator() {\n    }\n    W3CBaggagePropagator.prototype.inject = function (context, carrier, setter) {\n        var baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        var keyPairs = getKeyPairs(baggage)\n            .filter(function (pair) {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        var headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    };\n    W3CBaggagePropagator.prototype.extract = function (context, carrier, getter) {\n        var headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        var baggageString = Array.isArray(headerValue)\n            ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n            : headerValue;\n        if (!baggageString)\n            return context;\n        var baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        var pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(function (entry) {\n            var keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                var baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    };\n    W3CBaggagePropagator.prototype.fields = function () {\n        return [BAGGAGE_HEADER];\n    };\n    return W3CBaggagePropagator;\n}());\nexport { W3CBaggagePropagator };\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nvar AnchoredClock = /** @class */ (function () {\n    /**\n     * Create a new AnchoredClock anchored to the current time returned by systemClock.\n     *\n     * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n     * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n     */\n    function AnchoredClock(systemClock, monotonicClock) {\n        this._monotonicClock = monotonicClock;\n        this._epochMillis = systemClock.now();\n        this._performanceMillis = monotonicClock.now();\n    }\n    /**\n     * Returns the current time by adding the number of milliseconds since the\n     * AnchoredClock was created to the creation epoch time\n     */\n    AnchoredClock.prototype.now = function () {\n        var delta = this._monotonicClock.now() - this._performanceMillis;\n        return this._epochMillis + delta;\n    };\n    return AnchoredClock;\n}());\nexport { AnchoredClock };\n//# sourceMappingURL=anchored-clock.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { diag } from '@opentelemetry/api';\nexport function sanitizeAttributes(attributes) {\n    var e_1, _a;\n    var out = {};\n    if (typeof attributes !== 'object' || attributes == null) {\n        return out;\n    }\n    try {\n        for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), key = _d[0], val = _d[1];\n            if (!isAttributeKey(key)) {\n                diag.warn(\"Invalid attribute key: \" + key);\n                continue;\n            }\n            if (!isAttributeValue(val)) {\n                diag.warn(\"Invalid attribute value set for key: \" + key);\n                continue;\n            }\n            if (Array.isArray(val)) {\n                out[key] = val.slice();\n            }\n            else {\n                out[key] = val;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return out;\n}\nexport function isAttributeKey(key) {\n    return typeof key === 'string' && key.length > 0;\n}\nexport function isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n    var e_2, _a;\n    var type;\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var element = arr_1_1.value;\n            // null/undefined elements are allowed\n            if (element == null)\n                continue;\n            if (!type) {\n                if (isValidPrimitiveAttributeValue(element)) {\n                    type = typeof element;\n                    continue;\n                }\n                // encountered an invalid primitive\n                return false;\n            }\n            if (typeof element === type) {\n                continue;\n            }\n            return false;\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n        case 'boolean':\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return function (ex) {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    var result = {};\n    var current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(function (propertyName) {\n            if (result[propertyName])\n                return;\n            var value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nvar delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nvar NANOSECOND_DIGITS = 9;\nvar NANOSECOND_DIGITS_IN_MILLIS = 6;\nvar MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nvar SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis) {\n    var epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    var seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    var nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n    return [seconds, nanos];\n}\nexport function getTimeOrigin() {\n    var timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        var perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    var timeOrigin = millisToHrTime(getTimeOrigin());\n    var now = millisToHrTime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    return addHrTimes(timeOrigin, now);\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return millisToHrTime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return millisToHrTime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    var seconds = endTime[0] - startTime[0];\n    var nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    var precision = NANOSECOND_DIGITS;\n    var tmp = \"\" + '0'.repeat(precision) + time[1] + \"Z\";\n    var nanoString = tmp.substr(tmp.length - precision - 1);\n    var date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1, time2) {\n    var out = [time1[0] + time2[0], time1[1] + time2[1]];\n    // Nanoseconds\n    if (out[1] >= SECOND_TO_NANOSECONDS) {\n        out[1] -= SECOND_TO_NANOSECONDS;\n        out[0] += 1;\n    }\n    return out;\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.9.1';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues || (TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n        ? self\n        : typeof window === 'object'\n            ? window\n            : typeof global === 'object'\n                ? global\n                : {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\nvar DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nvar ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'];\nfunction isEnvVarABoolean(key) {\n    return (ENVIRONMENT_BOOLEAN_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n    'OTEL_EXPORTER_OTLP_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n    'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n    'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nvar ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\nexport var DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\nexport var DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n/**\n * Default environment variables\n */\nexport var DEFAULT_ENVIRONMENT = {\n    OTEL_SDK_DISABLED: false,\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_OTLP_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n    OTEL_EXPORTER_OTLP_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n    OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n    OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n    OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SERVICE_NAME: '',\n    OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_EXPORTER: '',\n    OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n    OTEL_EXPORTER_OTLP_INSECURE: '',\n    OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n    OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n    OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n    OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n    OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n    OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n    OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n};\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(key, environment, values) {\n    if (typeof values[key] === 'undefined') {\n        return;\n    }\n    var value = String(values[key]);\n    // support case-insensitive \"true\"\n    environment[key] = value.toLowerCase() === 'true';\n}\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min, max) {\n    if (min === void 0) { min = -Infinity; }\n    if (max === void 0) { max = Infinity; }\n    if (typeof values[name] !== 'undefined') {\n        var value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator) {\n    if (separator === void 0) { separator = DEFAULT_LIST_SEPARATOR; }\n    var givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(function (v) { return v.trim(); });\n    }\n}\n// The support string -> DiagLogLevel mappings\nvar logLevelMap = {\n    ALL: DiagLogLevel.ALL,\n    VERBOSE: DiagLogLevel.VERBOSE,\n    DEBUG: DiagLogLevel.DEBUG,\n    INFO: DiagLogLevel.INFO,\n    WARN: DiagLogLevel.WARN,\n    ERROR: DiagLogLevel.ERROR,\n    NONE: DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    var value = values[key];\n    if (typeof value === 'string') {\n        var theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values) {\n    var environment = {};\n    for (var env in DEFAULT_ENVIRONMENT) {\n        var key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarABoolean(key)) {\n                    parseBoolean(key, environment, values);\n                }\n                else if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    var value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults() {\n    return typeof process !== 'undefined'\n        ? parseEnvironment(process.env)\n        : parseEnvironment(_globalThis);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_ENVIRONMENT, parseEnvironment, } from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n/**\n * Gets the environment variables\n */\nexport function getEnv() {\n    var globalEnv = parseEnvironment(_globalThis);\n    return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr) {\n    var hexStrLen = hexStr.length;\n    var hexAsciiCharsStr = '';\n    for (var i = 0; i < hexStrLen; i += 2) {\n        var hexPair = hexStr.substring(i, i + 2);\n        var hexVal = parseInt(hexPair, 16);\n        hexAsciiCharsStr += String.fromCharCode(hexVal);\n    }\n    return btoa(hexAsciiCharsStr);\n}\n//# sourceMappingURL=hex-to-base64.js.map","var SPAN_ID_BYTES = 8;\nvar TRACE_ID_BYTES = 16;\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nvar RandomIdGenerator = /** @class */ (function () {\n    function RandomIdGenerator() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n    return RandomIdGenerator;\n}());\nexport { RandomIdGenerator };\nvar SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (var i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport var SemanticResourceAttributes = {\n    /**\n     * Name of the cloud provider.\n     */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n     * The cloud account ID the resource is assigned to.\n     */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n     * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n     */\n    CLOUD_REGION: 'cloud.region',\n    /**\n     * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n     *\n     * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n     */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n     * The cloud platform in use.\n     *\n     * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n     */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n     * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n     */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n     * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n     */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n     * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n     */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n     * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n     */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n     * The task definition family this task definition is a member of.\n     */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n     * The revision for this task definition.\n     */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n     * The ARN of an EKS cluster.\n     */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n     * The name(s) of the AWS log group(s) an application is writing to.\n     *\n     * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n     */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n     * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n     *\n     * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n     */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n     * The name(s) of the AWS log stream(s) an application is writing to.\n     */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n     * The ARN(s) of the AWS log stream(s).\n     *\n     * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n     */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n     * Container name.\n     */\n    CONTAINER_NAME: 'container.name',\n    /**\n     * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n     */\n    CONTAINER_ID: 'container.id',\n    /**\n     * The container runtime managing this container.\n     */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n     * Name of the image the container was built on.\n     */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n     * Container image tag.\n     */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n     * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n     */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n     * A unique identifier representing the device.\n     *\n     * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n     */\n    DEVICE_ID: 'device.id',\n    /**\n     * The model identifier for the device.\n     *\n     * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n     */\n    DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n    /**\n     * The marketing name for the device model.\n     *\n     * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n     */\n    DEVICE_MODEL_NAME: 'device.model.name',\n    /**\n     * The name of the single function that this runtime instance executes.\n     *\n     * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n     */\n    FAAS_NAME: 'faas.name',\n    /**\n    * The unique ID of the single function that this runtime instance executes.\n    *\n    * Note: Depending on the cloud provider, use:\n  \n  * **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n  Take care not to use the &#34;invoked ARN&#34; directly but replace any\n  [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\n  different aliases.\n  * **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n  * **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n  \n  On some providers, it may not be possible to determine the full ID at startup,\n  which is why this field cannot be made required. For example, on AWS the account ID\n  part of the ARN is not available without calling another AWS API\n  which may be deemed too slow for a short-running lambda function.\n  As an alternative, consider setting `faas.id` as a span attribute instead.\n    */\n    FAAS_ID: 'faas.id',\n    /**\n    * The immutable version of the function being executed.\n    *\n    * Note: Depending on the cloud provider and platform, use:\n  \n  * **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n    (an integer represented as a decimal string).\n  * **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n    (i.e., the function name plus the revision suffix).\n  * **Google Cloud Functions:** The value of the\n    [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n  * **Azure Functions:** Not applicable. Do not set this attribute.\n    */\n    FAAS_VERSION: 'faas.version',\n    /**\n     * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n     *\n     * Note: * **AWS Lambda:** Use the (full) log stream name.\n     */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n     * The amount of memory available to the serverless function in MiB.\n     *\n     * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n     */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n     * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n     */\n    HOST_ID: 'host.id',\n    /**\n     * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n     */\n    HOST_NAME: 'host.name',\n    /**\n     * Type of host. For Cloud, this must be the machine type.\n     */\n    HOST_TYPE: 'host.type',\n    /**\n     * The CPU architecture the host system is running on.\n     */\n    HOST_ARCH: 'host.arch',\n    /**\n     * Name of the VM image or OS install the host was instantiated from.\n     */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n     * VM image ID. For Cloud, this value is from the provider.\n     */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n     * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n     */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n     * The name of the cluster.\n     */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n     * The name of the Node.\n     */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n     * The UID of the Node.\n     */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n     * The name of the namespace that the pod is running in.\n     */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n     * The UID of the Pod.\n     */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n     * The name of the Pod.\n     */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n     * The name of the Container in a Pod template.\n     */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n     * The UID of the ReplicaSet.\n     */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n     * The name of the ReplicaSet.\n     */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n     * The UID of the Deployment.\n     */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n     * The name of the Deployment.\n     */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n     * The UID of the StatefulSet.\n     */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n     * The name of the StatefulSet.\n     */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n     * The UID of the DaemonSet.\n     */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n     * The name of the DaemonSet.\n     */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n     * The UID of the Job.\n     */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n     * The name of the Job.\n     */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n     * The UID of the CronJob.\n     */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n     * The name of the CronJob.\n     */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n     * The operating system type.\n     */\n    OS_TYPE: 'os.type',\n    /**\n     * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n     */\n    OS_DESCRIPTION: 'os.description',\n    /**\n     * Human readable operating system name.\n     */\n    OS_NAME: 'os.name',\n    /**\n     * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n     */\n    OS_VERSION: 'os.version',\n    /**\n     * Process identifier (PID).\n     */\n    PROCESS_PID: 'process.pid',\n    /**\n     * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n     * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n     * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n     */\n    PROCESS_COMMAND: 'process.command',\n    /**\n     * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n     */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n     * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n     */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n     * The username of the user that owns the process.\n     */\n    PROCESS_OWNER: 'process.owner',\n    /**\n     * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n     */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n     * The version of the runtime of this process, as returned by the runtime without modification.\n     */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n     * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n     */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n     * Logical name of the service.\n     *\n     * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n     */\n    SERVICE_NAME: 'service.name',\n    /**\n     * A namespace for `service.name`.\n     *\n     * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n     */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n     * The string ID of the service instance.\n     *\n     * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n     */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n     * The version string of the service API or implementation.\n     */\n    SERVICE_VERSION: 'service.version',\n    /**\n     * The name of the telemetry SDK as defined above.\n     */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n     * The language of the telemetry SDK.\n     */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n     * The version string of the telemetry SDK.\n     */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n     * The version string of the auto instrumentation agent, if used.\n     */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n     * The name of the web engine.\n     */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n     * The version of the web engine.\n     */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n     * Additional description of the web engine (e.g. detailed version and edition information).\n     */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\nexport var CloudProviderValues = {\n    /** Alibaba Cloud. */\n    ALIBABA_CLOUD: 'alibaba_cloud',\n    /** Amazon Web Services. */\n    AWS: 'aws',\n    /** Microsoft Azure. */\n    AZURE: 'azure',\n    /** Google Cloud Platform. */\n    GCP: 'gcp',\n};\nexport var CloudPlatformValues = {\n    /** Alibaba Cloud Elastic Compute Service. */\n    ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n    /** Alibaba Cloud Function Compute. */\n    ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n    /** AWS Elastic Compute Cloud. */\n    AWS_EC2: 'aws_ec2',\n    /** AWS Elastic Container Service. */\n    AWS_ECS: 'aws_ecs',\n    /** AWS Elastic Kubernetes Service. */\n    AWS_EKS: 'aws_eks',\n    /** AWS Lambda. */\n    AWS_LAMBDA: 'aws_lambda',\n    /** AWS Elastic Beanstalk. */\n    AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n    /** Azure Virtual Machines. */\n    AZURE_VM: 'azure_vm',\n    /** Azure Container Instances. */\n    AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n    /** Azure Kubernetes Service. */\n    AZURE_AKS: 'azure_aks',\n    /** Azure Functions. */\n    AZURE_FUNCTIONS: 'azure_functions',\n    /** Azure App Service. */\n    AZURE_APP_SERVICE: 'azure_app_service',\n    /** Google Cloud Compute Engine (GCE). */\n    GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n    /** Google Cloud Run. */\n    GCP_CLOUD_RUN: 'gcp_cloud_run',\n    /** Google Cloud Kubernetes Engine (GKE). */\n    GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n    /** Google Cloud Functions (GCF). */\n    GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n    /** Google Cloud App Engine (GAE). */\n    GCP_APP_ENGINE: 'gcp_app_engine',\n};\nexport var AwsEcsLaunchtypeValues = {\n    /** ec2. */\n    EC2: 'ec2',\n    /** fargate. */\n    FARGATE: 'fargate',\n};\nexport var HostArchValues = {\n    /** AMD64. */\n    AMD64: 'amd64',\n    /** ARM32. */\n    ARM32: 'arm32',\n    /** ARM64. */\n    ARM64: 'arm64',\n    /** Itanium. */\n    IA64: 'ia64',\n    /** 32-bit PowerPC. */\n    PPC32: 'ppc32',\n    /** 64-bit PowerPC. */\n    PPC64: 'ppc64',\n    /** 32-bit x86. */\n    X86: 'x86',\n};\nexport var OsTypeValues = {\n    /** Microsoft Windows. */\n    WINDOWS: 'windows',\n    /** Linux. */\n    LINUX: 'linux',\n    /** Apple Darwin. */\n    DARWIN: 'darwin',\n    /** FreeBSD. */\n    FREEBSD: 'freebsd',\n    /** NetBSD. */\n    NETBSD: 'netbsd',\n    /** OpenBSD. */\n    OPENBSD: 'openbsd',\n    /** DragonFly BSD. */\n    DRAGONFLYBSD: 'dragonflybsd',\n    /** HP-UX (Hewlett Packard Unix). */\n    HPUX: 'hpux',\n    /** AIX (Advanced Interactive eXecutive). */\n    AIX: 'aix',\n    /** Oracle Solaris. */\n    SOLARIS: 'solaris',\n    /** IBM z/OS. */\n    Z_OS: 'z_os',\n};\nexport var TelemetrySdkLanguageValues = {\n    /** cpp. */\n    CPP: 'cpp',\n    /** dotnet. */\n    DOTNET: 'dotnet',\n    /** erlang. */\n    ERLANG: 'erlang',\n    /** go. */\n    GO: 'go',\n    /** java. */\n    JAVA: 'java',\n    /** nodejs. */\n    NODEJS: 'nodejs',\n    /** php. */\n    PHP: 'php',\n    /** python. */\n    PYTHON: 'python',\n    /** ruby. */\n    RUBY: 'ruby',\n    /** webjs. */\n    WEBJS: 'webjs',\n};\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { VERSION } from '../../version';\nimport { TelemetrySdkLanguageValues, SemanticResourceAttributes, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport var SDK_INFO = (_a = {},\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_NAME] = 'opentelemetry',\n    _a[SemanticResourceAttributes.PROCESS_RUNTIME_NAME] = 'browser',\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE] = TelemetrySdkLanguageValues.WEBJS,\n    _a[SemanticResourceAttributes.TELEMETRY_SDK_VERSION] = VERSION,\n    _a);\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer) { }\n//# sourceMappingURL=timer-util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nvar CompositePropagator = /** @class */ (function () {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    function CompositePropagator(config) {\n        if (config === void 0) { config = {}; }\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(function (p) { return (typeof p.fields === 'function' ? p.fields() : []); })\n            .reduce(function (x, y) { return x.concat(y); }, [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    CompositePropagator.prototype.inject = function (context, carrier, setter) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._propagators), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propagator = _c.value;\n                try {\n                    propagator.inject(context, carrier, setter);\n                }\n                catch (err) {\n                    diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    CompositePropagator.prototype.extract = function (context, carrier, getter) {\n        return this._propagators.reduce(function (ctx, propagator) {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(\"Failed to inject with \" + propagator.constructor.name + \". Err: \" + err.message);\n            }\n            return ctx;\n        }, context);\n    };\n    CompositePropagator.prototype.fields = function () {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    };\n    return CompositePropagator;\n}());\nexport { CompositePropagator };\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceState = /** @class */ (function () {\n    function TraceState(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceState.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceState.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceState.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceState.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceState.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceState.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceState.prototype._clone = function () {\n        var traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceState;\n}());\nexport { TraceState };\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nvar RPC_METADATA_KEY = createContextKey('OpenTelemetry SDK Context Key RPC_METADATA');\nexport var RPCType;\n(function (RPCType) {\n    RPCType[\"HTTP\"] = \"http\";\n})(RPCType || (RPCType = {}));\nexport function setRPCMetadata(context, meta) {\n    return context.setValue(RPC_METADATA_KEY, meta);\n}\nexport function deleteRPCMetadata(context) {\n    return context.deleteValue(RPC_METADATA_KEY);\n}\nexport function getRPCMetadata(context) {\n    return context.getValue(RPC_METADATA_KEY);\n}\n//# sourceMappingURL=rpc-metadata.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nvar objectTag = '[object Object]';\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\nvar funcProto = Function.prototype;\nvar funcToString = funcProto.toString;\nvar objectCtorString = funcToString.call(Object);\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nvar nativeObjectToString = objectProto.toString;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n        return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString);\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return symToStringTag && symToStringTag in Object(value)\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    var unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nvar AlwaysOnSampler = /** @class */ (function () {\n    function AlwaysOnSampler() {\n    }\n    AlwaysOnSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    };\n    AlwaysOnSampler.prototype.toString = function () {\n        return 'AlwaysOnSampler';\n    };\n    return AlwaysOnSampler;\n}());\nexport { AlwaysOnSampler };\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nvar ParentBasedSampler = /** @class */ (function () {\n    function ParentBasedSampler(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler();\n    }\n    ParentBasedSampler.prototype.shouldSample = function (context, traceId, spanName, spanKind, attributes, links) {\n        var parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    };\n    ParentBasedSampler.prototype.toString = function () {\n        return \"ParentBased{root=\" + this._root.toString() + \", remoteParentSampled=\" + this._remoteParentSampled.toString() + \", remoteParentNotSampled=\" + this._remoteParentNotSampled.toString() + \", localParentSampled=\" + this._localParentSampled.toString() + \", localParentNotSampled=\" + this._localParentNotSampled.toString() + \"}\";\n    };\n    return ParentBasedSampler;\n}());\nexport { ParentBasedSampler };\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision, isValidTraceId, } from '@opentelemetry/api';\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nvar TraceIdRatioBasedSampler = /** @class */ (function () {\n    function TraceIdRatioBasedSampler(_ratio) {\n        if (_ratio === void 0) { _ratio = 0; }\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    TraceIdRatioBasedSampler.prototype.shouldSample = function (context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    };\n    TraceIdRatioBasedSampler.prototype.toString = function () {\n        return \"TraceIdRatioBased{\" + this._ratio + \"}\";\n    };\n    TraceIdRatioBasedSampler.prototype._normalize = function (ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    };\n    TraceIdRatioBasedSampler.prototype._accumulate = function (traceId) {\n        var accumulation = 0;\n        for (var i = 0; i < traceId.length / 8; i++) {\n            var pos = i * 8;\n            var part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    };\n    return TraceIdRatioBasedSampler;\n}());\nexport { TraceIdRatioBasedSampler };\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isPlainObject } from './lodash.merge';\nvar MAX_LEVEL = 20;\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var result = args.shift();\n    var objects = new WeakMap();\n    while (args.length > 0) {\n        result = mergeTwoObjects(result, args.shift(), 0, objects);\n    }\n    return result;\n}\nfunction takeValue(value) {\n    if (isArray(value)) {\n        return value.slice();\n    }\n    return value;\n}\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(one, two, level, objects) {\n    if (level === void 0) { level = 0; }\n    var result;\n    if (level > MAX_LEVEL) {\n        return undefined;\n    }\n    level++;\n    if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n        result = takeValue(two);\n    }\n    else if (isArray(one)) {\n        result = one.slice();\n        if (isArray(two)) {\n            for (var i = 0, j = two.length; i < j; i++) {\n                result.push(takeValue(two[i]));\n            }\n        }\n        else if (isObject(two)) {\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                result[key] = takeValue(two[key]);\n            }\n        }\n    }\n    else if (isObject(one)) {\n        if (isObject(two)) {\n            if (!shouldMerge(one, two)) {\n                return two;\n            }\n            result = Object.assign({}, one);\n            var keys = Object.keys(two);\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var key = keys[i];\n                var twoValue = two[key];\n                if (isPrimitive(twoValue)) {\n                    if (typeof twoValue === 'undefined') {\n                        delete result[key];\n                    }\n                    else {\n                        // result[key] = takeValue(twoValue);\n                        result[key] = twoValue;\n                    }\n                }\n                else {\n                    var obj1 = result[key];\n                    var obj2 = twoValue;\n                    if (wasObjectReferenced(one, key, objects) ||\n                        wasObjectReferenced(two, key, objects)) {\n                        delete result[key];\n                    }\n                    else {\n                        if (isObject(obj1) && isObject(obj2)) {\n                            var arr1 = objects.get(obj1) || [];\n                            var arr2 = objects.get(obj2) || [];\n                            arr1.push({ obj: one, key: key });\n                            arr2.push({ obj: two, key: key });\n                            objects.set(obj1, arr1);\n                            objects.set(obj2, arr2);\n                        }\n                        result[key] = mergeTwoObjects(result[key], twoValue, level, objects);\n                    }\n                }\n            }\n        }\n        else {\n            result = two;\n        }\n    }\n    return result;\n}\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(obj, key, objects) {\n    var arr = objects.get(obj[key]) || [];\n    for (var i = 0, j = arr.length; i < j; i++) {\n        var info = arr[i];\n        if (info.key === key && info.obj === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isObject(value) {\n    return (!isPrimitive(value) &&\n        !isArray(value) &&\n        !isFunction(value) &&\n        typeof value === 'object');\n}\nfunction isPrimitive(value) {\n    return (typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        typeof value === 'undefined' ||\n        value instanceof Date ||\n        value instanceof RegExp ||\n        value === null);\n}\nfunction shouldMerge(one, two) {\n    if (!isPlainObject(one) || !isPlainObject(two)) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=merge.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(url, ignoredUrls) {\n    var e_1, _a;\n    if (!ignoredUrls) {\n        return false;\n    }\n    try {\n        for (var ignoredUrls_1 = __values(ignoredUrls), ignoredUrls_1_1 = ignoredUrls_1.next(); !ignoredUrls_1_1.done; ignoredUrls_1_1 = ignoredUrls_1.next()) {\n            var ignoreUrl = ignoredUrls_1_1.value;\n            if (urlMatches(url, ignoreUrl)) {\n                return true;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (ignoredUrls_1_1 && !ignoredUrls_1_1.done && (_a = ignoredUrls_1.return)) _a.call(ignoredUrls_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return false;\n}\n//# sourceMappingURL=url.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\n//# sourceMappingURL=wrap.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        get: function () {\n            return this._promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Deferred.prototype.resolve = function (val) {\n        this._resolve(val);\n    };\n    Deferred.prototype.reject = function (err) {\n        this._reject(err);\n    };\n    return Deferred;\n}());\nexport { Deferred };\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nvar BindOnceFuture = /** @class */ (function () {\n    function BindOnceFuture(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n        this._isCalled = false;\n        this._deferred = new Deferred();\n    }\n    Object.defineProperty(BindOnceFuture.prototype, \"isCalled\", {\n        get: function () {\n            return this._isCalled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BindOnceFuture.prototype, \"promise\", {\n        get: function () {\n            return this._deferred.promise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BindOnceFuture.prototype.call = function () {\n        var _a;\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve((_a = this._callback).call.apply(_a, __spreadArray([this._that], __read(args), false))).then(function (val) { return _this._deferred.resolve(val); }, function (err) { return _this._deferred.reject(err); });\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    };\n    return BindOnceFuture;\n}());\nexport { BindOnceFuture };\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './baggage/propagation/W3CBaggagePropagator';\nexport * from './common/anchored-clock';\nexport * from './common/attributes';\nexport * from './common/global-error-handler';\nexport * from './common/logging-error-handler';\nexport * from './common/time';\nexport * from './common/types';\nexport * from './ExportResult';\nexport * from './version';\nimport * as baggageUtils_1 from './baggage/utils';\nexport { baggageUtils_1 as baggageUtils };\nexport * from './platform';\nexport * from './propagation/composite';\nexport * from './trace/W3CTraceContextPropagator';\nexport * from './trace/IdGenerator';\nexport * from './trace/rpc-metadata';\nexport * from './trace/sampler/AlwaysOffSampler';\nexport * from './trace/sampler/AlwaysOnSampler';\nexport * from './trace/sampler/ParentBasedSampler';\nexport * from './trace/sampler/TraceIdRatioBasedSampler';\nexport * from './trace/suppress-tracing';\nexport * from './trace/TraceState';\nexport * from './utils/environment';\nexport * from './utils/merge';\nexport * from './utils/sampling';\nexport * from './utils/url';\nexport * from './utils/wrap';\nexport * from './utils/callback';\nexport * from './version';\nimport { _export } from './internal/exporter';\nexport var internal = {\n    _export: _export,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context } from '@opentelemetry/api';\nimport { suppressTracing } from '../trace/suppress-tracing';\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppresion of Traces.\n */\nexport function _export(exporter, arg) {\n    return new Promise(function (resolve) {\n        // prevent downstream exporter calls from generating spans\n        context.with(suppressTracing(context.active()), function () {\n            exporter.export(arg, function (result) {\n                resolve(result);\n            });\n        });\n    });\n}\n//# sourceMappingURL=exporter.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._toZipkinAnnotations = exports._toZipkinTags = exports.toZipkinSpan = exports.defaultStatusErrorTagName = exports.defaultStatusCodeTagName = void 0;\nconst api = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst zipkinTypes = require(\"./types\");\nconst ZIPKIN_SPAN_KIND_MAPPING = {\n    [api.SpanKind.CLIENT]: zipkinTypes.SpanKind.CLIENT,\n    [api.SpanKind.SERVER]: zipkinTypes.SpanKind.SERVER,\n    [api.SpanKind.CONSUMER]: zipkinTypes.SpanKind.CONSUMER,\n    [api.SpanKind.PRODUCER]: zipkinTypes.SpanKind.PRODUCER,\n    // When absent, the span is local.\n    [api.SpanKind.INTERNAL]: undefined,\n};\nexports.defaultStatusCodeTagName = 'otel.status_code';\nexports.defaultStatusErrorTagName = 'error';\n/**\n * Translate OpenTelemetry ReadableSpan to ZipkinSpan format\n * @param span Span to be translated\n */\nfunction toZipkinSpan(span, serviceName, statusCodeTagName, statusErrorTagName) {\n    const zipkinSpan = {\n        traceId: span.spanContext().traceId,\n        parentId: span.parentSpanId,\n        name: span.name,\n        id: span.spanContext().spanId,\n        kind: ZIPKIN_SPAN_KIND_MAPPING[span.kind],\n        timestamp: (0, core_1.hrTimeToMicroseconds)(span.startTime),\n        duration: (0, core_1.hrTimeToMicroseconds)(span.duration),\n        localEndpoint: { serviceName },\n        tags: _toZipkinTags(span.attributes, span.status, statusCodeTagName, statusErrorTagName, span.resource),\n        annotations: span.events.length\n            ? _toZipkinAnnotations(span.events)\n            : undefined,\n    };\n    return zipkinSpan;\n}\nexports.toZipkinSpan = toZipkinSpan;\n/** Converts OpenTelemetry SpanAttributes and SpanStatus to Zipkin Tags format. */\nfunction _toZipkinTags(attributes, status, statusCodeTagName, statusErrorTagName, resource) {\n    const tags = {};\n    for (const key of Object.keys(attributes)) {\n        tags[key] = String(attributes[key]);\n    }\n    if (status.code !== api.SpanStatusCode.UNSET) {\n        tags[statusCodeTagName] = String(api.SpanStatusCode[status.code]);\n    }\n    if (status.code === api.SpanStatusCode.ERROR && status.message) {\n        tags[statusErrorTagName] = status.message;\n    }\n    Object.keys(resource.attributes).forEach(name => (tags[name] = String(resource.attributes[name])));\n    return tags;\n}\nexports._toZipkinTags = _toZipkinTags;\n/**\n * Converts OpenTelemetry Events to Zipkin Annotations format.\n */\nfunction _toZipkinAnnotations(events) {\n    return events.map(event => ({\n        timestamp: (0, core_1.hrTimeToMicroseconds)(event.time),\n        value: event.name,\n    }));\n}\nexports._toZipkinAnnotations = _toZipkinAnnotations;\n//# sourceMappingURL=transform.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpanKind = void 0;\n/**\n * When present, kind clarifies timestamp, duration and remoteEndpoint. When\n * absent, the span is local or incomplete. Unlike client and server, there\n * is no direct critical path latency relationship between producer and\n * consumer spans.\n * `CLIENT`\n *   timestamp is the moment a request was sent to the server.\n *   duration is the delay until a response or an error was received.\n *   remoteEndpoint is the server.\n * `SERVER`\n *   timestamp is the moment a client request was received.\n *   duration is the delay until a response was sent or an error.\n *   remoteEndpoint is the client.\n * `PRODUCER`\n *   timestamp is the moment a message was sent to a destination.\n *   duration is the delay sending the message, such as batching.\n *   remoteEndpoint is the broker.\n * `CONSUMER`\n *   timestamp is the moment a message was received from an origin.\n *   duration is the delay consuming the message, such as from backlog.\n *   remoteEndpoint - Represents the broker. Leave serviceName absent if unknown.\n */\nvar SpanKind;\n(function (SpanKind) {\n    SpanKind[\"CLIENT\"] = \"CLIENT\";\n    SpanKind[\"SERVER\"] = \"SERVER\";\n    SpanKind[\"CONSUMER\"] = \"CONSUMER\";\n    SpanKind[\"PRODUCER\"] = \"PRODUCER\";\n})(SpanKind = exports.SpanKind || (exports.SpanKind = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractAppName = extractAppName;\nexports.versionLabel = exports.username = exports.splunkdPath = exports.serverTimezoneInfo = exports.rootPath = exports.portNumber = exports.locale = exports.config = exports.buildPushNumber = exports.buildNumber = exports.appBuild = exports.app = exports.isAvailable = exports.CSRFToken = void 0;\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _cookie = require(\"@splunk/ui-utils/cookie\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * A set of constants describing the server environment. If window.$C isn't defined, most of the\n * values on this page are also undefined.\n *\n * The constants may be imported independently, such as:\n * ```\n * import { buildNumber, locale, rootPath } from '@splunk/splunk-utils/config';\n * @file\n */\n\n/* global global */\n// If this is running in Node, the root is the `global` object. If it's running in the browser,\n// root is the `window` object.\nvar root = typeof window === 'undefined' ? global : window;\n/**\n * A function to get a $C prop. Returns undefined if $C isn't available.\n * @private\n */\n\nfunction get$CEntry(prop) {\n  return (0, _get[\"default\"])(root, ['$C', prop]);\n}\n/**\n * The CSRF token. This may be `null` if the token isn't found in the cookie.\n *\n * @constant\n *\n * @public\n */\n\n\nvar CSRFToken = (0, _cookie.getEntry)(\"splunkweb_csrf_token_\".concat(get$CEntry('MRSPARKLE_PORT_NUMBER')));\n/**\n * If `window.$C` is undefined or invalid, isAvailable is `false`.\n * @constant\n * @public\n */\n\nexports.CSRFToken = CSRFToken;\nvar isAvailable = !!get$CEntry('SPLUNKD_PATH');\n/**\n * Extracts app name from the URL. To enable testing, this function is exported and pathname\n * can be overridden.\n * @private\n */\n\nexports.isAvailable = isAvailable;\n\nfunction extractAppName() {\n  var pathname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _get[\"default\"])(root, ['document', 'location', 'pathname'], '');\n  var pathMatch = pathname.match(/\\w\\w.\\w\\w\\/(app|manager)\\/([^/]+)/);\n  return pathMatch ? pathMatch[2] : undefined;\n}\n/**\n * The name of the current app as shown in the URL (not the display name).\n * @constant\n * @public\n */\n\n\nvar app = extractAppName();\n/**\n * The build number of the current app.\n * @constant\n * @public\n */\n\nexports.app = app;\nvar appBuild = get$CEntry('APP_BUILD');\n/**\n * A hash string of the current build.\n * @constant\n * @type {string}\n * @public\n */\n\nexports.appBuild = appBuild;\nvar buildNumber = get$CEntry('BUILD_NUMBER');\n/**\n * A incremented number configured per instance. Defaults to 0.\n * @constant\n * @public\n */\n\nexports.buildNumber = buildNumber;\nvar buildPushNumber = get$CEntry('BUILD_PUSH_NUMBER');\n/**\n * The full object of window.$C.\n * @constant\n * @public\n */\n\nexports.buildPushNumber = buildPushNumber;\nvar config = (0, _get[\"default\"])(root, '$C');\n/**\n * The current locale, such as \"en-US\".\n * @constant\n * @public\n */\n\nexports.config = config;\nvar locale = get$CEntry('LOCALE');\n/**\n * The port that Splunk Web is using. Defaults to 8000.\n * @constant\n * @public\n */\n\nexports.locale = locale;\nvar portNumber = get$CEntry('MRSPARKLE_PORT_NUMBER');\n/**\n * Splunk may not be running in the root directory, so the locale may not be the first element\n * in the pathname. If it is running in the root directory, ```rootPath``` is an empty\n * string. Otherwise it returns the root. For example, in the page\n * ```\n * http://splunk.domain.com/my-root-dir/en-US/app/search/search\n * ```\n * ```rootPath``` is set to ```'my-root-dir'```.\n * @constant\n * @public\n */\n\nexports.portNumber = portNumber;\nvar rootPath = get$CEntry('MRSPARKLE_ROOT_PATH');\n/**\n * The serialized Splunk Enterprise time zone data. This can be parsed for use in formatting Epoch times\n * on the client.\n * @constant\n * @public\n */\n\nexports.rootPath = rootPath;\nvar serverTimezoneInfo = get$CEntry('SERVER_ZONEINFO');\n/**\n * The Splunk Web proxing to splunkd, such as ```/en-US/splunkd/__raw```.\n * @constant\n * @public\n */\n\nexports.serverTimezoneInfo = serverTimezoneInfo;\nvar splunkdPath = get$CEntry('SPLUNKD_PATH');\n/**\n * The username of the current user.\n * @constant\n * @public\n */\n\nexports.splunkdPath = splunkdPath;\nvar username = get$CEntry('USERNAME');\n/**\n * The version label of splunkd.\n * @constant\n * @public\n */\n\nexports.username = username;\nvar versionLabel = get$CEntry('VERSION_LABEL');\nexports.versionLabel = versionLabel;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEntry = getEntry;\n\n/* eslint-disable import/prefer-default-export */\n\n/**\n * Retrieves the cookie value for the reference name passed in.\n * This can be `null` if the token or the reference name is not found in the cookie.\n *\n * For example:\n * ```\n *    const CSRFToken = getEntry('splunkweb_csrf_token_8000');\n * ```\n *\n * @param {String} name Reference to the name in the cookie.\n *\n * @returns {String|null} If found, returns the cookie value associated with the name; null otherwise.\n *\n * @public\n *\n */\nfunction getEntry(name) {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n\n  var regex = new RegExp(\"(^|; ?)\".concat(name, \"=([^;]+)\"));\n  var value = null;\n\n  try {\n    var match = document.cookie.match(regex);\n    value = match ? match[2] : null;\n  } catch (e) {// no-op, let `value` remain null\n  }\n\n  return value;\n}","/*!\n * Copyright © 2018 Splunk Inc.\n * SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or\n * in part without a valid written license from Splunk Inc. is PROHIBITED.\n */\n/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 579:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"K\": () => (/* binding */ AUTO_ATTRIBUTES),\n/* harmony export */   \"L\": () => (/* binding */ MANUAL_ATTRIBUTES)\n/* harmony export */ });\n/**\n * Default attributes that should be attached to every tag that is manually reported\n */\nconst MANUAL_ATTRIBUTES = {\n  'splunk.telemetryType': 'manual'\n};\n/**\n * Default attributes that should be attached to every tag that is autocaptured\n */\n\nconst AUTO_ATTRIBUTES = {\n  'splunk.telemetryType': 'autocapture'\n};\n\n/***/ }),\n\n/***/ 902:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"R\": () => (/* binding */ Obfuscator)\n/* harmony export */ });\n/* harmony import */ var _obfuscate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(942);\n/* eslint-disable no-param-reassign */\n\nconst AUTH_URL_REGEX = new RegExp('http.*.splunk.com/.*\\\\?code');\nconst TENANT_KEY = 'tenant';\n\nfunction looksLikeTenant(tenant, tenantRegexes, key, value) {\n  if (key === TENANT_KEY) {\n    return true;\n  }\n\n  if (tenant === null || tenant === undefined) {\n    return false;\n  }\n\n  return tenantRegexes.some(regex => {\n    if (value.match(regex)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nclass Obfuscator {\n  constructor(obfuscateArgs) {\n    if (obfuscateArgs.shouldRemovePII) {\n      this.obfuscateFn = _obfuscate__WEBPACK_IMPORTED_MODULE_0__/* .obfuscate */ .H;\n    } else {\n      this.obfuscateFn = _obfuscate__WEBPACK_IMPORTED_MODULE_0__/* .identity */ .y;\n    }\n\n    this.userDefinedRedactFn = obfuscateArgs.userDefinedRedactFn;\n    this.obfuscateAttributes = [];\n    this.shouldRemoveQueryParams = obfuscateArgs.shouldRemoveQueryParams;\n  }\n\n  obfuscate(data) {\n    return this.obfuscateFn(data);\n  }\n\n  setTenant(tenant) {\n    this.tenant = tenant;\n    this.tenantUrlRegexes = [new RegExp(\"http.*.splunk.com.*\" + tenant), new RegExp(\".*\" + tenant + \".*splunk\")];\n    this.obfuscateAttributes.push(tenant);\n  }\n\n  setUser(user) {\n    this.user = user;\n    this.obfuscateAttributes.push(user);\n\n    if (user) {\n      const [userWithoutEmail] = user.split('@');\n      this.obfuscateAttributes.push(userWithoutEmail);\n    }\n  }\n\n  setPIIProperties(PIIData) {\n    const userProperties = Object.keys(PIIData);\n\n    if (userProperties.length) {\n      userProperties.forEach(key => {\n        this.obfuscateAttributes.push(PIIData[key]);\n      });\n    }\n  }\n\n  clearObfuscatedAttributes() {\n    this.obfuscateAttributes.length = 0;\n  }\n\n  redactAttributes(attributes) {\n    const redactedAttributes = {};\n    Object.keys(attributes).forEach(key => {\n      const value = String(attributes[key]);\n      this.processAttribute(key, value, redactedAttributes);\n    });\n\n    if (this.userDefinedRedactFn) {\n      return this.userDefinedRedactFn(redactedAttributes);\n    }\n\n    return redactedAttributes;\n  }\n\n  obfuscateValue(value) {\n    if (!value) {\n      return '';\n    }\n\n    if (!this.tenant || !this.user) {\n      return value;\n    }\n\n    let obfuscatedValue = value;\n    this.obfuscateAttributes.forEach(attribute => {\n      obfuscatedValue = this.obfuscateString(obfuscatedValue, attribute);\n    });\n    return obfuscatedValue;\n  }\n\n  obfuscateString(str, field) {\n    return str.replace(new RegExp(field, 'g'), match => {\n      return this.obfuscate(match);\n    });\n  }\n\n  processAttribute(key, value, redactedAttributes) {\n    redactedAttributes[key] = value; // Removing all the info for authentication urls\n\n    if (value.match(AUTH_URL_REGEX)) {\n      redactedAttributes[key] = '[redacted]'; // Do not try to redact or view this further, we are done.\n\n      return;\n    } // We want to remove query params, but we still want to obfuscate the rest of the url\n    // So we are splitting the url by ? and taking the first part for url or using value for any other data\n\n\n    const obfuscateValue = key === 'location.href' && this.shouldRemoveQueryParams ? value.split('?')[0] : value;\n    let updatedValue; // if value looks like a tenant, we are obfuscating it,\n    // otherwise we process actual string and obfuscating the info\n\n    if (looksLikeTenant(this.tenant, this.tenantUrlRegexes, key, obfuscateValue) && key === TENANT_KEY) {\n      updatedValue = this.obfuscate(obfuscateValue);\n    } else {\n      updatedValue = this.obfuscateValue(obfuscateValue);\n    }\n\n    redactedAttributes[key] = updatedValue;\n  }\n\n}\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (Obfuscator)));\n\n/***/ }),\n\n/***/ 844:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"H6\": () => (/* reexport safe */ _obfuscate__WEBPACK_IMPORTED_MODULE_1__.H),\n/* harmony export */   \"RR\": () => (/* reexport safe */ _Obfuscator__WEBPACK_IMPORTED_MODULE_0__.R),\n/* harmony export */   \"yR\": () => (/* reexport safe */ _obfuscate__WEBPACK_IMPORTED_MODULE_1__.y)\n/* harmony export */ });\n/* harmony import */ var _Obfuscator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(902);\n/* harmony import */ var _obfuscate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(942);\n\n\n\n/***/ }),\n\n/***/ 942:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"y\": () => (/* binding */ identity),\n  \"H\": () => (/* binding */ obfuscate)\n});\n\n;// CONCATENATED MODULE: external \"crypto-js/sha256\"\nconst sha256_namespaceObject = require(\"crypto-js/sha256\");\nvar sha256_default = /*#__PURE__*/__webpack_require__.n(sha256_namespaceObject);\n;// CONCATENATED MODULE: ./src/pii/obfuscate.ts\n\nconst obfuscate = data => {\n  return sha256_default()(data).toString();\n};\nconst identity = data => data;\n\n/***/ }),\n\n/***/ 859:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"O\": () => (/* binding */ createTelemetry)\n});\n\n;// CONCATENATED MODULE: external \"@babel/runtime/helpers/defineProperty\"\nconst defineProperty_namespaceObject = require(\"@babel/runtime/helpers/defineProperty\");\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_namespaceObject);\n;// CONCATENATED MODULE: ./src/telemetry/Telemetry.ts\n\nconst ACTION_NAMES = ['identify', 'reset', 'track', 'startSpan', 'register', 'unregister'];\nclass Telemetry {\n  constructor() {\n    defineProperty_default()(this, \"onPluginReady\", null);\n\n    this.callbacksByAction = {\n      identify: new Set(),\n      reset: new Set(),\n      track: new Set(),\n      startSpan: new Set(),\n      register: new Set(),\n      unregister: new Set()\n    };\n  }\n\n  invokeCallbacks(action, ...params) {\n    const callbacks = this.callbacksByAction[action];\n    const retVal = Array.from(callbacks).map(callback => {\n      // @ts-expect-error: params is always of length at least one but the compiler\n      // does not know\n      return callback(...params);\n    });\n    return retVal;\n  }\n\n  identify({\n    tenant,\n    user,\n    piiValues\n  }) {\n    const args = {\n      tenant,\n      user,\n      piiValues\n    };\n\n    const callFunction = () => {\n      this.identify(args);\n    };\n\n    this.invokeCallbacks('identify', {\n      tenant,\n      user,\n      piiValues\n    });\n    this.onPluginReady = callFunction;\n  }\n\n  reset() {\n    this.invokeCallbacks('reset');\n  }\n\n  track(event, attributes) {\n    this.invokeCallbacks('track', event, attributes);\n  }\n\n  startSpan(event, attributes) {\n    return this.invokeCallbacks('startSpan', event, attributes)[0];\n  }\n\n  register(attributes) {\n    this.invokeCallbacks('register', attributes);\n  }\n\n  unregister(attributeNames) {\n    this.invokeCallbacks('unregister', attributeNames);\n  }\n\n  addPlugin(plugin) {\n    const disposeList = [];\n    ACTION_NAMES.forEach(actionName => {\n      if (plugin[actionName]) {\n        disposeList.push(this.on(actionName, (...params) => {\n          try {\n            const frozenParams = [];\n            params.forEach(param => {\n              frozenParams.push(Object.freeze(param));\n            }); // @ts-expect-error: params is always of length at least one but the compiler\n            // does not know\n\n            return plugin[actionName](...frozenParams);\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.error(\"Error while calling \" + actionName + \" on plugin \" + plugin.getName(), error);\n            return null;\n          }\n        }));\n      }\n    });\n\n    if (this.onPluginReady) {\n      this.onPluginReady();\n    }\n\n    return () => {\n      disposeList.forEach(dispose => {\n        dispose();\n      });\n    };\n  }\n\n  on(actionName, callback) {\n    const callbacks = this.callbacksByAction[actionName]; // const callbacks = this.callbacksByAction[actionName];\n\n    callbacks.add(callback);\n    return () => {\n      callbacks.delete(callback);\n    };\n  }\n\n}\n;// CONCATENATED MODULE: ./src/telemetry/createTelemetry.ts\n\n/**\n * Create a Telemetry object without any plugins\n * this wrapper is intentionally created for consistency\n */\n\nfunction createTelemetry() {\n  return new Telemetry();\n}\n\n/***/ }),\n\n/***/ 506:\n/***/ (() => {\n\n\n\n/***/ }),\n\n/***/ 125:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(506);\n/* harmony import */ var _attributes__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_attributes__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _attributes__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _attributes__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n/***/ }),\n\n/***/ 72:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"X\": () => (/* binding */ isInternalUser)\n/* harmony export */ });\nfunction isInternalUser(user) {\n  return user.toLowerCase().endsWith('@splunk.com') || user.toLowerCase().endsWith('@splunkcloud.com');\n}\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AUTO_ATTRIBUTES\": () => (/* reexport safe */ _attributes__WEBPACK_IMPORTED_MODULE_2__.K),\n/* harmony export */   \"MANUAL_ATTRIBUTES\": () => (/* reexport safe */ _attributes__WEBPACK_IMPORTED_MODULE_2__.L),\n/* harmony export */   \"Obfuscator\": () => (/* reexport safe */ _pii__WEBPACK_IMPORTED_MODULE_3__.RR),\n/* harmony export */   \"createTelemetry\": () => (/* reexport safe */ _telemetry_createTelemetry__WEBPACK_IMPORTED_MODULE_0__.O),\n/* harmony export */   \"identity\": () => (/* reexport safe */ _pii__WEBPACK_IMPORTED_MODULE_3__.yR),\n/* harmony export */   \"isInternalUser\": () => (/* reexport safe */ _util_isInternalUser__WEBPACK_IMPORTED_MODULE_6__.X),\n/* harmony export */   \"obfuscate\": () => (/* reexport safe */ _pii__WEBPACK_IMPORTED_MODULE_3__.H6)\n/* harmony export */ });\n/* harmony import */ var _telemetry_createTelemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(859);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(125);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"createTelemetry\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _attributes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(579);\n/* harmony import */ var _pii__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(844);\n/* harmony import */ var _pii_Obfuscator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(902);\n/* harmony import */ var _pii_obfuscate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(942);\n/* harmony import */ var _util_isInternalUser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72);\n\n\n\n\n\n\n\n})();\n\nmodule.exports = __webpack_exports__;\n/******/ })()\n;\n//# sourceMappingURL=index.js.map",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n","var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n","'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","_globalThis","globalThis","self","window","g","VERSION","re","isCompatible","ownVersion","acceptedVersions","Set","rejectedVersions","myVersionMatch","match","ownVersionParsed","globalVersion","_reject","v","add","_accept","has","globalVersionMatch","globalVersionParsed","_makeCompatibilityCheck","major","split","GLOBAL_OPENTELEMETRY_API_KEY","Symbol","for","_global","registerGlobal","type","instance","diag","allowOverride","_a","api","version","err","Error","error","stack","message","debug","getGlobal","_b","unregisterGlobal","DiagLogLevel","DiagComponentLogger","props","this","_namespace","namespace","prototype","args","_i","arguments","length","logProxy","info","warn","verbose","funcName","logger","unshift","apply","DiagAPI","_logProxy","setLogger","logLevel","INFO","oldLogger","newLogger","maxLevel","_filterFunc","theLevel","theFunc","bind","NONE","ALL","ERROR","WARN","DEBUG","VERBOSE","createLogLevelDiagLogger","disable","createComponentLogger","options","_instance","BaggageImpl","entries","_entries","Map","getEntry","entry","get","assign","getAllEntries","Array","from","map","setEntry","newBaggage","set","removeEntry","delete","removeEntries","keys","keys_1","clear","baggageEntryMetadataSymbol","createBaggage","baggageEntryMetadataFromString","str","__TYPE__","toString","consoleMap","n","c","DiagConsoleLogger","_consoleFunc","console","log","i","defaultTextMapGetter","carrier","defaultTextMapSetter","createContextKey","description","TraceFlags","ROOT_CONTEXT","BaseContext","parentContext","_currentContext","getValue","setValue","context","deleteValue","NoopContextManager","active","with","_context","fn","thisArg","call","to","il","j","__spreadArray","target","enable","NOOP_CONTEXT_MANAGER","ContextAPI","getInstance","setGlobalContextManager","contextManager","_getContextManager","INVALID_SPANID","INVALID_TRACEID","INVALID_SPAN_CONTEXT","traceId","spanId","traceFlags","NonRecordingSpan","_spanContext","spanContext","setAttribute","_key","_value","setAttributes","_attributes","addEvent","_name","setStatus","_status","updateName","end","_endTime","isRecording","recordException","_exception","_time","SPAN_KEY","getSpan","undefined","setSpan","span","deleteSpan","setSpanContext","getSpanContext","VALID_TRACEID_REGEX","VALID_SPANID_REGEX","isValidTraceId","test","isValidSpanId","isSpanContextValid","wrapSpanContext","SamplingDecision","SpanKind","SpanStatusCode","NoopTracer","startSpan","name","Boolean","root","parentFromContext","startActiveSpan","arg2","arg3","arg4","opts","ctx","contextWithSpanSet","NOOP_TRACER","ProxyTracer","_provider","_getTracer","_options","_fn","tracer","Reflect","_delegate","getDelegateTracer","NOOP_TRACER_PROVIDER","NoopTracerProvider","getTracer","_version","ProxyTracerProvider","getDelegate","setDelegate","delegate","TraceAPI","_proxyTracerProvider","setGlobalTracerProvider","provider","success","getTracerProvider","NoopTextMapPropagator","inject","_carrier","extract","fields","BAGGAGE_KEY","getBaggage","setBaggage","baggage","deleteBaggage","NOOP_TEXT_MAP_PROPAGATOR","PropagationAPI","setGlobalPropagator","propagator","setter","_getGlobalPropagator","getter","trace","propagation","SUPPRESS_TRACING_KEY","suppressTracing","isTracingSuppressed","BAGGAGE_HEADER","W3CBaggagePropagator","keyPairs","encodeURIComponent","getKeyPairs","filter","pair","slice","headerValue","reduce","hValue","current","serializeKeyPairs","forEach","keyPair","valueProps","keyPairPart","shift","metadata","decodeURIComponent","trim","join","parsePairKeyValue","baggageEntry","sanitizeAttributes","attributes","out","k","isAttributeValue","isArray","val","arr","arr_1","element","isValidPrimitiveAttributeValue","isHomogeneousAttributeValueArray","TracesSamplerValues","delegateHandler","ex","JSON","stringify","result","getOwnPropertyNames","propertyName","String","getPrototypeOf","flattenException","stringifyException","globalErrorHandler","DEFAULT_LIST_SEPARATOR","ENVIRONMENT_NUMBERS_KEYS","isEnvVarANumber","indexOf","ENVIRONMENT_LISTS_KEYS","isEnvVarAList","DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT","Infinity","DEFAULT_ATTRIBUTE_COUNT_LIMIT","DEFAULT_ENVIRONMENT","CONTAINER_NAME","ECS_CONTAINER_METADATA_URI_V4","ECS_CONTAINER_METADATA_URI","HOSTNAME","KUBERNETES_SERVICE_HOST","NAMESPACE","OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_EXPORTER_JAEGER_AGENT_HOST","OTEL_EXPORTER_JAEGER_ENDPOINT","OTEL_EXPORTER_JAEGER_PASSWORD","OTEL_EXPORTER_JAEGER_USER","OTEL_EXPORTER_OTLP_ENDPOINT","OTEL_EXPORTER_OTLP_TRACES_ENDPOINT","OTEL_EXPORTER_OTLP_METRICS_ENDPOINT","OTEL_EXPORTER_OTLP_HEADERS","OTEL_EXPORTER_OTLP_TRACES_HEADERS","OTEL_EXPORTER_OTLP_METRICS_HEADERS","OTEL_EXPORTER_ZIPKIN_ENDPOINT","OTEL_LOG_LEVEL","OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS","OTEL_RESOURCE_ATTRIBUTES","OTEL_SERVICE_NAME","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_TRACES_EXPORTER","OTEL_TRACES_SAMPLER","ParentBasedAlwaysOn","OTEL_TRACES_SAMPLER_ARG","parseNumber","environment","values","min","max","Number","isNaN","parseStringList","output","input","separator","givenValue","logLevelMap","setLogLevelFromEnv","toUpperCase","getEnv","globalEnv","env","parseEnvironment","RandomIdGenerator","generateTraceId","getIdGenerator","generateSpanId","SHARED_CHAR_CODES_ARRAY","bytes","Math","floor","random","fromCharCode","otperformance","performance","SDK_INFO","Te","unrefTimer","_timer","ExportResultCode","NANOSECOND_DIGITS","SECOND_TO_NANOSECONDS","pow","numberToHrtime","epochMillis","epochSeconds","seconds","trunc","toFixed","getTimeOrigin","timeOrigin","perf","timing","fetchStart","hrTime","performanceNow","now","nanos","timeInputToHrTime","time","isTimeInputHrTime","Date","getTime","TypeError","hrTimeDuration","startTime","endTime","hrTimeToNanoseconds","hrTimeToMicroseconds","round","isTimeInput","RPCType","CompositePropagator","config","_propagators","propagators","_fields","p","x","y","concat","constructor","VALID_KEY_CHAR_RANGE","VALID_KEY_REGEX","RegExp","VALID_VALUE_BASE_REGEX","INVALID_VALUE_COMMA_EQUAL_REGEX","TraceState","rawTraceState","_internalState","_parse","traceState","_clone","unset","serialize","_this","_keys","agg","push","reverse","part","listMember","validateKey","validateValue","size","TRACE_PARENT_HEADER","TRACE_STATE_HEADER","TRACE_PARENT_REGEX","W3CTraceContextPropagator","traceParent","traceParentHeader","exec","parseInt","parseTraceParent","isRemote","traceStateHeader","state","func","transform","AlwaysOffSampler","shouldSample","decision","AlwaysOnSampler","ParentBasedSampler","_c","_d","_root","_remoteParentSampled","remoteParentSampled","_remoteParentNotSampled","remoteParentNotSampled","_localParentSampled","localParentSampled","_localParentNotSampled","localParentNotSampled","spanName","spanKind","links","TraceIdRatioBasedSampler","_ratio","_normalize","_upperBound","_accumulate","ratio","accumulation","pos","objectTag","nullTag","undefinedTag","funcToString","Function","objectCtorString","getPrototype","arg","objectProto","hasOwnProperty","symToStringTag","toStringTag","nativeObjectToString","isPlainObject","isObjectLike","isOwn","tag","unmasked","e","getRawTag","objectToString","baseGetTag","proto","Ctor","MAX_LEVEL","merge","objects","WeakMap","mergeTwoObjects","takeValue","one","two","level","isPrimitive","isFunction","isObject","shouldMerge","twoValue","obj1","obj2","wasObjectReferenced","arr1","arr2","urlMatches","url","urlToMatch","isUrlIgnored","ignoredUrls","ignoredUrls_1","AttributeNames","EventNames","SemanticAttributes","extendStatics","performancePaintNames","FIRST_PAINT","FIRST_CONTENTFUL_PAINT","__extends","d","b","setPrototypeOf","__proto__","__","create","DocumentLoadInstrumentation","_super","component","moduleName","init","_onDocumentLoaded","setTimeout","_collectPerformance","_addResourcesSpans","rootSpan","resources","getEntriesByType","resource","_initResourceSpan","metaElement","document","getElementsByTagName","find","getAttribute","performanceNavigationTiming","performanceTiming_1","getPerformanceNavigationEntries","traceparent","content","performancePaintTiming","_startSpan","DOCUMENT_LOAD","fetchSpan","DOCUMENT_FETCH","_endSpan","location","href","navigator","userAgent","performanceName","parentSpan","RESOURCE_FETCH","COMPONENT","_waitForPageLoad","readyState","addEventListener","removeEventListener","InstrumentationBase","Span","parentTracer","kind","parentSpanId","events","status","code","_ended","_duration","instrumentationLibrary","_spanLimits","getSpanLimits","_spanProcessor","getActiveSpanProcessor","onStart","_attributeValueLengthLimit","attributeValueLengthLimit","_isSpanEnded","attributeCountLimit","_truncateToSize","attributesOrStartTime","eventCountLimit","onEnd","exception","_truncateToLimitUtil","limit","substr","FALLBACK_OTEL_TRACES_SAMPLER","DEFAULT_RATIO","DEFAULT_CONFIG","sampler","buildSamplerFromEnv","forceFlushTimeoutMillis","generalLimits","spanLimits","linkCountLimit","getSamplerProbabilityFromEnv","probability","ForceFlushState","Tracer","_tracerProvider","userConfig","perInstanceDefaults","localConfig","_sampler","_generalLimits","_idGenerator","idGenerator","getParent","samplingResult","getGeneralLimits","MultiSpanProcessor","_spanProcessors","forceFlush","promises","spanProcessor","Promise","resolve","all","then","catch","shutdown","reject","NoopSpanProcessor","_span","BatchSpanProcessorBase","_exporter","_finishedSpans","_isShutdown","_shuttingDownPromise","_maxExportBatchSize","maxExportBatchSize","_maxQueueSize","maxQueueSize","_scheduledDelayMillis","scheduledDelayMillis","_exportTimeoutMillis","exportTimeoutMillis","_flushAll","_addToBuffer","onShutdown","_maybeStartTimer","ceil","_flushOneBatch","_clearTimer","timer","export","splice","clearTimeout","BatchSpanProcessor","onInit","disableAutoFlushOnDocumentHide","_visibilityChangeListener","visibilityState","_pageHideListener","PerformanceTimingNames","a","BasicTracerProvider","_registeredSpanProcessors","_tracers","mergedConfig","_config","defaultExporter","_buildExporterFromEnv","batchProcessor","activeSpanProcessor","addSpanProcessor","register","_buildPropagatorFromEnv","timeout","timeoutInterval","resolved","results","errors","_getPropagator","_registeredPropagators","_getSpanExporter","_registeredExporters","uniquePropagatorNames","validPropagators","list","item","exporterName","exporter","ConsoleSpanExporter","spans","resultCallback","_sendSpans","_exportInfo","parentId","id","timestamp","duration","done","spans_1","InMemorySpanExporter","_stopped","reset","getFinishedSpans","SimpleSpanProcessor","StackContextManager","_enabled","_bindFunction","manager","contextWrapper","previousContext","getUrlNormalizingAnchor","createElement","addSpanNetworkEvent","addSpanNetworkEvents","encodedLength","decodedLength","parseUrl","WebTracerProvider","FetchInstrumentation","_usedResources","WeakSet","_tasksCount","_getConfig","_addChildSpan","corsPreFlightRequest","childSpan","_addFinalSpanAttributes","response","parsedUrl","statusText","HTTP_STATUS_TEXT","host","protocol","replace","_addHeaders","spanUrl","propagateTraceHeaderCorsUrls","propagateTraceHeaderUrls","origin","some","propagateTraceHeaderUrl","headers","_diag","Request","Headers","h","_clearResources","clearTimingResources","clearResourceTimings","_createSpan","ignoreUrls","method","_findResourceAndAddNetworkEvents","resourcesObserver","startTimeHR","endTimeHR","ignoredResources","initiatorType","urlNormalizingAnchor","filteredResources","resourceStartTime","resourceEndTime","toLowerCase","filterResourcesForSpan","mainRequest","sorted","sort","valueA","valueB","sortResources","corsPreFlightRequestEndTime","spanEndTimeHR","bestGap","spanEndTime","minTime","currentGap","findMainRequest","responseEnd","_markResourceAsUsed","spanData","observer","disconnect","_patchConstructor","original","plugin","createdSpan","_prepareSpanData","endSpanOnError","_applyAttributesAfterFetch","endSpanOnSuccess","onSuccess","resClone","clone","resClone4Hook_1","body","reader_1","getReader","read_1","read","onError","request","applyCustomAttributesOnSpan","safeExecuteInTheMiddle","PerformanceObserver","perfObsEntries","getEntries","observe","entryTypes","isWrapped","fetch","_unwrap","_wrap","MILLISECONDS_TO_NANOSECONDS","millisToHrTime","time1","time2","DEFAULT_EVENT_NAMES","defaultShouldPreventSpanCreation","UserInteractionInstrumentation","_spansData","_wrappedListeners","_eventsSpanMap","_eventNames","eventNames","_shouldPreventSpanCreation","shouldPreventSpanCreation","_checkForTimeout","task","source","hrTimeLastTimeout","_allowEventName","eventName","HTMLElement","hasAttribute","xpath","EVENT_TYPE","TARGET_ELEMENT","tagName","TARGET_XPATH","HTTP_URL","HTTP_USER_AGENT","taskCount","_decrementTask","_tryToEndSpan","_getCurrentSpan","zone","_incrementTask","addPatchedListener","on","listener","wrappedListener","listener2Type","element2patched","removePatchedListener","patched","_invokeListener","handleEvent","_patchAddEventListener","useCapture","once","patchedListener","event","_patchRemoveEventListener","_getPatchableEventTargets","EventTarget","Node","Window","_patchHistoryApi","_unpatchHistoryApi","history","_patchHistoryMethod","pathname","hash","search","urlAfter","_updateInteractionName","replaceState","pushState","back","forward","go","EVENT_NAVIGATION_NAME","_patchZoneCancelTask","currentZone","Zone","currentSpan","_shouldCountTask","_patchZoneScheduleTask","_patchZoneRunTask","applyThis","applyArgs","Event","activeZone","run","_zone","data","isPeriodic","ZoneWithPrototype","getZoneWithPrototype","runTask","scheduleTask","cancelTask","_zonePatched","XMLHttpRequestInstrumentation","_xhrMem","xhr","shouldPropagateTraceHeaders","headers_1","setRequestHeader","xhrMem","_applyAttributesAfterXHR","_addResourceObserver","PerformanceResourceTiming","createdResources","getResource","_cleanPreviousSpanInformation","callbackToRemoveEvents","METHOD_OPEN","_patchOpen","_patchSend","endSpan","sendStartTime","endSpanTimeout","EVENT_ERROR","onAbort","EVENT_ABORT","onTimeout","EVENT_TIMEOUT","onLoad","EVENT_LOAD","METHOD_SEND","unregister","XMLHttpRequest","open","send","ValueType","AggregationTemporality","NoopMeter","createHistogram","NOOP_HISTOGRAM_METRIC","createCounter","NOOP_COUNTER_METRIC","createUpDownCounter","NOOP_UP_DOWN_COUNTER_METRIC","createObservableGauge","_callback","NOOP_OBSERVABLE_GAUGE_METRIC","createObservableCounter","NOOP_OBSERVABLE_COUNTER_METRIC","createObservableUpDownCounter","NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC","NoopMetric","NoopCounterMetric","NoopUpDownCounterMetric","NoopHistogramMetric","record","NoopObservableBaseMetric","observation","observable","NOOP_METER","NOOP_METER_PROVIDER","NoopMeterProvider","getMeter","GLOBAL_METRICS_API_KEY","metrics","MetricsAPI","setGlobalMeterProvider","getMeterProvider","fallback","parseInstrumentationOptions","instrumentations","option","instrumentationName","registerInstrumentations","tracerProvider","meterProvider","instrumentation","setTracerProvider","setMeterProvider","getConfig","enabled","enableInstrumentations","disableInstrumentations","__assign","t","s","InstrumentationAbstract","instrumentationVersion","shimmer","wrap","unwrap","_massWrap","massWrap","_massUnwrap","massUnwrap","_tracer","_meter","setConfig","__awaiter","_arguments","P","generator","fulfilled","step","next","rejected","__generator","f","_","label","sent","trys","ops","verb","iterator","op","pop","execute","onFinish","preventThrowingError","safeExecuteInTheMiddleAsync","e_1","__original","__unwrap","__wrapped","Resource","empty","EMPTY","default","other","o","m","__values","e_1_1","return","r","ar","__read","baggageString","SemanticResourceAttributes","e_2","e_2_1","e_3","e_3_1","e_4","e_4_1","schemaUrl","_deprecatedClock","_performanceStartTime","_performanceOffset","_startTimeProvided","_getTime","timeStamp","inp","msDuration","parentSpanContext","link","initAttributes","loadDefaultConfig","spans_1_1","dir","depth","ExportResult","pack","l","internal","_shutdownOnce","_shutdown","_parentContext","isCalled","promise","mergeConfig","reconfigureLimits","_e","_f","_g","_h","_j","_k","_l","_m","parsedEnvConfig","isAttributeKey","arr_1_1","addHrTimes","Deferred","_promise","_resolve","BindOnceFuture","_that","_isCalled","_deferred","ENVIRONMENT_BOOLEAN_KEYS","isEnvVarABoolean","OTEL_SDK_DISABLED","OTEL_EXPORTER_JAEGER_AGENT_PORT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_OTLP_INSECURE","OTEL_EXPORTER_OTLP_TRACES_INSECURE","OTEL_EXPORTER_OTLP_METRICS_INSECURE","OTEL_EXPORTER_OTLP_CERTIFICATE","OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE","OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE","OTEL_EXPORTER_OTLP_COMPRESSION","OTEL_EXPORTER_OTLP_TRACES_COMPRESSION","OTEL_EXPORTER_OTLP_METRICS_COMPRESSION","OTEL_EXPORTER_OTLP_CLIENT_KEY","OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY","OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY","OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_PROTOCOL","OTEL_EXPORTER_OTLP_TRACES_PROTOCOL","OTEL_EXPORTER_OTLP_METRICS_PROTOCOL","OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE","parseBoolean","getEnvWithoutDefaults","process","AWS_LAMBDA_INVOKED_ARN","DB_SYSTEM","DB_CONNECTION_STRING","DB_USER","DB_JDBC_DRIVER_CLASSNAME","DB_NAME","DB_STATEMENT","DB_OPERATION","DB_MSSQL_INSTANCE_NAME","DB_CASSANDRA_KEYSPACE","DB_CASSANDRA_PAGE_SIZE","DB_CASSANDRA_CONSISTENCY_LEVEL","DB_CASSANDRA_TABLE","DB_CASSANDRA_IDEMPOTENCE","DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT","DB_CASSANDRA_COORDINATOR_ID","DB_CASSANDRA_COORDINATOR_DC","DB_HBASE_NAMESPACE","DB_REDIS_DATABASE_INDEX","DB_MONGODB_COLLECTION","DB_SQL_TABLE","EXCEPTION_TYPE","EXCEPTION_MESSAGE","EXCEPTION_STACKTRACE","EXCEPTION_ESCAPED","FAAS_TRIGGER","FAAS_EXECUTION","FAAS_DOCUMENT_COLLECTION","FAAS_DOCUMENT_OPERATION","FAAS_DOCUMENT_TIME","FAAS_DOCUMENT_NAME","FAAS_TIME","FAAS_CRON","FAAS_COLDSTART","FAAS_INVOKED_NAME","FAAS_INVOKED_PROVIDER","FAAS_INVOKED_REGION","NET_TRANSPORT","NET_PEER_IP","NET_PEER_PORT","NET_PEER_NAME","NET_HOST_IP","NET_HOST_PORT","NET_HOST_NAME","NET_HOST_CONNECTION_TYPE","NET_HOST_CONNECTION_SUBTYPE","NET_HOST_CARRIER_NAME","NET_HOST_CARRIER_MCC","NET_HOST_CARRIER_MNC","NET_HOST_CARRIER_ICC","PEER_SERVICE","ENDUSER_ID","ENDUSER_ROLE","ENDUSER_SCOPE","THREAD_ID","THREAD_NAME","CODE_FUNCTION","CODE_NAMESPACE","CODE_FILEPATH","CODE_LINENO","HTTP_METHOD","HTTP_TARGET","HTTP_HOST","HTTP_SCHEME","HTTP_STATUS_CODE","HTTP_FLAVOR","HTTP_REQUEST_CONTENT_LENGTH","HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED","HTTP_RESPONSE_CONTENT_LENGTH","HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED","HTTP_SERVER_NAME","HTTP_ROUTE","HTTP_CLIENT_IP","AWS_DYNAMODB_TABLE_NAMES","AWS_DYNAMODB_CONSUMED_CAPACITY","AWS_DYNAMODB_ITEM_COLLECTION_METRICS","AWS_DYNAMODB_PROVISIONED_READ_CAPACITY","AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY","AWS_DYNAMODB_CONSISTENT_READ","AWS_DYNAMODB_PROJECTION","AWS_DYNAMODB_LIMIT","AWS_DYNAMODB_ATTRIBUTES_TO_GET","AWS_DYNAMODB_INDEX_NAME","AWS_DYNAMODB_SELECT","AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES","AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES","AWS_DYNAMODB_EXCLUSIVE_START_TABLE","AWS_DYNAMODB_TABLE_COUNT","AWS_DYNAMODB_SCAN_FORWARD","AWS_DYNAMODB_SEGMENT","AWS_DYNAMODB_TOTAL_SEGMENTS","AWS_DYNAMODB_COUNT","AWS_DYNAMODB_SCANNED_COUNT","AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS","AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES","MESSAGING_SYSTEM","MESSAGING_DESTINATION","MESSAGING_DESTINATION_KIND","MESSAGING_TEMP_DESTINATION","MESSAGING_PROTOCOL","MESSAGING_PROTOCOL_VERSION","MESSAGING_URL","MESSAGING_MESSAGE_ID","MESSAGING_CONVERSATION_ID","MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES","MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES","MESSAGING_OPERATION","MESSAGING_CONSUMER_ID","MESSAGING_RABBITMQ_ROUTING_KEY","MESSAGING_KAFKA_MESSAGE_KEY","MESSAGING_KAFKA_CONSUMER_GROUP","MESSAGING_KAFKA_CLIENT_ID","MESSAGING_KAFKA_PARTITION","MESSAGING_KAFKA_TOMBSTONE","RPC_SYSTEM","RPC_SERVICE","RPC_METHOD","RPC_GRPC_STATUS_CODE","RPC_JSONRPC_VERSION","RPC_JSONRPC_REQUEST_ID","RPC_JSONRPC_ERROR_CODE","RPC_JSONRPC_ERROR_MESSAGE","MESSAGE_TYPE","MESSAGE_ID","MESSAGE_COMPRESSED_SIZE","MESSAGE_UNCOMPRESSED_SIZE","hasKey","parsedSpanUrl","URL","normalizeUrl","getElementXPath","optimised","nodeType","DOCUMENT_NODE","targetValue","index","parentNode","allowedTypes","CDATA_SECTION_NODE","TEXT_NODE","elements","childNodes","localName","getNodeIndex","nodeValue","ELEMENT_NODE","COMMENT_NODE","getNodeValue","CLOUD_PROVIDER","CLOUD_ACCOUNT_ID","CLOUD_REGION","CLOUD_AVAILABILITY_ZONE","CLOUD_PLATFORM","AWS_ECS_CONTAINER_ARN","AWS_ECS_CLUSTER_ARN","AWS_ECS_LAUNCHTYPE","AWS_ECS_TASK_ARN","AWS_ECS_TASK_FAMILY","AWS_ECS_TASK_REVISION","AWS_EKS_CLUSTER_ARN","AWS_LOG_GROUP_NAMES","AWS_LOG_GROUP_ARNS","AWS_LOG_STREAM_NAMES","AWS_LOG_STREAM_ARNS","CONTAINER_ID","CONTAINER_RUNTIME","CONTAINER_IMAGE_NAME","CONTAINER_IMAGE_TAG","DEPLOYMENT_ENVIRONMENT","DEVICE_ID","DEVICE_MODEL_IDENTIFIER","DEVICE_MODEL_NAME","FAAS_NAME","FAAS_ID","FAAS_VERSION","FAAS_INSTANCE","FAAS_MAX_MEMORY","HOST_ID","HOST_NAME","HOST_TYPE","HOST_ARCH","HOST_IMAGE_NAME","HOST_IMAGE_ID","HOST_IMAGE_VERSION","K8S_CLUSTER_NAME","K8S_NODE_NAME","K8S_NODE_UID","K8S_NAMESPACE_NAME","K8S_POD_UID","K8S_POD_NAME","K8S_CONTAINER_NAME","K8S_REPLICASET_UID","K8S_REPLICASET_NAME","K8S_DEPLOYMENT_UID","K8S_DEPLOYMENT_NAME","K8S_STATEFULSET_UID","K8S_STATEFULSET_NAME","K8S_DAEMONSET_UID","K8S_DAEMONSET_NAME","K8S_JOB_UID","K8S_JOB_NAME","K8S_CRONJOB_UID","K8S_CRONJOB_NAME","OS_TYPE","OS_DESCRIPTION","OS_NAME","OS_VERSION","PROCESS_PID","PROCESS_EXECUTABLE_NAME","PROCESS_EXECUTABLE_PATH","PROCESS_COMMAND","PROCESS_COMMAND_LINE","PROCESS_COMMAND_ARGS","PROCESS_OWNER","PROCESS_RUNTIME_NAME","PROCESS_RUNTIME_VERSION","PROCESS_RUNTIME_DESCRIPTION","SERVICE_NAME","SERVICE_NAMESPACE","SERVICE_INSTANCE_ID","SERVICE_VERSION","TELEMETRY_SDK_NAME","TELEMETRY_SDK_LANGUAGE","TELEMETRY_SDK_VERSION","TELEMETRY_AUTO_VERSION","WEBENGINE_NAME","WEBENGINE_VERSION","WEBENGINE_DESCRIPTION","TelemetrySdkLanguageValues","CPP","DOTNET","ERLANG","GO","JAVA","NODEJS","PHP","PYTHON","RUBY","WEBJS","__webpack_modules__","__unused_webpack_module","LIB_BUILD_VERSION","MANUAL_ATTRIBUTES","AUTO_ATTRIBUTES","sdk_trace_base_namespaceObject","defineProperty_","defineProperty_default","core_namespaceObject","transform_js_namespaceObject","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","limitLen","cap","substring","LogExporter","appName","obfuscator","sendSpans","spanCounts","rateLimiterHandle","setInterval","doExport","spansJsonArray","obfuscateValue","ended","redactAttributes","modifiedSpan","zspan","toZipkinSpan","localEndpoint","tags","truncate","modZipkinSpan","K8","severity","logEventFromSpan","SUCCESS","async","clearInterval","config_namespaceObject","ECExporter","EC_TOKEN_NAME","portNumber","cookieValue","cookie","cookies","token","baseUrl","setUrl","setToken","formToken","getToken","getUrl","setHeaders","dataToSend","optInRequired","visibility","createSplunkOtelPlugin","SCSExporter","_environment","tokenStorage","sessionStorage","getItem","tenantInfo","parse","tenant","accessToken","userParamsStorage","region","setTenant","setRegion","bearerToken","getTenant","getRegion","getEnvironment","xY","skinny_web_telemetry_","POCExporter_SCSExporter","obfuscatedToken","obfuscate","G6","DEFAULT_QUEUE_SIZE","DEFAULT_DELAY_INTERVAL","createSpanProcessor","appType","isSCSEnv","isPOCEnv","Exporter","queueSize","delay","_createSpanProcessor__WEBPACK_IMPORTED_MODULE_0__","instrumentation_namespaceObject","instrumentation_document_load_namespaceObject","instrumentation_user_interaction_namespaceObject","addErrorDetailsToSpan","shouldRemovePII","details","moreInfo","instrumentation_xml_http_request_namespaceObject","instrumentation_fetch_namespaceObject","addMatchToSpan","HeaderRegex","captureTraceParent","serverTimingValues","header","SplunkXhrPlugin","instrumentationOptions","super","HEADERS_RECEIVED","getAllResponseHeaders","st","getResponseHeader","DONE","maybeAddSCSResponse","SplunkFetchInstrumentation","fetchResponse","api_namespaceObject","sdk_trace_web_namespaceObject","external_detect_browser_namespaceObject","src_attributes","SplunkWebTracerProvider","globalAttributes","origStartSpan","browser","detect","_navigator","_window","bS","os","screen","screenSize","width","height","colorScheme","userPrefersDark","matchMedia","matches","userPrefersLight","getUserColorScheme","setGlobalAttributes","SplunkOtelPlugin_ownKeys","SplunkOtelPlugin_objectSpread","createAnalyticsId","sessionId","user","SplunkOtelPlugin","sessionManager","getName","pluginName","identify","piiValues","setUser","setPIIProperties","cleanupSessionListeners","startSession","obfuscatedUser","analyticsSessionId","getSessionId","isInternalUser","addGlobalAttributes","sessionListener","sessionChanged","newSessionId","newAnalyticsSessionId","addSessionListener","clearObfuscatedAttributes","endSession","removeGlobalAttributes","track","innerStartSpan","attributeNames","flushAttributes","removeSessionListener","Lg","maxSessionLength","isPastMaxSessionLength","createdAt","parseCookieToSessionState","cookieName","rawValue","curentCookie","startsWith","findCookieValue","decoded","ss","COOKIE_NAME","ACTIVITY_EVENTS","LISTENER_OPTIONS","capture","passive","SessionManager","cleanupListeners","activityListenersByEventType","markActivity","recentActivity","inactivityTimeoutSeconds","periodicCheckSeconds","sessionListeners","sessionState","getSessionState","updateSessionStatus","updateHandle","isNew","updatedAt","repeat","bits","createSessionState","maxAge","createCookie","top","isIframe","writeAndRenewCookie","PERIOD_CHECK_SECONDS","INACTIVITY_TIMEOUT_SECONDS","getCollectorURL","dataCollectionServiceURL","getPOCCollectorURL","openTelemetryURL","splunkProvider","shouldDisableAutocapture","createXhrPlugin","isResponse","json","createSCSFetchInstrumentation","setupInstrumentations","obfuscateParams","userDefinedRedactFn","shouldRemoveQueryParams","Obfuscator","H","_createSplunkOtelPlugin__WEBPACK_IMPORTED_MODULE_0__","_session__WEBPACK_IMPORTED_MODULE_0__","__WEBPACK_REEXPORT_OBJECT__","__WEBPACK_IMPORT_KEY__","__webpack_module_cache__","moduleId","cachedModule","definition","prop","_opentelemetry_x_exporters__WEBPACK_IMPORTED_MODULE_1__","_splunk_otel_plugin__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_2__","unsuppressTracing","BAGGAGE_KEY_PAIR_SEPARATOR","BAGGAGE_PROPERTIES_SEPARATOR","BAGGAGE_ITEMS_SEPARATOR","BAGGAGE_MAX_TOTAL_LENGTH","parseKeyPairsIntoRecord","AnchoredClock","systemClock","monotonicClock","_monotonicClock","_epochMillis","_performanceMillis","delta","loggingErrorHandler","setGlobalErrorHandler","handler","hrTimeToTimeStamp","precision","tmp","nanoString","toISOString","hrTimeToMilliseconds","hexToBase64","hexStr","hexStrLen","hexAsciiCharsStr","hexPair","hexVal","btoa","RPC_METADATA_KEY","setRPCMetadata","meta","deleteRPCMetadata","getRPCMetadata","ignoredUrls_1_1","_export","_toZipkinAnnotations","_toZipkinTags","defaultStatusErrorTagName","defaultStatusCodeTagName","core_1","zipkinTypes","ZIPKIN_SPAN_KIND_MAPPING","CLIENT","SERVER","CONSUMER","PRODUCER","INTERNAL","statusCodeTagName","statusErrorTagName","UNSET","serviceName","annotations","extractAppName","versionLabel","username","splunkdPath","serverTimezoneInfo","rootPath","locale","buildPushNumber","buildNumber","appBuild","app","isAvailable","CSRFToken","_get","_cookie","get$CEntry","pathMatch","regex","_obfuscate__WEBPACK_IMPORTED_MODULE_0__","AUTH_URL_REGEX","TENANT_KEY","obfuscateArgs","obfuscateFn","obfuscateAttributes","tenantUrlRegexes","userWithoutEmail","PIIData","userProperties","redactedAttributes","processAttribute","obfuscatedValue","attribute","obfuscateString","field","updatedValue","tenantRegexes","looksLikeTenant","_obfuscate__WEBPACK_IMPORTED_MODULE_1__","_Obfuscator__WEBPACK_IMPORTED_MODULE_0__","sha256_namespaceObject","sha256_default","identity","defineProperty_namespaceObject","ACTION_NAMES","Telemetry","callbacksByAction","invokeCallbacks","action","params","callbacks","callback","onPluginReady","addPlugin","disposeList","actionName","frozenParams","param","freeze","dispose","createTelemetry","_attributes__WEBPACK_IMPORTED_MODULE_0__","endsWith","_attributes__WEBPACK_IMPORTED_MODULE_2__","_pii__WEBPACK_IMPORTED_MODULE_3__","_telemetry_createTelemetry__WEBPACK_IMPORTED_MODULE_0__","_util_isInternalUser__WEBPACK_IMPORTED_MODULE_6__","_types__WEBPACK_IMPORTED_MODULE_1__","CryptoJS","crypto","msCrypto","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","subtype","C","C_lib","lib","Base","extend","overrides","mixIn","$super","properties","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","charCodeAt","Utf8","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","_minBufferSize","nBytesReady","offset","_doProcessBlock","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","W","SHA256","_hash","M","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","HmacSHA256","BrowserInfo","NodeInfo","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","parseUserAgent","product","getNodeVersion","matchUserAgent","ua","matched","uaMatch","browserName","matchedRule","versionParts","count","ii","createVersionParts","detectOS","searchBotMatch","array","iteratee","accumulator","initAccum","collection","eachFunc","arrayReduce","baseEach","baseIteratee","baseReduce","funktion","propertyIsEnumerable","nodule","wrapper","wrapped","nodules","names"],"sourceRoot":""}